
import {
    ParserFramework,
    KernelParserCore2,
    fillByteBufferWithUTF8FromString
} from "@candlelib/hydrocarbon";


const {
    token_production,
    init_table,
    KernelStateIterator,
    run,
    compare
} = KernelParserCore2;

const token_sequence_lookup = new Uint8Array([
47,42,42,61,44,123,125,59,40,41,58,61,61,61,35,91,93,46,46,46,63,63,61,37,61,
43,61,45,61,60,60,61,62,62,62,61,38,38,61,94,61,124,124,61,33,61,61,126,96,36,
123,92,47,34,39,48,88,95,105,110,115,116,97,110,99,101,111,102,101,120,116,101,
110,100,115,100,101,98,117,103,103,101,114,97,119,97,105,116,102,117,110,99,
116,105,111,110,119,104,105,108,101,99,111,110,116,105,110,117,101,108,101,116,
98,114,101,97,107,114,101,116,117,114,110,116,97,114,103,101,116,115,119,105,
116,99,104,118,111,105,100,121,105,101,108,100,110,117,108,108,109,101,116,97,
69,70,65,66,67,68,49,55,50,51,52,53,54,47,47,42,47,63,46,43,43,45,45,48,120,
105,109,112,111,114,116,101,120,112,111,114,116,100,101,102,97,117,108,116,97,
115,121,110,99,102,105,110,97,108,108,121,119,105,116,104,99,111,110,115,116,
121,112,101,111,102,115,116,97,116,105,99,118,97,114,110,101,119,47,61,48,66,
48,98,48,79,48,111,105,102,101,108,115,101,100,101,108,101,116,101,100,111,102,
97,108,115,101,102,114,111,109,102,111,114,99,97,116,99,104,99,108,97,115,115,
99,97,115,101,116,104,114,111,119,116,104,105,115,116,114,117,101,116,114,121,
115,117,112,101,114
])

const token_lookup = new Uint32Array([
384,1073741824,0,16777216,0,0,384,0,0,16777216,0,0,8655264,3893460992,8,2502427136,
511,0,8655264,3356590080,8,2502427136,511,0,384,536870912,0,16777216,0,0,384,
0,0,16777216,256,0,547430786,671613440,4294967284,19271679,0,0,384,512,0,16777216,
0,0,547430786,671612928,4294967284,19271679,256,0,4480,0,0,16777216,0,0,8388992,
536870912,0,16777216,0,0,8393088,0,0,16777216,0,0,384,0,0,18874368,0,0,384,0,
0,31457280,0,0,384,0,0,27262976,0,0,1558184352,2281989375,8,2500850560,255,0,
1099174304,3356852224,8,2503996288,511,0,262528,134217728,0,17301504,256,0,384,
0,0,17825792,256,0,16777600,0,0,16777216,0,0,262528,134217728,0,18350080,0,0,
1099174304,3356852224,8,2502947712,511,0,16785792,0,0,16777216,0,0,8576,0,0,
16777216,0,0,16777600,0,0,17825792,0,0,8388992,671088640,0,16777216,0,0,386,
0,0,16777216,0,0,384,268435456,0,16777216,0,0,416,0,0,16777216,0,0,2712478082,
940048896,4294967284,19271679,0,0,384,524288,0,16777216,0,0,2712478082,939524608,
4294967284,1093013503,3145728,0,416,0,0,16777216,256,0,416,536870912,0,16777216,
0,0,2712478082,402653696,4294967284,19271679,3145728,0,2712478082,402653696,
4294967284,1093013503,3145728,0,2712478082,939524608,4294967284,19271679,3145728,
0,556343682,268435968,4293918720,16781311,0,0,556343682,268435968,4293918720,
16779263,0,0,556278146,268435968,4293918720,16777727,0,0,556278146,268435968,
4293918720,16777343,0,0,556278146,268435968,4293918720,16777231,0,0,19407234,
268435968,2146435072,16777216,0,0,19407234,268435968,133169152,16777216,0,0,
19407234,268435968,66060288,16777216,0,0,19407234,268435968,32505856,16777216,
0,0,19407234,268435968,9437184,16777216,0,0,19407234,268435968,7340032,16777216,
0,0,19407234,268435968,3145728,16777216,0,0,19407234,268435968,1048576,16777216,
0,0,2704089474,268435968,4294967284,17174527,0,0,2712478082,939524608,4294967284,
19271679,0,0,556343682,268435968,4294967280,17174527,0,0,1082397088,3356852224,
8,2502947712,511,0,2105728,0,0,16777216,0,0,8716672,536870912,0,352321536,256,
0,8716672,0,0,352321536,256,0,1048960,0,0,16777216,0,0,2097536,0,0,16777216,
0,0,8388992,0,0,16777216,0,0,1558200736,2281989375,8,2500850560,255,0,1558466978,
3356878079,8,2502947712,511,0,328064,0,0,16777216,256,0,1057152,0,0,16777216,
0,0,328064,0,0,16777216,0,0,65920,0,0,16777216,0,0,1180032,0,0,16777216,0,0,
196992,0,0,16777216,0,0,131456,0,0,16777216,0,0,262528,0,0,16777216,0,0,532864,
0,0,16777216,256,0,532864,0,0,16777216,0,0,524672,0,0,16777216,0,0,1712512,0,
0,16777216,0,0,1581440,0,0,16777216,0,0,1558466976,3356878079,8,2502947712,511,
0,360832,1163267,0,16777216,0,0,98688,1163267,0,16777216,0,0,384,1146883,0,16777216,
0,0,469762432,128,0,16777216,0,0,1558974880,3356878079,8,2502947712,511,0,1592578466,
3356878335,8,2502947712,511,0,1558450592,3356878079,8,2502947712,511,0,384,3,
0,16777216,0,0,384,1,0,16777216,0,0,384,2,0,16777216,0,0,2097536,0,0,16777216,
256,0,1084494240,3356852224,8,2502947712,511,0,256,0,0,16777216,0,0,1558450592,
3356878076,8,2502947712,511,0,1558184352,2283136252,8,2500850560,255,0,8388992,
65536,0,16777216,256,0,384,65536,0,16777216,0,0,8454528,0,0,16777216,256,0,8388992,
0,0,16777216,256,0,17039744,134217728,0,18350080,256,0,1558974880,3357009151,
8,2502947712,511,0,384,128,0,16777216,0,0,557440,256,0,16777216,0,0,524672,256,
0,16777216,0,0,1559007648,3356878335,8,2502947712,511,0,1558974880,3356878335,
8,2502947712,511,0,384,6144,0,16777216,0,0,1592578466,3356882431,8,2502947712,
511,0,2105728,0,16,16777216,0,0,384,0,16,16777216,0,0,1559007650,3356878335,
8,2502947712,511,0,1558483362,3356878335,8,2502947712,511,0,1082392992,2283110400,
8,2500850560,511,0,262528,134217728,0,18350080,256,0,384,98304,0,16777216,0,
0,384,32768,0,16777216,0,0,65920,0,0,16777216,256,0,1082462624,3356852224,8,
2502947712,511,0,1558450592,3357009151,8,2502947712,511,0,1558184352,2282120447,
8,2500850560,255,0,8655264,2282848256,8,2500329984,511,0,384,1048576,0,16777216,
0,0,262528,2097152,0,16777216,0,0,2687392,264241152,0,2499805184,287,0,262528,
2097152,0,16777216,256,0,2163104,264241152,0,2499805184,287,0,384,16777216,0,
16777216,0,0,10551712,134217728,16,2499805184,287,0,384,33554432,0,16777216,
0,0,10486176,134217728,16,2499805184,287,0,384,67108864,0,16777216,0,0,2163104,
146800640,0,2499805184,287,0,384,134217728,0,16777216,0,0,10486144,0,16,16777216,
0,0,65952,251658240,0,2499805184,287,0,8454560,134217728,0,2499805184,287,0,
65952,134217728,0,2499805184,287,0,8389024,134217728,0,2499805184,287,0,8651168,
2282848256,8,2500329984,511,0,384,671088640,0,16777216,0,0,4480,1073741824,0,
16777216,0,0,384,0,1,16777216,0,0,384,0,2,16777216,0,0,19407232,268435968,0,
16777216,0,0,17301888,268435968,0,16777216,0,0,1099182496,3356852224,8,2503996288,
511,0,8388992,134217728,0,18874368,256,0,8651168,135364608,8,2502427136,511,
0,8651168,135364608,8,2500329984,511,0,1082397088,3356852224,8,2503996288,511,
0,1082392992,2283110400,8,2501899136,511,0,384,0,1048544,16777216,0,0,384,0,
32,16777216,0,0,384,0,64,16777216,0,0,384,0,128,16777216,0,0,384,0,256,16777216,
0,0,384,0,512,16777216,0,0,384,0,1024,16777216,0,0,384,0,2048,16777216,0,0,384,
0,4096,16777216,0,0,384,0,8192,16777216,0,0,384,0,16384,16777216,0,0,384,0,32768,
16777216,0,0,384,0,65536,16777216,0,0,384,0,131072,16777216,0,0,384,0,262144,
16777216,0,0,384,0,524288,16777216,0,0,1082392992,2282848256,8,2500850560,511,
0,556343682,268435968,4293918720,17174527,0,0,65952,264241152,0,2499805184,287,
0,65952,146800640,0,2499805184,287,0,328096,260046848,0,2499805184,287,0,416,
134217728,0,2499805184,287,0,2097536,0,16,16777216,0,0,328064,8388608,0,16777216,
0,0,19407234,268435968,24117248,16777216,0,0,1082397088,3356590080,8,2502947712,
511,0,8655264,3356590080,8,2502820352,511,0,8651168,2282848256,8,2500723200,
511,0,262528,134217728,0,17301504,0,0,262528,0,0,17301504,0,0,384,0,0,17301504,
0,0,416,134217728,0,2500853760,287,0,524672,0,0,17825792,0,0,270720,134217728,
0,17301504,256,0,270720,402653184,0,18350080,256,0,8576,268435456,0,16777216,
0,0,17310080,268435456,16,16777216,0,0,384,268435456,0,17825792,0,0,8576,268435456,
0,17825792,0,0,262528,402653184,0,18350080,256,0,532864,512,16,16777216,0,0,
532864,0,16,16777216,0,0,416,134217728,0,2499805184,31,0,524704,134217728,0,
2500853760,287,0,384,0,0,17825792,0,0,65952,251658240,0,2500853760,287,0,8987040,
134218240,16,2499805184,287,0,8921504,134218240,16,2499805184,287,0,65952,134217728,
0,2500853760,287,0,11018624,512,16,16777216,0,0,8388992,512,0,16777216,0,0,590240,
251658240,0,2500853760,287,0,428,0,0,50332160,524288,0,0,0,0,16777216,0,0,384,
0,0,16777728,0,0,2712478082,939524608,4294967284,19271679,2048,0,1082405280,
3625287680,8,2503996288,511,0,1082405280,3356852224,8,2503996288,511,0,1082397088,
3625287680,8,2503996288,511,0,384,0,0,23068672,0,0,384,0,0,25165824,0,0,0,0,
0,14680064,0,0,524672,0,0,18874368,0,0,524672,0,0,25165824,0,0,524288,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,12582912,0,0,0,0,0,6291456,0,0,384,0,0,352321536,0,0,384,
0,0,83886080,0,0,0,0,0,201326592,0,0,384,0,0,285212672,0,0,0,0,0,805306368,0,
0,384,0,0,50331648,0,0,428,0,0,16777216,0,0,2712478082,939524608,4294967284,
1093013503,3146240,0,384,0,0,2164260864,1,0,384,0,0,2164260864,0,0,2712478082,
939524608,4294967284,19271679,512,0,384,0,0,16777216,1,0,384,0,0,16777216,6,
0,384,0,0,16777216,2,0,384,0,0,16777216,4,0,384,0,0,16777216,192,0,384,0,0,16777216,
64,0,384,0,0,16777216,128,0,384,0,0,16777216,24,0,384,0,0,16777216,8,0,384,0,
0,16777216,16,0,524672,0,0,16777216,256,0,428,0,0,50331648,524288,0,384,0,0,
16777216,524288,0,128,0,0,16777216,0,0,388,0,0,16777216,0,0,392,0,0,16777216,
0,0,2,0,0,16777216,0,0,384,0,0,16777216,3145728,0,384,0,0,16777216,1048576,0,
416,0,0,16777472,0,0,384,0,0,16777216,2097152,0,1082401184,2283110400,8,2501899136,
511,0,416,0,0,16777216,4293918720,0,384,0,0,16777216,4194304,0,384,0,0,16777216,
8388608,0,384,0,0,16777216,16777216,0,384,0,0,16777216,33554432,0,384,0,0,16777216,
67108864,0,384,0,0,16777216,134217728,0,384,0,0,16777216,268435456,0,384,0,0,
16777216,536870912,0,384,0,0,16777216,1073741824,0,384,0,0,16777216,2147483648,
0,2712478114,939524608,4294967284,19271679,4293919232,0,384,0,0,16777216,0,3,
384,0,0,16777216,0,1,384,0,0,16777216,0,2,2712478082,939524608,4294967284,19271679,
512,3,384,0,0,16777216,0,255,384,0,0,16777216,0,4,384,0,0,16777216,0,8,384,0,
0,16777216,0,16,384,0,0,16777216,0,32,384,0,0,16777216,0,64,384,0,0,16777216,
0,128,2712478082,939524608,4294967284,19271679,512,255,428,0,0,33554432,0,0,
428,0,0,44040192,0,0,2,0,0,0,0,0,128,0,0,0,0,0,256,0,0,0,0,0,4,0,0,0,0,0,32,
0,0,0,0,0,8,0,0,0,0,0,0,0,0,33554432,0,0,300,0,0,0,0,0,428,0,0,0,0,0,1452,0,
0,0,0,0,2560,0,0,0,0,0,512,0,0,0,0,0,1024,0,0,0,0,0,2048,0,0,0,0,0,430,0,0,0,
0,0,130,0,0,0,0,0,428,0,0,369098752,0,0,0,0,0,67108864,0,0,428,0,0,301989888,
0,0,0,0,0,268435456,0,0,8,0,0,0,1536,0,0,0,0,0,512,0,0,0,0,0,1024,0,40,0,0,0,
1536,0,428,0,0,100663296,0,0,2,0,0,0,24576,0,32,0,0,256,0,0,0,0,0,0,1,0,2,536870912,
0,0,24576,0,0,0,0,0,4,0,0,0,0,0,0,3,0,0,0,0,0,1,0,0,0,0,0,2,2,0,0,0,0,3,32,0,
0,0,4293918720,0,0,0,0,0,4194304,0,0,0,0,0,8388608,0,0,0,0,0,16777216,0,0,0,
0,0,33554432,0,0,0,0,0,67108864,0,0,0,0,0,2097152,0,0,0,0,0,134217728,0,0,0,
0,0,268435456,0,0,0,0,0,536870912,0,0,0,0,0,1073741824,0,0,0,0,0,2147483648,
0,0,0,0,0,1048576,0,34,0,0,0,4293918720,0,0,0,0,0,24,0,0,0,0,0,8,0,0,0,0,0,16,
0,0,0,0,0,0,255,0,0,0,0,0,4,0,0,0,0,0,8,0,0,0,0,0,16,0,0,0,0,0,32,0,0,0,0,0,
64,0,0,0,0,0,128,2,0,0,0,0,255,469762432,0,0,16777216,0,0,67109248,0,0,16777216,
0,0,134218112,0,0,16777216,0,0,268435840,0,0,16777216,0,0,1082130816,0,0,16777216,
0,0,1084494240,3356868611,8,2502947712,511,0,384,16384,0,16777216,0,0,2684354944,
0,0,16777216,0,0,1075839360,262144,0,17297792,0,0,8655264,3356606467,8,2502427136,
511,0,2147484032,0,0,16777216,0,0,4293783970,4162185215,4294967292,2502950911,
511,0,4282511776,4027967487,4294967292,2500459647,511,0,524290,0,0,0,0,0
]);

const states_buffer = new Uint32Array([
0,4026531840,2164260864,4026531841,2583756862,1,65538,4026531840,0,603979788,
0,0,2785017860,131073,262171,2235564080,2147483777,2231369746,2206203971,2231369780,
2202009605,2147483782,2227175447,2147483784,2147483753,2147483770,2147483707,
2176843788,2147487805,2147483710,2151677999,2164260927,2172649587,2176843893,
2147483772,2147483775,2147483776,2147483778,2147483779,2147483780,2147483781,
2147483783,603979824,0,603979826,0,4026531840,0,603990749,0,603990960,0,2583756936,
327681,65538,4026531840,0,603979836,0,0,2516582441,393217,65538,603979848,0,
603979844,0,0,2147483690,603984403,603997608,0,2852192261,524289,1,2147483784,
2147483814,268435456,1073809564,805306534,0,4026531840,2583756812,589825,65538,
4026531840,0,603979866,0,0,2785017860,655361,65538,2147483709,2143293463,603979826,
0,603979876,0,4026531840,2852192260,720897,1,2147483660,2147483734,268435456,
603980921,0,4026531840,0,2583756917,786433,65538,4026531840,0,603979894,0,0,
2516582517,851969,196610,4026531840,0,603979914,0,603979906,0,603979914,0,0,
2785017858,917505,65538,2147483767,2143289461,603979914,0,4026531840,2852192259,
917505,1,2147483765,2147483786,603997104,0,4026531840,2852126819,983041,327725,
2302769184,2302769185,2302695458,2235594787,2302711844,2172798981,2302730278,
2222999591,2147487848,2147620969,2147549226,2277554213,2147487852,2214668333,
2223067182,2147487855,2147487856,2147483761,2210498610,2147608691,2147612731,
2147667989,2147678230,2147495959,2214600771,2227179623,2181056538,2118141979,
2176862236,2147487853,2147598366,2168563775,2147487854,2147483762,2147629178,
2147629180,2147641471,2147641472,2147645569,2147645570,2147649667,2147649668,
2147653765,2147664006,2147664007,603994820,0,603995279,0,603991536,0,268435456,
603980070,0,603981939,0,2147483680,268435456,603982719,0,2147483681,268435456,
603982740,0,2147483682,268435456,603982761,0,2147483683,268435456,603982822,
603991032,0,2147483684,268435456,603982828,0,2147483692,268435456,603984503,
603981959,0,2147483696,268435456,603984585,603981886,0,2147483697,268435456,
603984588,603984594,0,603981911,0,2147483712,268435456,603987120,0,268435456,
603980300,0,2147483740,268435456,603991698,603995279,0,603996161,0,2147483780,
268435456,603996913,0,2147483784,268435456,603996863,0,603997351,0,2147483806,
268435456,603997461,0,603997478,0,603997527,0,603997631,0,2147483810,268435456,
1073809540,805306530,0,603997576,0,2147483674,268435456,1073748232,805306394,
0,2147483676,268435456,603982343,0,4026531840,2852126724,1048577,327719,2147487872,
2147487873,2147487874,2281705539,2147487876,2277511173,2147487878,2273316967,
2273316968,2147487849,2239762482,2147487806,2189430796,2147487853,2147487854,
2189430831,2202013744,2147487857,2113933330,2147487859,2202013748,2147487861,
2147487852,2147487767,2147487768,2147487855,2147487866,2147487803,2147487868,
2147487856,2067795998,2160070719,2147487858,2147483764,2147487871,2147487875,
2147487877,2147487879,2147487880,603980118,0,603980162,0,4026531840,0,2785017860,
1114113,131076,2147483784,2147487859,2147487762,2139099195,603980130,0,603980150,
0,4026531840,2852192261,1179649,1,2147483764,2147483845,268435456,603980140,
603997776,0,4026531840,2852192260,1245185,1,2147483672,268435456,1073797400,
805306479,0,4026531840,0,2852192262,1310721,1,2147483764,2147483846,268435456,
603980140,603997788,603995037,0,4026531840,0,2852126727,1376257,327718,2147491968,
2147491969,2147491970,2277515331,2147491972,2273320965,2147491974,2269126759,
2269126760,2147491945,2239766578,2147491902,2189434892,2147491949,2147491950,
2189434927,2202017840,2147491953,2113937426,2147491955,2147491892,2147491957,
2147491948,2147491863,2147483672,2147491951,2147491962,2147491899,2147491964,
2147491952,2067800094,2155880511,2147491954,2147491967,2147491971,2147491973,
2147491975,2147491976,268435456,1073797136,805306479,0,603980212,603991032,0,
4026531840,0,2852126727,1441793,65538,2147489816,2147483661,268435456,603980234,
0,268435456,1073797400,805306480,0,4026531840,0,2852192259,1507329,1,2147483661,
268435456,603980234,0,4026531840,2852126726,1572865,65538,2151682072,2147483764,
603980246,0,268435456,1073797408,805306479,0,4026531840,2785017860,1114113,131076,
2147483784,2147487859,2147487762,2139099195,603980258,0,603980278,0,4026531840,
2852192261,1179649,1,2147483764,2147483845,268435456,603980268,603997776,0,4026531840,
2852192260,1245185,1,2147483672,268435456,1073797672,805306479,0,4026531840,
0,2852192262,1310721,1,2147483764,2147483846,268435456,603980268,603997788,603995037,
0,4026531840,0,2852192260,1245185,1,2147483672,268435456,1073797400,805306480,
0,4026531840,0,2852126733,1638401,65539,2155880507,2143305751,2147483709,268435456,
603980320,603997700,0,268435456,603980323,603991032,0,2147483735,268435456,603980333,
603991346,0,4026531840,1073787928,805306448,0,2852192260,1769473,1,2147483708,
268435456,1073788192,805306448,0,4026531840,0,1073789456,805306453,0,2852192260,
1835009,1,2147483653,2147483806,268435456,603997461,0,4026531840,0,2583691315,
1900545,65539,805306459,0,0,1073776392,805306434,0,0,1073776392,805306434,0,
2583691325,2031617,65538,603980393,0,603980367,0,0,2785017860,2097153,65538,
2147487880,2147483653,603980377,0,603980390,0,4026531840,2852192261,2162689,
1,2147483709,2147483852,268435456,603980387,603997984,0,4026531840,1073875028,
805306525,0,1073779720,805306525,0,2583691390,2293761,65540,1073779720,805306525,
0,0,268435456,1073779728,805306523,0,0,2583691412,2359297,131075,1073779720,
805306524,0,603980417,603997934,0,603980417,603997934,0,1073875028,805306524,
0,2583691315,1900545,65539,1073791240,805306459,0,805306479,0,0,0,805306479,
0,2852126724,2424833,1,2147483755,268435456,603980442,603994494,0,805306477,
0,1073795096,805306476,0,2852126724,2490369,65539,2155872272,2147483753,2147483754,
268435456,603980457,603994494,0,805306474,0,1073794840,805306475,0,2852126724,
2555905,65538,2147483752,2147483751,268435456,603980472,603994644,0,805306473,
0,0,1073794584,805306474,0,2852126724,2621441,65539,2155872356,2147483749,2147483750,
268435456,603980487,603994316,0,805306472,0,1073794328,805306473,0,2852126732,
2686977,131078,2147483744,2160082973,2147483746,2155872351,2147483745,2147491939,
268435456,603980514,603994132,0,268435456,603980517,603994132,0,268435456,603980520,
603994132,0,805306471,0,0,1073793560,805306472,0,1073793816,805306472,0,1073794072,
805306472,0,2852126724,2752513,131076,2147483740,2147483741,2147483742,2147483739,
268435456,603980537,603993934,0,805306470,0,0,1073793304,805306471,0,2852126724,
2818049,1,2147483738,268435456,603980550,603993742,0,805306469,0,1073793048,
805306470,0,2852126724,2883585,1,2147483737,268435456,603980563,603993552,0,
805306468,0,1073793048,805306469,0,2583691351,2949121,131076,805306466,0,0,0,
268435456,603980582,603993154,0,268435456,603980585,603993358,0,0,1073792792,
805306467,0,1073793048,805306468,0,2852126724,3014657,1,2147483735,268435456,
603980582,603993154,0,805306464,0,2852126724,3080193,1,2147483734,268435456,
603980608,603993154,0,805306465,0,1073792536,805306466,0,2852126724,3145729,
1,2147483733,268435456,603980621,603992952,0,805306464,0,1073792536,805306465,
0,2852126724,3211265,1,2147483732,268435456,603980634,603992336,0,805306463,
0,2852192260,458753,1,2147483689,268435456,603980644,603992336,0,4026531840,
0,1073792296,805306463,0,2852126726,3276801,1,2147483714,2147483738,268435456,
603980659,603991520,603991434,0,805306445,0,1073790480,805306457,0,2852126743,
3342337,131077,2147502139,2160066621,2147518530,2134908951,2147510389,268435456,
603980696,603997700,0,2147483735,268435456,603980699,603991346,0,268435456,603980702,
603991032,0,2147483786,603980712,603997104,0,2147483738,268435456,603980659,
603991520,603991434,0,805306445,0,0,1073786904,805306452,0,1073788944,805306452,
0,2852192260,1769473,1,2147483708,268435456,1073786656,805306452,0,4026531840,
0,1073789200,805306452,0,2852126743,3342337,131077,2147493947,2160085053,2147518530,
2134900759,2147510389,2147483735,268435456,603980749,603991346,0,268435456,603980752,
603991032,0,268435456,603980762,603997700,0,2147483786,603980765,603997104,0,
2147483738,268435456,603980659,603991520,603991434,0,805306446,0,0,1073777168,
805306436,0,2852192260,1769473,1,2147483708,268435456,1073786656,805306447,0,
4026531840,0,1073786904,805306447,0,1073787152,805306447,0,2852126731,3407873,
262162,2147491920,2210406481,2210406482,2147491923,2147483716,2147491909,2147491910,
2147491911,2147491912,2147491913,2147491914,2147491915,2147491916,2147491917,
2147491918,2147491919,2147498097,2147498098,268435456,603980802,603992336,0,
603980805,603992164,0,268435456,1073796624,805306478,0,805306478,0,1073791768,
805306461,0,603980808,603992336,0,1073792024,805306461,0,2583691277,3538945,
65540,603980836,603981886,0,0,268435456,603980833,603992336,0,0,2852192260,1507329,
1,2147483661,268435456,603980833,603992336,0,4026531840,0,1073786392,805306444,
0,1073748496,805306395,0,1073776152,805306433,0,1073747472,805306385,0,2583756812,
589825,65538,4026531840,0,603980853,0,0,2785017860,3604481,131079,2168455184,
2147487805,2155872274,2147483671,2147483770,2151678076,2147483784,603980869,
0,603979826,0,4026531840,0,2852192259,589825,1,2147483660,268435456,603980877,
0,4026531840,2852126730,3670017,131078,2164260880,2147489914,2143289362,2147495959,
2151684220,2147483784,603980897,603981160,0,603980915,603997351,0,268435456,
603980931,603992336,0,4026531840,2852192262,3735553,1,2147483668,2147483662,
268435456,603980909,603981366,603997351,0,4026531840,0,603980912,603981886,0,
1073743392,805306375,0,603980918,603981886,0,1073743640,805306375,0,2852192260,
3866625,1,2147483671,268435456,603980931,603992336,0,4026531840,0,2852192260,
1245185,1,2147483672,268435456,1073789728,805306454,0,4026531840,0,2852126823,
3932161,327726,2306963488,2306963489,2306889762,2239789091,2306906148,2172807173,
2306924582,2239776807,2147487848,2147629161,2147549226,2281748517,2147487852,
2227251245,2172758030,2147487855,2147487856,2147483761,2214692914,2147616883,
2202095662,2147676181,2147686422,2147495959,2147620923,2214600771,2185250842,
2134919195,2181056540,2214596711,2147606558,2172766271,2147487853,2147487854,
2147483762,2147637370,2147637372,2147649663,2147649664,2147653761,2147653762,
2147657859,2147657860,2147661957,2147672198,2147672199,603994820,0,603995279,
0,603991536,0,268435456,603980070,0,603981939,0,2147483680,268435456,603982719,
0,2147483681,268435456,603982740,0,2147483682,268435456,603982761,0,2147483683,
268435456,603982822,603991032,0,2147483684,268435456,603982828,0,2147483692,
268435456,603984503,603981959,0,2147483696,268435456,603984585,603981886,0,2147483697,
268435456,603984588,603984594,0,603981911,0,2147483712,268435456,603987120,0,
2147483658,268435456,603981733,0,268435456,603980300,0,2147483740,268435456,
603991698,603995279,0,603996161,0,2147483780,268435456,603996913,0,2147483784,
268435456,603996863,0,603997351,0,2147483806,268435456,603997461,0,603997478,
0,603997527,0,603997631,0,2147483810,268435456,1073809540,805306530,0,603997576,
0,2147483674,268435456,1073748232,805306394,0,2147483676,268435456,603982343,
0,4026531840,0,2852126723,3997697,327734,2336227360,2336227361,2336227362,2273312803,
2336227364,2172649477,2336227366,2260729895,2336227432,2147483753,2147483690,
2311061541,2243952652,2243952685,2189426702,2243952687,2243952688,2147483761,
2176843794,2147483763,2147483700,2231369749,2147483670,2147483671,2202009646,
2210398258,2214592538,2155872283,2210398236,2147483707,2155872286,2202009663,
2147483710,2210398275,2222981223,2147483756,2147483757,2147483758,2147483759,
2147483760,2147483762,2147483765,2147483770,2147483772,2147483775,2147483776,
2147483777,2147483778,2147483779,2147483780,2147483781,2147483782,2147483783,
2147483784,603981157,603982045,0,805306372,0,1073742864,805306373,0,2852126736,
4063233,65539,2151694352,2151702546,2147483784,2147483656,2147483657,2147483664,
603981184,603981218,603981402,603997680,0,2147483656,603981196,603981275,0,2147483656,
603981196,603981300,0,4026531840,0,2852126726,4128769,65538,2147483668,2147489805,
1073743880,805306376,0,268435456,603981199,0,4026531840,1073743880,805306376,
0,2852126730,4194305,65538,2151677968,2147493906,2147483660,268435456,603981215,
603981285,0,2147483661,268435456,603981215,603981310,0,4026531840,1073744152,
805306376,0,1073744392,805306377,0,2852126727,4194305,65538,2151677968,2147489810,
2147483659,603981235,0,2147483659,603981263,603981300,0,4026531840,0,2583756816,
4259841,65538,4026531840,0,603981243,0,0,2785017860,4325377,65538,2147487764,
2147483665,603981253,0,603981265,0,4026531840,2852192261,4390913,1,2147483664,
2147483660,268435456,603981263,603981285,0,4026531840,805306379,0,2852192260,
4259841,1,2147483664,268435456,1073745416,805306379,0,4026531840,0,2852192260,
4259841,1,2147483664,2147483660,268435456,603981285,0,4026531840,0,2852192262,
4456449,1,2147483665,268435456,2147483664,603981297,603981402,603997680,0,4026531840,
0,1073745688,805306380,0,2852192260,4521985,1,2147483666,2147483661,268435456,
603981310,0,4026531840,0,2852126734,4587521,65539,2147483784,2151692301,2147504147,
2147483840,268435456,1073809580,805306536,603981332,603997733,0,268435456,603981356,
0,268435456,1073746192,805306381,0,4026531840,0,2852126727,4653057,65538,2147489811,
2143289357,268435456,603981346,0,268435456,1073745944,805306381,0,4026531840,
0,2852192260,4718593,1,2147483667,268435456,1073745952,805306381,0,4026531840,
0,2852192260,4718593,1,2147483667,268435456,1073746200,805306381,0,4026531840,
0,1073746448,805306382,0,2852192262,327681,1,2147483784,2147483663,268435456,
1073809580,805306536,603981405,0,4026531840,0,2852126729,4784129,131076,2147495956,
2151690253,2147483665,2147495955,268435456,2147483664,603981399,603981402,603997680,
0,1073747208,805306384,0,4026531840,0,1073746968,805306383,0,1073747208,805306384,
0,2768240648,0,65539,2155878416,2147497999,2147483816,603981405,603981381,0,
1073746696,805306383,3221225484,0,0,4026531840,0,2852126750,4915201,327734,2336280608,
2336280609,2336280610,2273366051,2336280612,2172702725,2336280614,2260783143,
2336280680,2147537001,2147536938,2311114789,2243977228,2244005933,2189479950,
2243960879,2243960880,2147537009,2176876562,2147537011,2147491892,2231422997,
2147536918,2147536919,2202062894,2210451506,2214645786,2155925531,2210451484,
2147536955,2155925534,2202062911,2147483710,2210451523,2223034471,2147537004,
2147537005,2147537006,2147537007,2147537008,2147537010,2147528821,2147537018,
2147537020,2147537023,2147537024,2147537025,2147537026,2147537027,2147537028,
2147537029,2147537030,2147537031,2147500168,2147483648,603981509,603979780,0,
2147483648,603981509,603981911,0,2147483648,603981509,603979828,0,2147483648,
603981509,603980845,0,2147483648,2147483672,603981509,603981957,603981959,0,
2147483648,603981509,603979886,0,2147483648,603981509,603980941,0,4026531840,
2768240782,0,393293,2160355328,2147637313,2147704898,2147637312,2168735748,2147758085,
2168721414,2147741703,2147524744,2374160452,2374234122,2147524678,2147698764,
2147692621,2147686478,2147680335,2147655760,2147655761,2147735570,2147729427,
2147674196,2269364245,2332217430,2147723287,2147723288,2147661913,2319689754,
2248386587,2248386588,2319609949,2147504286,2315409503,2235803680,2235803681,
2235803682,2239997987,2239997988,2147600485,2306977894,2147588199,2147582056,
2147575913,2219026474,2147563627,2219026476,2147551341,2147545198,2147537007,
2206443568,2147723313,2210582613,2218958939,2218952796,2227322976,2227316833,
2227310690,2147524664,2223110243,2147606628,2147569770,2147524732,2147557484,
2147530864,2147524740,2147524746,2147524757,2147489942,2147489946,2147516571,
2147496092,2147510429,2147496095,2147496096,2147496097,2147489954,2147489955,
2147483814,603981509,603980346,0,805306517,3221225557,0,1073809516,805306522,
3221225561,0,603981509,603980359,0,603981509,603980405,0,1073809524,805306522,
3221225571,0,805306459,3221225574,0,603981509,603980420,0,1073776648,805306434,
3221225581,0,603981509,603980432,0,805306476,3221225587,0,805306475,3221225590,
0,603981509,603980445,0,603981509,603980460,0,603981509,603980475,0,603981509,
603980490,0,603981509,603980523,0,603981509,603980540,0,603981509,603980553,
0,603981509,603980566,0,603981509,603980588,0,603981509,603980598,0,603981509,
603980611,0,603981509,603980624,0,805306461,3221225629,0,805306444,3221225632,
0,805306477,3221225635,0,805306447,3221225638,0,603981509,603980647,0,805306452,
3221225644,0,603981509,603980662,0,603981509,603980715,0,805306445,3221225653,
0,603981509,603980768,0,603981509,603980811,0,2583691315,1966081,65537,4026531840,
268435456,603981509,603980839,603988575,0,805306387,3221225671,0,805306386,3221225674,
0,805306374,3221225677,0,1073743112,805306374,3221225681,0,1073742600,805306373,
3221225685,0,603981509,603981095,0,1073742088,805306368,3221225692,0,0,4026531840,
0,2852126726,4980737,196617,2160074768,2147491873,2147483666,2168463392,2147491892,
2147491887,2147491886,2139103247,2147491888,1610612738,67110841,67110862,0,603981790,
0,4026531840,0,603981756,603981221,0,2852192262,3735553,1,2147483668,2147483662,
268435456,603981768,603981366,603997351,0,4026531840,0,603981771,603981886,0,
1073744672,805306378,0,2852192261,4521985,1,2147483666,2147483661,268435456,
603981784,603981310,0,4026531840,603981787,603981886,0,1073744920,805306378,
0,2852126735,5046273,196616,2155872272,2147502113,2160085024,2147502127,2147502132,
2147502128,2147489838,2130731023,603981756,603981221,0,2147483697,268435456,
603981818,603984588,603984594,0,603981818,603981911,0,268435456,603981821,0,
4026531840,0,1073744912,805306378,0,2852126734,3473409,327717,2147506304,2147506305,
2147506306,2273335363,2147506308,2269140997,2147506310,2264946791,2264946792,
2147506281,2227198002,2147506238,2189449228,2147506285,2147506286,2185232431,
2185232432,2147506289,2113951762,2147506291,2147493940,2147506293,2147506284,
2147506199,2147506287,2147506288,2147506298,2147506235,2147506300,2147506290,
2067814430,2151700543,2147506303,2147506307,2147506309,2147506311,2147506312,
2147483670,603981877,603981937,603985404,0,2147483717,268435456,603981877,603987806,
603997690,0,603981880,603992336,0,4026531840,0,1073745176,805306378,0,603981883,
603981886,0,1073745184,805306378,0,2583691285,3801089,65539,2147483668,603981904,
0,2147483668,603981896,0,0,2852192259,3801089,1,2147483669,268435456,805306388,
0,4026531840,3087032588,1880096769,65536,7,268435457,805306388,0,2852126734,
5111809,131077,2155892768,2147504161,2155880496,2147491887,2147483700,2147483669,
603981935,603987796,0,2147483669,2147483670,603981935,603981937,603985404,0,
2147483669,603981935,603984678,0,4026531840,0,805306389,0,805306390,0,2852126728,
5177345,131076,2147483676,2147491879,2147483674,2139095067,2147483671,603981955,
604001181,0,2147483671,603981955,603984138,0,4026531840,805306391,0,805306392,
0,2852192260,4521985,1,2147483666,2147483673,268435456,603981969,0,4026531840,
0,2852126727,5242881,327734,2336227360,2336227361,2336227362,2269118499,2336227364,
2172649477,2336227366,2256535591,2336227432,2147483753,2147483690,2311061541,
2239758348,2239758381,2239758382,2239758383,2239758384,2147483761,2172649490,
2235570195,2147483700,2231369749,2147483670,2147483671,2210398258,2147483707,
2214592538,2139095067,2210398236,2147483710,2143289374,2202009663,2214592579,
2227175527,2147483756,2147483757,2147483758,2147483759,2147483760,2147483762,
2147483763,2147483765,2147483770,2147483772,2147483775,2147483776,2147483777,
2147483778,2147483779,2147483780,2147483781,2147483782,2147483783,2147483784,
603982035,603984800,0,268435456,1073747984,805306393,0,4026531840,0,2852192260,
4718593,1,2147483667,268435456,1073747736,805306393,0,4026531840,0,2852126750,
4915201,327734,2336280608,2336280609,2336280610,2273366051,2336280612,2172702725,
2336280614,2260783143,2336280680,2147537001,2147536938,2311114789,2243969036,
2244005933,2189479950,2243960879,2243960880,2147537009,2176876562,2147537011,
2147491892,2231422997,2147536918,2147536919,2202062894,2210451506,2214645786,
2155925531,2210451484,2147536955,2155925534,2202062911,2147483710,2210451523,
2223034471,2147537004,2147537005,2147537006,2147537007,2147537008,2147537010,
2147528821,2147537018,2147537020,2147537023,2147537024,2147537025,2147537026,
2147537027,2147537028,2147537029,2147537030,2147537031,2147508360,2147483654,
603982133,603979780,0,2147483654,603982133,603981911,0,2147483654,603982133,
603980845,0,2147483654,603982133,603979828,0,2147483654,2147483672,603982133,
603981957,603981959,0,2147483654,603982133,603979886,0,2147483654,603982133,
603980941,0,4026531840,2768240771,0,393290,2147637312,2147637313,2147704898,
2147524678,2378354756,2386743381,2135166982,2147741703,2147524744,2382536795,
2361651210,2378336348,2147698764,2147692621,2147686478,2147680335,2147655760,
2147655761,2147735570,2147729427,2147674196,2080620565,2319634518,2147723287,
2147723288,2147661913,2307106842,2072225819,2076420124,2307027037,2147504286,
2302826591,2223220768,2223220769,2223220770,2223220771,2223220772,2147600485,
2294394982,2147588199,2147582056,2147575913,2202249258,2147563627,2202249260,
2147551341,2147545198,2147537007,2189666352,2147723313,2227322976,2227316833,
2227310690,2227304547,2147606628,2147569770,2147524664,2147557484,2147530864,
2147524740,2147524732,2147524746,2147524757,2147489942,2147489946,2147516571,
2147496092,2147510429,2147496095,2147496096,2147496097,2147489954,2147489955,
2147483814,603982133,603980346,0,805306517,3221225554,0,1073809516,805306522,
3221225558,0,603982133,603980359,0,603982133,603980405,0,1073809524,805306522,
3221225568,0,805306459,3221225571,0,603982133,603980420,0,1073776648,805306434,
3221225578,0,603982133,603980432,0,805306476,3221225584,0,805306475,3221225587,
0,603982133,603980445,0,603982133,603980460,0,603982133,603980475,0,603982133,
603980490,0,603982133,603980523,0,603982133,603980540,0,603982133,603980553,
0,603982133,603980566,0,603982133,603980588,0,603982133,603980598,0,603982133,
603980611,0,603982133,603980624,0,805306461,3221225626,0,805306444,3221225629,
0,805306477,3221225632,0,805306447,3221225635,0,603982133,603980647,0,805306452,
3221225641,0,603982133,603980662,0,603982133,603980715,0,805306445,3221225650,
0,603982133,603980768,0,603982133,603980811,0,2583691315,1966081,65537,4026531840,
268435456,603982133,603980839,603988575,0,805306387,3221225668,0,805306386,3221225671,
0,805306374,3221225674,0,1073743112,805306374,3221225678,0,0,4026531840,0,2852192260,
3866625,1,2147483671,268435456,603982353,603991032,0,4026531840,0,2852192260,
1245185,1,2147483672,268435456,603982363,603982851,0,4026531840,0,2583691289,
5308417,65540,1073749032,805306396,0,0,268435456,603982375,603982851,0,0,1073748792,
805306396,0,2852126750,5373953,327733,2332086304,2332086305,2332086306,2269171747,
2332086308,2172702725,2332086310,2256588839,2332086376,2147537001,2147536938,
2306920485,2239782924,2239811629,2239811630,2239766575,2239766576,2147537009,
2172682258,2147537011,2147491892,2227228693,2147536918,2147536919,2210451506,
2147536955,2210451482,2139148315,2206257180,2147483710,2143342622,2197868607,
2210451523,2223034471,2147537004,2147537005,2147537006,2147537007,2147537008,
2147537010,2147528821,2147537018,2147537020,2147537023,2147537024,2147537025,
2147537026,2147537027,2147537028,2147537029,2147537030,2147537031,2147500168,
2147483666,603982466,603979780,0,2147483666,603982466,603981911,0,2147483666,
603982466,603979828,0,2147483666,603982466,603979858,0,2147483666,2147483672,
603982466,603981957,603981959,0,2147483666,603982466,603979886,0,2147483666,
603982466,603979922,0,4026531840,0,2768240764,0,393287,2147637312,2147637313,
2147704898,2378354773,2369966148,2386731099,2147524678,2382530652,2147524744,
2386706528,2147524746,2382506081,2147698764,2147692621,2147686478,2147680335,
2147655760,2147655761,2147735570,2147729427,2147674196,2072231957,2302857302,
2147723287,2147723288,2147661913,2294523930,2055448603,2059642908,2294444125,
2147504286,2290243679,2051254304,2055448609,2214832162,2214832163,2214832164,
2147600485,2281812070,2147588199,2147582056,2147575913,2193860650,2147563627,
2189666348,2147551341,2147545198,2147537007,2177083440,2147723313,2223116386,
2223110243,2147606628,2147569770,2147557484,2147530864,2147524664,2147524740,
2147524757,2147489942,2147524732,2147489946,2147516571,2147496092,2147510429,
2147496095,2147496096,2147496097,2147489954,2147489955,2147483814,603982466,
603980346,0,805306517,3221225551,0,1073809516,805306522,3221225555,0,603982466,
603980359,0,603982466,603980405,0,1073809524,805306522,3221225565,0,805306459,
3221225568,0,603982466,603980420,0,1073776648,805306434,3221225575,0,603982466,
603980432,0,805306476,3221225581,0,805306475,3221225584,0,603982466,603980445,
0,603982466,603980460,0,603982466,603980475,0,603982466,603980490,0,603982466,
603980523,0,603982466,603980540,0,603982466,603980553,0,603982466,603980566,
0,603982466,603980588,0,603982466,603980598,0,603982466,603980611,0,603982466,
603980624,0,805306461,3221225623,0,805306444,3221225626,0,805306477,3221225629,
0,805306447,3221225632,0,603982466,603980647,0,805306452,3221225638,0,603982466,
603980662,0,603982466,603980715,0,805306445,3221225647,0,603982466,603980768,
0,603982466,603980811,0,2583691315,1966081,65537,4026531840,268435456,603982466,
603980839,603988575,0,805306387,3221225665,0,805306386,3221225668,0,0,4026531840,
0,2583691296,5439489,131075,4026531840,0,0,2147483678,603982678,0,2147483678,
603982691,0,2852192260,5505025,1,2147483680,268435456,603982688,603982701,0,
4026531840,0,1073753616,805306398,0,2852192260,5570561,1,2147483681,268435456,
603982688,603982701,0,4026531840,0,2852126728,1114113,131076,2147483784,2147491955,
2147491858,2139103291,2147483679,603982717,603997690,0,2147483679,603982717,
603995037,0,4026531840,805306399,0,2852126725,5636097,1,2147483784,2147483813,
603982731,603997618,603997608,0,603982737,603981886,0,603982734,603981886,0,
1073753880,805306400,0,1073754128,805306400,0,2852126725,5636097,1,2147483784,
2147483813,603982752,603997618,603997608,0,603982758,603981886,0,603982755,603981886,
0,1073754392,805306401,0,1073754640,805306401,0,2852126727,5701720,327718,2147483776,
2147483777,2147483778,2277507139,2147483780,2273312773,2147483782,2210404359,
2269118568,2147483753,2239758386,2147483710,2197815308,2147483757,2147483758,
2189426735,2202009648,2147483761,2113929234,2147483763,2147483700,2147483765,
2206204007,2147483671,2147483756,2147483759,2147483770,2147483707,2147483772,
2147483760,2067791902,2155872319,2147483762,2147483775,2147483779,2147483781,
2147483783,2147483784,603982813,603991032,0,268435456,1073754896,805306402,0,
603982819,603981886,0,0,603982816,603981886,0,1073754904,805306402,0,1073755152,
805306402,0,603982825,603981886,0,1073755416,805306403,0,2852192260,3866625,
1,2147483671,268435456,603982838,603991032,0,4026531840,0,2852192260,1245185,
1,2147483672,268435456,603982848,603982851,0,4026531840,0,1073755688,805306404,
0,2852126746,5832705,327731,2147528832,2147528833,2323689506,2269163555,2323689508,
2172694533,2323689510,2256580647,2323689576,2147528809,2147528746,2298523685,
2239778828,2239803437,2239803438,2239803439,2239803440,2147528817,2172657682,
2147528819,2147528756,2227220501,2147528726,2147528727,2210443314,2147528763,
2210443290,2139140123,2206248988,2147483710,2143334430,2197860415,2202054723,
2214637671,2147528812,2147528813,2147528814,2147528815,2147528816,2147528818,
2147512437,2147528826,2147528828,2147528831,2147528834,2147528835,2147528836,
2147528837,2147528838,2147528839,2147520648,2147483667,603983944,603979780,0,
2147483667,2147483672,603983944,603981957,603981959,0,2147483667,603983944,603979858,
0,2147483667,603983944,603979886,0,2147483667,603983944,603979828,0,2147483667,
603983944,603982933,0,4026531840,0,2852126826,5898241,327726,2147577984,2147582081,
2306998306,2239897635,2307024932,2172735493,2307065894,2239952935,2147487848,
2147557481,2147690538,2281848869,2147487852,2227341357,2227296302,2227193903,
2227200048,2147483761,2223009842,2147545203,2147520564,2147659797,2147670038,
2147495959,2147549243,2214600771,2193815578,2135095323,2189621276,2214596711,
2147534878,2181083199,2147487853,2147487854,2147487855,2147487856,2147483762,
2147565690,2147565692,2147577983,2147582082,2147586179,2147586180,2147590277,
2147600518,2147600519,603994820,0,603995279,0,603991536,0,268435456,603980070,
0,268435456,603983089,0,603986272,0,2147483712,268435456,603987120,0,2147483718,
268435456,603988361,0,268435456,603980300,0,2147483740,268435456,603991698,603995279,
0,603996161,0,2147483780,268435456,603996913,0,2147483784,268435456,603996863,
0,603997351,0,2147483806,268435456,603997461,0,603997478,0,603997527,0,603997631,
0,2147483810,268435456,1073809540,805306530,0,603997576,0,2147483697,268435456,
603984588,603984594,0,2147483680,268435456,603982719,0,2147483681,268435456,
603982740,0,2147483683,268435456,603982822,603991032,0,2147483682,268435456,
603982761,0,2147483696,268435456,603984585,603981886,0,2147483674,268435456,
1073748232,805306394,0,2147483676,268435456,603982343,0,603981939,0,2147483684,
268435456,603982828,0,2147483692,268435456,603984503,603981959,0,4026531840,
2852126726,5963777,65539,2155878448,2147483671,2147483784,603983103,603987180,
0,268435456,603983124,0,4026531840,0,2852192260,1966081,1,2147483699,268435456,
603983113,603988575,0,4026531840,0,1073775904,805306433,0,2852192259,6029313,
1,2147483696,268435456,603983124,0,4026531840,2852126732,6094849,65539,2155872272,
2147502103,2147489928,268435456,603983144,0,2147483815,268435456,1073809572,
805306535,603983552,0,268435456,603983752,0,4026531840,0,2852126729,6160385,
65538,2147483784,2147495959,2147483815,268435456,1073809572,805306535,603983160,
0,268435456,603983360,0,4026531840,0,2852192259,3866625,1,2147483671,268435456,
603983168,0,4026531840,2852126726,6225921,131078,2164267032,2147483763,2147483666,
2139095099,2151678068,2147483784,603983184,603985358,0,268435456,603983276,0,
4026531840,2852192259,1245185,1,2147483672,268435456,603983192,0,4026531840,
2852192259,4521985,1,2147483666,268435456,603983200,0,4026531840,2852126727,
6291457,327735,2340421664,2340421665,2340421666,2269118499,2340421668,2172649477,
2340421670,2256535591,2340421736,2147483753,2147483690,2315255845,2239758348,
2239758381,2239758382,2239758383,2239758384,2239758385,2172649490,2239764499,
2147483700,2235564053,2147483670,2147483671,2214592562,2147483707,2218786842,
2139095067,2214592540,2147483710,2143289374,2206203967,2218786883,2231369831,
2147483756,2147483757,2147483758,2147483759,2147483760,2147483761,2147483762,
2147483763,2147483765,2147483770,2147483772,2147483775,2147483776,2147483777,
2147483778,2147483779,2147483780,2147483781,2147483782,2147483783,2147483784,
603983266,603987198,0,268435456,1073767240,805306424,0,4026531840,2852192260,
4718593,1,2147483667,268435456,1073765968,805306424,0,4026531840,0,2852192259,
4521985,1,2147483666,268435456,603983284,0,4026531840,2852126727,6291457,327735,
2340421664,2340421665,2340421666,2269118499,2340421668,2172649477,2340421670,
2256535591,2340421736,2147483753,2147483690,2315255845,2239758348,2239758381,
2239758382,2239758383,2239758384,2239758385,2172649490,2239764499,2147483700,
2235564053,2147483670,2147483671,2214592562,2147483707,2218786842,2139095067,
2214592540,2147483710,2143289374,2206203967,2218786883,2231369831,2147483756,
2147483757,2147483758,2147483759,2147483760,2147483761,2147483762,2147483763,
2147483765,2147483770,2147483772,2147483775,2147483776,2147483777,2147483778,
2147483779,2147483780,2147483781,2147483782,2147483783,2147483784,603983350,
603987198,0,268435456,1073769792,805306424,0,4026531840,2852192260,4718593,1,
2147483667,268435456,1073766984,805306424,0,4026531840,0,2852126726,6225921,
131078,2164267032,2147483763,2147483666,2139095099,2151678068,2147483784,603983376,
603985358,0,268435456,603983468,0,4026531840,2852192259,1245185,1,2147483672,
268435456,603983384,0,4026531840,2852192259,4521985,1,2147483666,268435456,603983392,
0,4026531840,2852126727,6291457,327735,2340421664,2340421665,2340421666,2269118499,
2340421668,2172649477,2340421670,2256535591,2340421736,2147483753,2147483690,
2315255845,2239758348,2239758381,2239758382,2239758383,2239758384,2239758385,
2172649490,2239764499,2147483700,2235564053,2147483670,2147483671,2214592562,
2147483707,2218786842,2139095067,2214592540,2147483710,2143289374,2206203967,
2218786883,2231369831,2147483756,2147483757,2147483758,2147483759,2147483760,
2147483761,2147483762,2147483763,2147483765,2147483770,2147483772,2147483775,
2147483776,2147483777,2147483778,2147483779,2147483780,2147483781,2147483782,
2147483783,2147483784,603983458,603987198,0,268435456,1073769536,805306424,0,
4026531840,2852192260,4718593,1,2147483667,268435456,1073766728,805306424,0,
4026531840,0,2852192259,4521985,1,2147483666,268435456,603983476,0,4026531840,
2852126727,6291457,327735,2340421664,2340421665,2340421666,2269118499,2340421668,
2172649477,2340421670,2256535591,2340421736,2147483753,2147483690,2315255845,
2239758348,2239758381,2239758382,2239758383,2239758384,2239758385,2172649490,
2239764499,2147483700,2235564053,2147483670,2147483671,2214592562,2147483707,
2218786842,2139095067,2214592540,2147483710,2143289374,2206203967,2218786883,
2231369831,2147483756,2147483757,2147483758,2147483759,2147483760,2147483761,
2147483762,2147483763,2147483765,2147483770,2147483772,2147483775,2147483776,
2147483777,2147483778,2147483779,2147483780,2147483781,2147483782,2147483783,
2147483784,603983542,603987198,0,268435456,1073772344,805306424,0,4026531840,
2852192260,4718593,1,2147483667,268435456,1073769280,805306424,0,4026531840,
0,2852192259,3866625,1,2147483671,268435456,603983560,0,4026531840,2852126726,
6225921,131078,2164267032,2147483763,2147483666,2139095099,2151678068,2147483784,
603983576,603985358,0,268435456,603983668,0,4026531840,2852192259,1245185,1,
2147483672,268435456,603983584,0,4026531840,2852192259,4521985,1,2147483666,
268435456,603983592,0,4026531840,2852126727,6291457,327735,2340421664,2340421665,
2340421666,2269118499,2340421668,2172649477,2340421670,2256535591,2340421736,
2147483753,2147483690,2315255845,2239758348,2239758381,2239758382,2239758383,
2239758384,2239758385,2172649490,2239764499,2147483700,2235564053,2147483670,
2147483671,2214592562,2147483707,2218786842,2139095067,2214592540,2147483710,
2143289374,2206203967,2218786883,2231369831,2147483756,2147483757,2147483758,
2147483759,2147483760,2147483761,2147483762,2147483763,2147483765,2147483770,
2147483772,2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,
2147483781,2147483782,2147483783,2147483784,603983658,603987198,0,268435456,
1073769024,805306424,0,4026531840,2852192260,4718593,1,2147483667,268435456,
1073766472,805306424,0,4026531840,0,2852192259,4521985,1,2147483666,268435456,
603983676,0,4026531840,2852126727,6291457,327735,2340421664,2340421665,2340421666,
2269118499,2340421668,2172649477,2340421670,2256535591,2340421736,2147483753,
2147483690,2315255845,2239758348,2239758381,2239758382,2239758383,2239758384,
2239758385,2172649490,2239764499,2147483700,2235564053,2147483670,2147483671,
2214592562,2147483707,2218786842,2139095067,2214592540,2147483710,2143289374,
2206203967,2218786883,2231369831,2147483756,2147483757,2147483758,2147483759,
2147483760,2147483761,2147483762,2147483763,2147483765,2147483770,2147483772,
2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,2147483781,
2147483782,2147483783,2147483784,603983742,603987198,0,268435456,1073772088,
805306424,0,4026531840,2852192260,4718593,1,2147483667,268435456,1073768768,
805306424,0,4026531840,0,2852126726,6225921,131078,2164267032,2147483763,2147483666,
2139095099,2151678068,2147483784,603983768,603985358,0,268435456,603983860,0,
4026531840,2852192259,1245185,1,2147483672,268435456,603983776,0,4026531840,
2852192259,4521985,1,2147483666,268435456,603983784,0,4026531840,2852126727,
6291457,327735,2340421664,2340421665,2340421666,2269118499,2340421668,2172649477,
2340421670,2256535591,2340421736,2147483753,2147483690,2315255845,2239758348,
2239758381,2239758382,2239758383,2239758384,2239758385,2172649490,2239764499,
2147483700,2235564053,2147483670,2147483671,2214592562,2147483707,2218786842,
2139095067,2214592540,2147483710,2143289374,2206203967,2218786883,2231369831,
2147483756,2147483757,2147483758,2147483759,2147483760,2147483761,2147483762,
2147483763,2147483765,2147483770,2147483772,2147483775,2147483776,2147483777,
2147483778,2147483779,2147483780,2147483781,2147483782,2147483783,2147483784,
603983850,603987198,0,268435456,1073771832,805306424,0,4026531840,2852192260,
4718593,1,2147483667,268435456,1073768512,805306424,0,4026531840,0,2852192259,
4521985,1,2147483666,268435456,603983868,0,4026531840,2852126727,6291457,327735,
2340421664,2340421665,2340421666,2269118499,2340421668,2172649477,2340421670,
2256535591,2340421736,2147483753,2147483690,2315255845,2239758348,2239758381,
2239758382,2239758383,2239758384,2239758385,2172649490,2239764499,2147483700,
2235564053,2147483670,2147483671,2214592562,2147483707,2218786842,2139095067,
2214592540,2147483710,2143289374,2206203967,2218786883,2231369831,2147483756,
2147483757,2147483758,2147483759,2147483760,2147483761,2147483762,2147483763,
2147483765,2147483770,2147483772,2147483775,2147483776,2147483777,2147483778,
2147483779,2147483780,2147483781,2147483782,2147483783,2147483784,603983934,
603987198,0,268435456,1073773616,805306424,0,4026531840,2852192260,4718593,1,
2147483667,268435456,1073771576,805306424,0,4026531840,0,2768240761,0,393285,
2147637312,2147637313,2147704898,2382536795,2357383236,2382530652,2147524678,
2386706528,2147524744,2382506081,2147524746,2378305634,2147698764,2147692621,
2147686478,2147680335,2147655760,2147655761,2353133667,2147729427,2147674196,
2290274389,2294468694,2147723287,2147723288,2147661913,2281941018,2047059995,
2051254300,2286055517,2147504286,2281855071,2042865696,2047060001,2051254306,
2076420131,2206443556,2147600485,2273423462,2147588199,2147582056,2147575913,
2185472042,2147563627,2181277740,2147551341,2147545198,2147537007,2168694832,
2147723313,2147606628,2147569770,2147557484,2147530864,2147524740,2147524757,
2147524664,2147489942,2147489946,2147516571,2147524732,2147496092,2147510429,
2147496095,2147496096,2147496097,2147489954,2147489955,2147483814,603983944,
603980346,0,805306517,3221225549,0,1073809516,805306522,3221225553,0,603983944,
603980359,0,603983944,603980405,0,1073809524,805306522,3221225563,0,805306459,
3221225566,0,603983944,603980420,0,1073776648,805306434,3221225573,0,603983944,
603980432,0,805306476,3221225579,0,805306475,3221225582,0,603983944,603980445,
0,603983944,603980460,0,603983944,603980475,0,603983944,603980490,0,603983944,
603980523,0,603983944,603980540,0,603983944,603980553,0,603983944,603980566,
0,603983944,603980588,0,603983944,603980598,0,603983944,603980611,0,603983944,
603980624,0,805306461,3221225621,0,805306444,3221225624,0,805306477,3221225627,
0,805306447,3221225630,0,603983944,603980647,0,805306452,3221225636,0,603983944,
603980662,0,603983944,603980715,0,805306445,3221225645,0,603983944,603980768,
0,603983944,603980811,0,2583691315,1966081,65537,4026531840,268435456,603983944,
603980839,603988575,0,805306387,3221225663,0,0,4026531840,2852192260,6356993,
1,2147483687,2147483685,268435456,603984148,0,4026531840,0,2852192260,3866625,
1,2147483671,268435456,603984158,603991032,0,4026531840,0,2852192260,1245185,
1,2147483672,268435456,603984168,603984171,0,4026531840,0,1073755944,805306405,
0,2852192260,4521985,1,2147483666,2147483686,268435456,603984181,0,4026531840,
0,2852126736,6422529,65539,2147483688,2151692303,2147508243,2147483687,268435456,
603984205,603984375,603984295,603991032,0,2147483689,268435456,603984267,603984416,
0,268435456,1073757712,805306406,0,4026531840,0,2852126736,6422529,65539,2147493928,
2151677967,2147508243,2147483689,268435456,603984229,603984416,0,2147483687,
268435456,603984257,603984375,603984295,603991032,0,268435456,1073757208,805306406,
0,4026531840,0,2852126731,6488065,65538,2147483688,2147498003,2147483687,268435456,
603984247,603984375,603984295,603991032,0,268435456,1073756960,805306406,0,4026531840,
0,2852192260,4718593,1,2147483667,268435456,1073756200,805306406,0,4026531840,
0,2852192260,4718593,1,2147483667,268435456,1073756704,805306406,0,4026531840,
0,2852126731,6488065,65538,2147483688,2147498003,2147483687,268435456,603984285,
603984375,603984295,603991032,0,268435456,1073757464,805306406,0,4026531840,
0,2852192260,4718593,1,2147483667,268435456,1073756448,805306406,0,4026531840,
0,2852192259,458753,1,2147483689,268435456,603984303,0,4026531840,2852126726,
6553601,327736,2344615968,2344615969,2344615970,2273312803,2344615972,2172649477,
2344615974,2260729895,2260736040,2147483753,2147483690,2319450149,2248146956,
2248146989,2248146990,2185238543,2248146992,2147483761,2176843794,2243958803,
2147483700,2239758357,2147483670,2147483671,2210398255,2214592562,2222981146,
2155872283,2218786844,2147483707,2155872286,2210398271,2147483710,2218786883,
2231369831,2231369832,2147483756,2147483757,2147483758,2147483759,2147483760,
2147483762,2147483763,2147483765,2147483770,2147483772,2147483775,2147483776,
2147483777,2147483778,2147483779,2147483780,2147483781,2147483782,2147483783,
2147483784,603984369,603984800,0,1073758232,805306408,0,4026531840,1073757984,
805306408,0,1073742864,805306407,0,3087012365,2768240655,0,65538,2147483688,
2147491879,1073742600,805306407,3221225481,0,2583691304,6488065,65537,4026531840,
2147483688,268435456,603984375,603984372,603984295,603991032,0,4026531840,2499805223,
0,65537,4026531840,0,0,2852192260,458753,1,2147483689,268435456,603984413,604002096,
0,4026531840,0,1073759000,805306410,0,2852192259,458753,1,2147483689,268435456,
603984424,0,4026531840,2852126726,6619137,327735,2340421664,2340421665,2340421666,
2269118499,2340421668,2172649477,2340421670,2256535591,2256541736,2147483753,
2147483690,2315255845,2243952652,2243952685,2243952686,2243952687,2243952688,
2147483761,2172649490,2239764499,2147483700,2235564053,2147483670,2147483671,
2214592562,2147483707,2218786842,2139095067,2214592540,2147483710,2143289374,
2206203967,2218786883,2231369831,2231369832,2147483756,2147483757,2147483758,
2147483759,2147483760,2147483762,2147483763,2147483765,2147483770,2147483772,
2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,2147483781,
2147483782,2147483783,2147483784,603984490,603984800,0,1073758736,805306409,
0,4026531840,0,1073758488,805306409,0,2852192261,4521985,1,2147483666,2147483673,
268435456,603984503,603981969,0,4026531840,2852126731,6684673,65538,2147493932,
2147483691,2147483693,268435456,603984521,603984541,0,2147483694,268435456,603984538,
603984564,603981959,0,4026531840,0,2852126726,6750209,1,2147483692,2147483694,
268435456,603984535,603984564,603981959,0,1073759256,805306412,0,0,1073759776,
805306412,0,1073759512,805306412,0,2852192260,3866625,1,2147483671,268435456,
603984551,603984567,0,4026531840,0,2852192260,1245185,1,2147483672,268435456,
603984561,603981959,0,4026531840,0,1073760040,805306413,0,1073760272,805306414,
0,2852126728,1114113,131076,2147483784,2147491955,2147491858,2139103291,2147483695,
603984583,603997690,0,2147483695,603984583,603995037,0,4026531840,805306415,
0,1073760528,805306416,0,603984591,603981886,0,1073760792,805306417,0,2852126724,
1114113,131076,2147483784,2147483763,2147483666,2139095099,2147483698,603984609,
603984635,0,4026531840,1073761048,805306418,0,3087012597,2768240653,0,65538,
2147491890,2147483699,1073742600,805306418,3221225481,0,2583691277,3538945,65537,
4026531840,268435456,603984609,603984606,603984635,0,4026531840,2499805234,0,
65537,4026531840,0,0,2852126728,1114113,131076,2147483784,2147491955,2147491858,
2139103291,2147483699,603984651,603997690,0,2147483699,603984666,603995037,0,
4026531840,2852126726,6815745,1,2147483716,2147483779,268435456,603984663,603996688,
603992336,0,805306419,0,1073761296,805306419,0,2852192262,6881281,1,2147483716,
2147483779,268435456,603984663,603996688,603992336,0,4026531840,0,2583691296,
5439489,131075,4026531840,0,0,2147483700,603984690,0,2147483700,603984706,0,
2852192260,5505025,1,2147483680,268435456,603984700,603984716,0,4026531840,0,
603984703,603981886,0,1073761560,805306420,0,2852192260,5570561,1,2147483681,
268435456,603984700,603984716,0,4026531840,0,2852126724,1114113,131076,2147483784,
2147483763,2147483666,2139095099,2147483701,603984731,603984757,0,4026531840,
1073761048,805306421,0,3087012719,2768240653,0,65538,2147483702,2147491893,1073742600,
805306421,3221225481,0,2583691277,3538945,65537,4026531840,268435456,603984731,
603984728,603984757,0,4026531840,2499805237,0,65537,4026531840,0,0,2852126728,
1114113,131076,2147483784,2147491955,2147491858,2139103291,2147483702,603984773,
603997690,0,2147483702,603984788,603995037,0,4026531840,2852126726,6815745,1,
2147483716,2147483779,268435456,603984785,603996688,603992336,0,805306422,0,
1073761296,805306422,0,2852192262,6881281,1,2147483716,2147483779,268435456,
603984785,603996688,603992336,0,4026531840,0,2852126750,5373953,327733,2332086304,
2332086305,2332086306,2269171747,2332086308,2172702725,2332086310,2256588839,
2332086376,2147537001,2147536938,2306920485,2239782924,2239811629,2239811630,
2239766575,2239766576,2147537009,2172682258,2147537011,2147491892,2227228693,
2147536918,2147536919,2210451506,2147536955,2210451482,2139148315,2206257180,
2147483710,2143342622,2197868607,2210451523,2223034471,2147537004,2147537005,
2147537006,2147537007,2147537008,2147537010,2147528821,2147537018,2147537020,
2147537023,2147537024,2147537025,2147537026,2147537027,2147537028,2147537029,
2147537030,2147537031,2147500168,2147483665,603984950,603979780,0,2147483665,
603984950,603981911,0,2147483665,603984950,603979828,0,2147483665,603984950,
603979858,0,2147483665,2147483672,603984950,603981957,603981959,0,2147483665,
603984950,603979886,0,2147483665,603984950,603979922,0,4026531840,0,603984890,
0,2852126723,7012353,327733,2332033056,2332033057,2332033058,2269118499,2332033060,
2172649477,2332033062,2256535591,2332033128,2147483753,2147483690,2306867237,
2239758348,2239758381,2239758382,2239758383,2239758384,2147483761,2172649490,
2147483763,2147483700,2227175445,2147483670,2147483671,2210398258,2147483707,
2210398234,2139095067,2206203932,2147483710,2143289374,2197815359,2210398275,
2222981223,2147483756,2147483757,2147483758,2147483759,2147483760,2147483762,
2147483765,2147483770,2147483772,2147483775,2147483776,2147483777,2147483778,
2147483779,2147483780,2147483781,2147483782,2147483783,2147483784,603980842,
603982378,0,4026531840,3087013130,2768240773,0,393289,2147637312,2147637313,
2147704898,2147655761,2378354756,2382549077,2147524678,2147661913,2147524744,
2378342491,2147524746,2374142044,2147698764,2147692621,2147686478,2147680335,
2147655760,2089029649,2147741714,2147735571,2147674196,2080626709,2315440214,
2147723287,2147723288,2072231961,2302912538,2072225819,2076420124,2302832733,
2147504286,2298632287,2223220768,2223220769,2223220770,2223220771,2223220772,
2147600485,2290200678,2147588199,2147582056,2147575913,2202249258,2147563627,
2202249260,2147551341,2147545198,2147537007,2189666352,2147723313,2223128672,
2223122529,2223116386,2223110243,2147606628,2147569770,2147524664,2147557484,
2147530864,2147524740,2147524732,2147524757,2147489942,2147489946,2147516571,
2147496092,2147510429,2147496095,2147496096,2147496097,2147489954,2147489955,
2147483814,603984950,603980346,0,805306517,3221225554,0,1073809516,805306522,
3221225558,0,603984950,603980359,0,603984950,603980405,0,1073809524,805306522,
3221225568,0,805306459,3221225571,0,603984950,603980420,0,1073776648,805306434,
3221225578,0,603984950,603980432,0,805306476,3221225584,0,805306475,3221225587,
0,603984950,603980445,0,603984950,603980460,0,603984950,603980475,0,603984950,
603980490,0,603984950,603980523,0,603984950,603980540,0,603984950,603980553,
0,603984950,603980566,0,603984950,603980588,0,603984950,603980598,0,603984950,
603980611,0,603984950,603980624,0,805306461,3221225626,0,805306444,3221225629,
0,805306477,3221225632,0,805306447,3221225635,0,603984950,603980647,0,805306452,
3221225641,0,603984950,603980662,0,603984950,603980715,0,805306445,3221225650,
0,603984950,603980768,0,603984950,603980811,0,2583691315,1966081,65537,4026531840,
268435456,603984950,603980839,603988575,0,805306387,3221225668,0,805306392,3221225671,
0,805306386,3221225674,0,1073742600,805306385,3221225678,0,603984950,603984888,
0,4026531840,0,2499805201,0,65537,4026531840,0,0,2852126784,7077889,327714,2147577984,
2147582081,2147582082,2239766595,2147586180,2248232965,2147600518,2252345447,
2252345448,2147557481,2197844018,2147487855,2147487852,2147487853,2147487854,
2130724911,2168479792,2147483761,2113990674,2147545203,2147520564,2147487856,
2147483762,2147495959,2147577983,2147586179,2147565690,2147549243,2147565692,
2147590277,2147534878,2118168639,2147600519,2147604616,603994820,0,603995279,
0,603991536,0,268435456,603980070,0,268435456,603983089,0,603986272,0,2147483712,
268435456,603987120,0,2147483718,268435456,603988361,0,268435456,603980300,0,
2147483740,268435456,603991698,603995279,0,603996161,0,2147483780,268435456,
603996913,0,2147483784,268435456,603996863,0,603997351,0,2147483806,268435456,
603997461,0,603997478,0,603997527,0,603997631,0,2147483810,268435456,1073809540,
805306530,0,603997576,0,2147483814,268435456,1073809564,805306534,0,4026531840,
2852126732,7143425,131077,2164260980,2147496051,2147495954,2139107387,2147496072,
2147483705,2147483708,603985334,603985402,603996130,0,2147483705,2147483709,
603985334,603985400,603995898,0,4026531840,0,2852126726,1441793,65538,2147489816,
2147483661,268435456,603985304,0,1073774344,805306426,0,4026531840,2852126733,
6225921,131078,2164260888,2147500147,2147500050,2139111483,2151684212,2147500168,
1073774352,805306426,0,2147483708,603985328,603985402,603996130,0,2147483709,
603985331,603985400,603995898,0,4026531840,0,1073774616,805306426,0,1073761048,
805306427,0,2768240655,0,131077,2147491900,2160095289,2147506234,2147500091,
2147483709,1073742600,805306427,3221225483,0,1073774088,805306426,3221225487,
0,603985334,603985292,0,805306425,3221225493,0,0,4026531840,2852126732,7143425,
131077,2164260980,2147496051,2147495954,2139107387,2147496072,2147483706,2147483708,
603985380,603985402,603996130,0,2147483706,2147483709,603985380,603985400,603995898,
0,4026531840,0,2768240652,0,131076,2147491900,2147483709,2147506234,2147500091,
1073742600,805306427,3221225482,0,1073774088,805306426,3221225486,0,603985380,
603985292,0,0,4026531840,805306429,0,805306428,0,2583691311,7208961,131075,4026531840,
0,0,2147483703,603985416,0,2147483703,603985848,0,2852192259,7274497,1,2147483695,
268435456,603985424,0,4026531840,2852192259,6029313,1,2147483696,268435456,603985432,
0,4026531840,2852126730,7340033,65538,2151677968,2147491976,268435456,603985448,
603997690,0,2147483815,268435456,1073809572,805306535,603985648,0,4026531840,
2852192259,3866625,1,2147483671,268435456,603985456,0,4026531840,2852126726,
6225921,131078,2164267032,2147483763,2147483666,2139095099,2151678068,2147483784,
603985472,603985358,0,268435456,603985564,0,4026531840,2852192259,1245185,1,
2147483672,268435456,603985480,0,4026531840,2852192259,4521985,1,2147483666,
268435456,603985488,0,4026531840,2852126727,6291457,327735,2340421664,2340421665,
2340421666,2269118499,2340421668,2172649477,2340421670,2256535591,2340421736,
2147483753,2147483690,2315255845,2239758348,2239758381,2239758382,2239758383,
2239758384,2239758385,2172649490,2239764499,2147483700,2235564053,2147483670,
2147483671,2214592562,2147483707,2218786842,2139095067,2214592540,2147483710,
2143289374,2206203967,2218786883,2231369831,2147483756,2147483757,2147483758,
2147483759,2147483760,2147483761,2147483762,2147483763,2147483765,2147483770,
2147483772,2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,
2147483781,2147483782,2147483783,2147483784,603985554,603987198,0,268435456,
1073762888,805306423,0,4026531840,2852192260,4718593,1,2147483667,268435456,
1073761872,805306423,0,4026531840,0,2852192259,4521985,1,2147483666,268435456,
603985572,0,4026531840,2852126727,6291457,327735,2340421664,2340421665,2340421666,
2269118499,2340421668,2172649477,2340421670,2256535591,2340421736,2147483753,
2147483690,2315255845,2239758348,2239758381,2239758382,2239758383,2239758384,
2239758385,2172649490,2239764499,2147483700,2235564053,2147483670,2147483671,
2214592562,2147483707,2218786842,2139095067,2214592540,2147483710,2143289374,
2206203967,2218786883,2231369831,2147483756,2147483757,2147483758,2147483759,
2147483760,2147483761,2147483762,2147483763,2147483765,2147483770,2147483772,
2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,2147483781,
2147483782,2147483783,2147483784,603985638,603987198,0,268435456,1073764416,
805306423,0,4026531840,2852192260,4718593,1,2147483667,268435456,1073762632,
805306423,0,4026531840,0,2852192259,3866625,1,2147483671,268435456,603985656,
0,4026531840,2852126726,6225921,131078,2164267032,2147483763,2147483666,2139095099,
2151678068,2147483784,603985672,603985358,0,268435456,603985764,0,4026531840,
2852192259,1245185,1,2147483672,268435456,603985680,0,4026531840,2852192259,
4521985,1,2147483666,268435456,603985688,0,4026531840,2852126727,6291457,327735,
2340421664,2340421665,2340421666,2269118499,2340421668,2172649477,2340421670,
2256535591,2340421736,2147483753,2147483690,2315255845,2239758348,2239758381,
2239758382,2239758383,2239758384,2239758385,2172649490,2239764499,2147483700,
2235564053,2147483670,2147483671,2214592562,2147483707,2218786842,2139095067,
2214592540,2147483710,2143289374,2206203967,2218786883,2231369831,2147483756,
2147483757,2147483758,2147483759,2147483760,2147483761,2147483762,2147483763,
2147483765,2147483770,2147483772,2147483775,2147483776,2147483777,2147483778,
2147483779,2147483780,2147483781,2147483782,2147483783,2147483784,603985754,
603987198,0,268435456,1073764160,805306423,0,4026531840,2852192260,4718593,1,
2147483667,268435456,1073762376,805306423,0,4026531840,0,2852192259,4521985,
1,2147483666,268435456,603985772,0,4026531840,2852126727,6291457,327735,2340421664,
2340421665,2340421666,2269118499,2340421668,2172649477,2340421670,2256535591,
2340421736,2147483753,2147483690,2315255845,2239758348,2239758381,2239758382,
2239758383,2239758384,2239758385,2172649490,2239764499,2147483700,2235564053,
2147483670,2147483671,2214592562,2147483707,2218786842,2139095067,2214592540,
2147483710,2143289374,2206203967,2218786883,2231369831,2147483756,2147483757,
2147483758,2147483759,2147483760,2147483761,2147483762,2147483763,2147483765,
2147483770,2147483772,2147483775,2147483776,2147483777,2147483778,2147483779,
2147483780,2147483781,2147483782,2147483783,2147483784,603985838,603987198,0,
268435456,1073765432,805306423,0,4026531840,2852192260,4718593,1,2147483667,
268435456,1073763904,805306423,0,4026531840,0,2852192259,6029313,1,2147483696,
268435456,603985856,0,4026531840,2852126730,7340033,65538,2151677968,2147491976,
268435456,603985872,603997690,0,2147483815,268435456,1073809572,805306535,603986072,
0,4026531840,2852192259,3866625,1,2147483671,268435456,603985880,0,4026531840,
2852126726,6225921,131078,2164267032,2147483763,2147483666,2139095099,2151678068,
2147483784,603985896,603985358,0,268435456,603985988,0,4026531840,2852192259,
1245185,1,2147483672,268435456,603985904,0,4026531840,2852192259,4521985,1,2147483666,
268435456,603985912,0,4026531840,2852126727,6291457,327735,2340421664,2340421665,
2340421666,2269118499,2340421668,2172649477,2340421670,2256535591,2340421736,
2147483753,2147483690,2315255845,2239758348,2239758381,2239758382,2239758383,
2239758384,2239758385,2172649490,2239764499,2147483700,2235564053,2147483670,
2147483671,2214592562,2147483707,2218786842,2139095067,2214592540,2147483710,
2143289374,2206203967,2218786883,2231369831,2147483756,2147483757,2147483758,
2147483759,2147483760,2147483761,2147483762,2147483763,2147483765,2147483770,
2147483772,2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,
2147483781,2147483782,2147483783,2147483784,603985978,603987198,0,268435456,
1073763648,805306423,0,4026531840,2852192260,4718593,1,2147483667,268435456,
1073762120,805306423,0,4026531840,0,2852192259,4521985,1,2147483666,268435456,
603985996,0,4026531840,2852126727,6291457,327735,2340421664,2340421665,2340421666,
2269118499,2340421668,2172649477,2340421670,2256535591,2340421736,2147483753,
2147483690,2315255845,2239758348,2239758381,2239758382,2239758383,2239758384,
2239758385,2172649490,2239764499,2147483700,2235564053,2147483670,2147483671,
2214592562,2147483707,2218786842,2139095067,2214592540,2147483710,2143289374,
2206203967,2218786883,2231369831,2147483756,2147483757,2147483758,2147483759,
2147483760,2147483761,2147483762,2147483763,2147483765,2147483770,2147483772,
2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,2147483781,
2147483782,2147483783,2147483784,603986062,603987198,0,268435456,1073765176,
805306423,0,4026531840,2852192260,4718593,1,2147483667,268435456,1073763392,
805306423,0,4026531840,0,2852192259,3866625,1,2147483671,268435456,603986080,
0,4026531840,2852126726,6225921,131078,2164267032,2147483763,2147483666,2139095099,
2151678068,2147483784,603986096,603985358,0,268435456,603986188,0,4026531840,
2852192259,1245185,1,2147483672,268435456,603986104,0,4026531840,2852192259,
4521985,1,2147483666,268435456,603986112,0,4026531840,2852126727,6291457,327735,
2340421664,2340421665,2340421666,2269118499,2340421668,2172649477,2340421670,
2256535591,2340421736,2147483753,2147483690,2315255845,2239758348,2239758381,
2239758382,2239758383,2239758384,2239758385,2172649490,2239764499,2147483700,
2235564053,2147483670,2147483671,2214592562,2147483707,2218786842,2139095067,
2214592540,2147483710,2143289374,2206203967,2218786883,2231369831,2147483756,
2147483757,2147483758,2147483759,2147483760,2147483761,2147483762,2147483763,
2147483765,2147483770,2147483772,2147483775,2147483776,2147483777,2147483778,
2147483779,2147483780,2147483781,2147483782,2147483783,2147483784,603986178,
603987198,0,268435456,1073764920,805306423,0,4026531840,2852192260,4718593,1,
2147483667,268435456,1073763136,805306423,0,4026531840,0,2852192259,4521985,
1,2147483666,268435456,603986196,0,4026531840,2852126727,6291457,327735,2340421664,
2340421665,2340421666,2269118499,2340421668,2172649477,2340421670,2256535591,
2340421736,2147483753,2147483690,2315255845,2239758348,2239758381,2239758382,
2239758383,2239758384,2239758385,2172649490,2239764499,2147483700,2235564053,
2147483670,2147483671,2214592562,2147483707,2218786842,2139095067,2214592540,
2147483710,2143289374,2206203967,2218786883,2231369831,2147483756,2147483757,
2147483758,2147483759,2147483760,2147483761,2147483762,2147483763,2147483765,
2147483770,2147483772,2147483775,2147483776,2147483777,2147483778,2147483779,
2147483780,2147483781,2147483782,2147483783,2147483784,603986262,603987198,0,
268435456,1073765680,805306423,0,4026531840,2852192260,4718593,1,2147483667,
268435456,1073764664,805306423,0,4026531840,0,2583691311,7208961,131075,4026531840,
0,0,2147483704,603986284,0,2147483704,603986292,0,2852192259,7274497,1,2147483695,
268435456,603983116,0,4026531840,2852192259,6029313,1,2147483696,268435456,603986300,
0,4026531840,2852126732,6094849,65539,2155872272,2147502103,2147489928,268435456,
603986320,0,2147483815,268435456,1073809572,805306535,603986728,0,268435456,
603986928,0,4026531840,0,2852126729,6160385,65538,2147483784,2147495959,2147483815,
268435456,1073809572,805306535,603986336,0,268435456,603986536,0,4026531840,
0,2852192259,3866625,1,2147483671,268435456,603986344,0,4026531840,2852126726,
6225921,131078,2164267032,2147483763,2147483666,2139095099,2151678068,2147483784,
603986360,603985358,0,268435456,603986452,0,4026531840,2852192259,1245185,1,
2147483672,268435456,603986368,0,4026531840,2852192259,4521985,1,2147483666,
268435456,603986376,0,4026531840,2852126727,6291457,327735,2340421664,2340421665,
2340421666,2269118499,2340421668,2172649477,2340421670,2256535591,2340421736,
2147483753,2147483690,2315255845,2239758348,2239758381,2239758382,2239758383,
2239758384,2239758385,2172649490,2239764499,2147483700,2235564053,2147483670,
2147483671,2214592562,2147483707,2218786842,2139095067,2214592540,2147483710,
2143289374,2206203967,2218786883,2231369831,2147483756,2147483757,2147483758,
2147483759,2147483760,2147483761,2147483762,2147483763,2147483765,2147483770,
2147483772,2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,
2147483781,2147483782,2147483783,2147483784,603986442,603987198,0,268435456,
1073768256,805306424,0,4026531840,2852192260,4718593,1,2147483667,268435456,
1073766216,805306424,0,4026531840,0,2852192259,4521985,1,2147483666,268435456,
603986460,0,4026531840,2852126727,6291457,327735,2340421664,2340421665,2340421666,
2269118499,2340421668,2172649477,2340421670,2256535591,2340421736,2147483753,
2147483690,2315255845,2239758348,2239758381,2239758382,2239758383,2239758384,
2239758385,2172649490,2239764499,2147483700,2235564053,2147483670,2147483671,
2214592562,2147483707,2218786842,2139095067,2214592540,2147483710,2143289374,
2206203967,2218786883,2231369831,2147483756,2147483757,2147483758,2147483759,
2147483760,2147483761,2147483762,2147483763,2147483765,2147483770,2147483772,
2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,2147483781,
2147483782,2147483783,2147483784,603986526,603987198,0,268435456,1073771320,
805306424,0,4026531840,2852192260,4718593,1,2147483667,268435456,1073768000,
805306424,0,4026531840,0,2852126726,6225921,131078,2164267032,2147483763,2147483666,
2139095099,2151678068,2147483784,603986552,603985358,0,268435456,603986644,0,
4026531840,2852192259,1245185,1,2147483672,268435456,603986560,0,4026531840,
2852192259,4521985,1,2147483666,268435456,603986568,0,4026531840,2852126727,
6291457,327735,2340421664,2340421665,2340421666,2269118499,2340421668,2172649477,
2340421670,2256535591,2340421736,2147483753,2147483690,2315255845,2239758348,
2239758381,2239758382,2239758383,2239758384,2239758385,2172649490,2239764499,
2147483700,2235564053,2147483670,2147483671,2214592562,2147483707,2218786842,
2139095067,2214592540,2147483710,2143289374,2206203967,2218786883,2231369831,
2147483756,2147483757,2147483758,2147483759,2147483760,2147483761,2147483762,
2147483763,2147483765,2147483770,2147483772,2147483775,2147483776,2147483777,
2147483778,2147483779,2147483780,2147483781,2147483782,2147483783,2147483784,
603986634,603987198,0,268435456,1073771064,805306424,0,4026531840,2852192260,
4718593,1,2147483667,268435456,1073767744,805306424,0,4026531840,0,2852192259,
4521985,1,2147483666,268435456,603986652,0,4026531840,2852126727,6291457,327735,
2340421664,2340421665,2340421666,2269118499,2340421668,2172649477,2340421670,
2256535591,2340421736,2147483753,2147483690,2315255845,2239758348,2239758381,
2239758382,2239758383,2239758384,2239758385,2172649490,2239764499,2147483700,
2235564053,2147483670,2147483671,2214592562,2147483707,2218786842,2139095067,
2214592540,2147483710,2143289374,2206203967,2218786883,2231369831,2147483756,
2147483757,2147483758,2147483759,2147483760,2147483761,2147483762,2147483763,
2147483765,2147483770,2147483772,2147483775,2147483776,2147483777,2147483778,
2147483779,2147483780,2147483781,2147483782,2147483783,2147483784,603986718,
603987198,0,268435456,1073773360,805306424,0,4026531840,2852192260,4718593,1,
2147483667,268435456,1073770808,805306424,0,4026531840,0,2852192259,3866625,
1,2147483671,268435456,603986736,0,4026531840,2852126726,6225921,131078,2164267032,
2147483763,2147483666,2139095099,2151678068,2147483784,603986752,603985358,0,
268435456,603986844,0,4026531840,2852192259,1245185,1,2147483672,268435456,603986760,
0,4026531840,2852192259,4521985,1,2147483666,268435456,603986768,0,4026531840,
2852126727,6291457,327735,2340421664,2340421665,2340421666,2269118499,2340421668,
2172649477,2340421670,2256535591,2340421736,2147483753,2147483690,2315255845,
2239758348,2239758381,2239758382,2239758383,2239758384,2239758385,2172649490,
2239764499,2147483700,2235564053,2147483670,2147483671,2214592562,2147483707,
2218786842,2139095067,2214592540,2147483710,2143289374,2206203967,2218786883,
2231369831,2147483756,2147483757,2147483758,2147483759,2147483760,2147483761,
2147483762,2147483763,2147483765,2147483770,2147483772,2147483775,2147483776,
2147483777,2147483778,2147483779,2147483780,2147483781,2147483782,2147483783,
2147483784,603986834,603987198,0,268435456,1073770552,805306424,0,4026531840,
2852192260,4718593,1,2147483667,268435456,1073767488,805306424,0,4026531840,
0,2852192259,4521985,1,2147483666,268435456,603986852,0,4026531840,2852126727,
6291457,327735,2340421664,2340421665,2340421666,2269118499,2340421668,2172649477,
2340421670,2256535591,2340421736,2147483753,2147483690,2315255845,2239758348,
2239758381,2239758382,2239758383,2239758384,2239758385,2172649490,2239764499,
2147483700,2235564053,2147483670,2147483671,2214592562,2147483707,2218786842,
2139095067,2214592540,2147483710,2143289374,2206203967,2218786883,2231369831,
2147483756,2147483757,2147483758,2147483759,2147483760,2147483761,2147483762,
2147483763,2147483765,2147483770,2147483772,2147483775,2147483776,2147483777,
2147483778,2147483779,2147483780,2147483781,2147483782,2147483783,2147483784,
603986918,603987198,0,268435456,1073773104,805306424,0,4026531840,2852192260,
4718593,1,2147483667,268435456,1073770296,805306424,0,4026531840,0,2852126726,
6225921,131078,2164267032,2147483763,2147483666,2139095099,2151678068,2147483784,
603986944,603985358,0,268435456,603987036,0,4026531840,2852192259,1245185,1,
2147483672,268435456,603986952,0,4026531840,2852192259,4521985,1,2147483666,
268435456,603986960,0,4026531840,2852126727,6291457,327735,2340421664,2340421665,
2340421666,2269118499,2340421668,2172649477,2340421670,2256535591,2340421736,
2147483753,2147483690,2315255845,2239758348,2239758381,2239758382,2239758383,
2239758384,2239758385,2172649490,2239764499,2147483700,2235564053,2147483670,
2147483671,2214592562,2147483707,2218786842,2139095067,2214592540,2147483710,
2143289374,2206203967,2218786883,2231369831,2147483756,2147483757,2147483758,
2147483759,2147483760,2147483761,2147483762,2147483763,2147483765,2147483770,
2147483772,2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,
2147483781,2147483782,2147483783,2147483784,603987026,603987198,0,268435456,
1073772848,805306424,0,4026531840,2852192260,4718593,1,2147483667,268435456,
1073770040,805306424,0,4026531840,0,2852192259,4521985,1,2147483666,268435456,
603987044,0,4026531840,2852126727,6291457,327735,2340421664,2340421665,2340421666,
2269118499,2340421668,2172649477,2340421670,2256535591,2340421736,2147483753,
2147483690,2315255845,2239758348,2239758381,2239758382,2239758383,2239758384,
2239758385,2172649490,2239764499,2147483700,2235564053,2147483670,2147483671,
2214592562,2147483707,2218786842,2139095067,2214592540,2147483710,2143289374,
2206203967,2218786883,2231369831,2147483756,2147483757,2147483758,2147483759,
2147483760,2147483761,2147483762,2147483763,2147483765,2147483770,2147483772,
2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,2147483781,
2147483782,2147483783,2147483784,603987110,603987198,0,268435456,1073773864,
805306424,0,4026531840,2852192260,4718593,1,2147483667,268435456,1073772592,
805306424,0,4026531840,0,2852126731,7405656,327719,2147500160,2147500161,2147500162,
2281717827,2147500164,2277523461,2147500166,2218786823,2273329256,2147500137,
2239774768,2239774770,2202025996,2147500141,2147500142,2206220335,2122326032,
2147500145,2118139922,2147500147,2147500084,2147500149,2147500094,2147500055,
2202026087,2147500140,2147500154,2147500091,2147500156,2147500143,2113945630,
2160083007,2147500144,2147500146,2147500159,2147500163,2147500165,2147500167,
2147500168,268435456,1073775120,805306432,0,268435456,603987174,603992336,0,
603987177,603992336,0,4026531840,1073775384,805306432,0,1073775632,805306432,
0,2852126731,6160385,65538,2147483784,2147491863,2147483714,603980356,603997621,
0,2147483714,1610612738,67124143,67124249,1073776648,805306434,0,4026531840,
0,2852126750,7471105,327734,2336280608,2336280609,2336280610,2269171747,2336280612,
2172702725,2336280614,2256588839,2336280680,2147537001,2147536938,2311114789,
2239782924,2239811629,2239811630,2239766575,2239766576,2239811633,2172682258,
2147537011,2147491892,2231422997,2147536918,2147536919,2214645810,2147536955,
2214645786,2139148315,2210451484,2147483710,2143342622,2202062911,2214645827,
2227228775,2147537004,2147537005,2147537006,2147537007,2147537008,2147537009,
2147537010,2147528821,2147537018,2147537020,2147537023,2147537024,2147537025,
2147537026,2147537027,2147537028,2147537029,2147537030,2147537031,2147500168,
2147483710,603987500,603979780,0,2147483710,603987500,603981911,0,2147483710,
603987500,603979828,0,2147483710,603987500,603979858,0,2147483710,2147483672,
603987500,603981957,603981959,0,2147483710,603987500,603979886,0,2147483710,
603987500,603987286,0,4026531840,2852126820,7536641,327726,2306965536,2306965537,
2306893858,2235598883,2306910244,2172801029,2306928678,2223003687,2147491944,
2147623017,2147553322,2281752613,2147491948,2214670381,2223069230,2147491951,
2147491952,2214592561,2214694962,2147610739,2147614779,2147670037,2147680278,
2147500055,2218799171,2231378023,2185254938,2118146075,2181060636,2147491949,
2147600414,2172760127,2147491950,2147487857,2147487858,2147631226,2147631228,
2147643519,2147643520,2147647617,2147647618,2147651715,2147651716,2147655813,
2147666054,2147666055,603987910,0,603994820,0,603995279,0,603991536,0,268435456,
603980070,0,603981939,0,2147483680,268435456,603982719,0,2147483681,268435456,
603982740,0,2147483682,268435456,603982761,0,2147483683,268435456,603982822,
603991032,0,2147483684,268435456,603982828,0,2147483692,268435456,603984493,
0,2147483696,268435456,603984585,603981886,0,2147483697,268435456,603984588,
603984594,0,603981911,0,2147483712,268435456,603987120,0,268435456,603980300,
0,2147483740,268435456,603991698,603995279,0,603996161,0,2147483780,268435456,
603996913,0,2147483784,268435456,603996863,0,603997351,0,2147483806,268435456,
603997461,0,603997478,0,603997527,0,603997631,0,2147483810,268435456,1073809540,
805306530,0,603997576,0,2147483674,268435456,1073748232,805306394,0,2147483676,
268435456,603982343,0,4026531840,2852126725,5242881,327734,2336231456,2336231457,
2336231458,2269122595,2336231460,2172653573,2336231462,2256539687,2336231528,
2147487849,2147487786,2311065637,2239762444,2239762477,2239762478,2239762479,
2239762480,2147487857,2172653586,2235564051,2147487796,2231373845,2147487766,
2147487767,2210402354,2147487803,2214596634,2139099163,2210402332,2147487806,
2143293470,2202013759,2214596675,2227179623,2147487852,2147487853,2147487854,
2147487855,2147487856,2147487858,2147487859,2147487861,2147487866,2147487868,
2147487871,2147487872,2147487873,2147487874,2147487875,2147487876,2147487877,
2147487878,2147487879,2147487880,805306431,0,603980842,603982378,0,4026531840,
0,2768240775,0,393290,2147637312,2147637313,2147704898,2147655761,2374160452,
2374160469,2147524678,2390925403,2147524744,2386724956,2147524746,2390900832,
2147698764,2147692621,2147686478,2147680335,2147655760,2089031697,2147743762,
2147737619,2147674196,2080628757,2311245910,2147731479,2147731480,2147661913,
2307115034,2063845403,2068039708,2307027037,2147504286,2302826591,2059651104,
2219034657,2219034658,2219034659,2219034660,2147600485,2294394982,2147588199,
2147582056,2147575913,2198063146,2147563627,2193868844,2147551341,2147545198,
2147537007,2185480240,2147731505,2231511137,2231504994,2231498851,2147606628,
2147569770,2147557484,2147524664,2147530864,2147524740,2147524757,2147524732,
2147489942,2147758142,2147723327,2147489946,2147516571,2147496092,2147510429,
2147496095,2147496096,2147496097,2147489954,2147489955,2147483814,603987500,
603980346,0,805306517,3221225554,0,1073809516,805306522,3221225558,0,603987500,
603980359,0,603987500,603980405,0,1073809524,805306522,3221225568,0,805306459,
3221225571,0,603987500,603980420,0,1073776648,805306434,3221225578,0,603987500,
603980432,0,805306476,3221225584,0,805306475,3221225587,0,603987500,603980445,
0,603987500,603980460,0,603987500,603980475,0,603987500,603980490,0,603987500,
603980523,0,603987500,603980540,0,603987500,603980553,0,603987500,603980566,
0,603987500,603980588,0,603987500,603980598,0,603987500,603980611,0,603987500,
603980624,0,805306461,3221225626,0,805306444,3221225629,0,805306477,3221225632,
0,805306447,3221225635,0,603987500,603980647,0,805306452,3221225641,0,603987500,
603980662,0,603987500,603980715,0,805306445,3221225650,0,603987500,603980768,
0,603987500,603980811,0,2583691315,1966081,65537,4026531840,268435456,603987500,
603980839,603988575,0,1073774856,805306430,3221225669,0,805306387,3221225672,
0,805306386,3221225675,0,1073742600,805306385,3221225679,0,603987500,603987436,
0,0,4026531840,0,2852126773,7602177,262168,2222985264,2147559553,2218825746,
2193621059,2218795060,2218850309,2147577990,2214621207,2147582088,2147534953,
2147543162,2147526715,2164285452,2164277311,2172688499,2139099183,2147543164,
2147555455,2147555456,2147559554,2147563651,2147563652,2147567749,2147577991,
603991536,0,603986272,0,2147483718,268435456,603988361,0,2147483728,268435456,
603990946,0,603990960,0,2147483760,268435456,603980290,603991032,0,603996161,
0,2147483780,268435456,603996913,0,2147483784,268435456,603996863,0,603997351,
0,2147483806,268435456,603997461,0,603997478,0,603997527,0,603997631,0,2147483810,
268435456,1073809540,805306530,0,603997576,0,2147483814,268435456,1073809564,
805306534,0,4026531840,0,2852192261,7667713,1,2147483700,2147483717,268435456,
603987806,603997690,0,4026531840,2852126729,7733249,65538,2147495954,2147483701,
2147483719,268435456,603987822,603988358,603990547,0,268435456,603987870,0,4026531840,
0,2852192259,4521985,1,2147483666,268435456,603987830,0,4026531840,2852126727,
7798785,262163,2214592528,2147483777,2147483778,2206210067,2147483780,2181038085,
2147483702,2147483703,2189426744,2147483705,2164260922,2147483707,2147483772,
2147483669,2147483770,2147483775,2147483776,2147483779,2147483784,603987860,
603988989,0,268435456,1073777960,805306437,0,4026531840,2852192260,4718593,1,
2147483667,268435456,1073777456,805306437,0,4026531840,0,2852126727,7798785,
262163,2214592528,2147483777,2147483778,2206210067,2147483780,2181038085,2147483702,
2147483703,2189426744,2147483705,2164260922,2147483707,2147483772,2147483669,
2147483770,2147483775,2147483776,2147483779,2147483784,603987900,603988989,0,
268435456,1073778208,805306437,0,4026531840,2852192260,4718593,1,2147483667,
268435456,1073777704,805306437,0,4026531840,0,2852126750,7471105,327734,2336280608,
2336280609,2336280610,2269171747,2336280612,2172702725,2336280614,2256588839,
2336280680,2147537001,2147536938,2311114789,2239782924,2239811629,2239811630,
2239766575,2239766576,2239811633,2172682258,2147537011,2147491892,2231422997,
2147536918,2147536919,2214645810,2147536955,2214645786,2139148315,2210451484,
2147483710,2143342622,2202062911,2214645827,2227228775,2147537004,2147537005,
2147537006,2147537007,2147537008,2147537009,2147537010,2147528821,2147537018,
2147537020,2147537023,2147537024,2147537025,2147537026,2147537027,2147537028,
2147537029,2147537030,2147537031,2147500168,2147483711,603988150,603979780,0,
2147483711,603988150,603981911,0,2147483711,603988150,603979828,0,2147483711,
603988150,603979858,0,2147483711,2147483672,603988150,603981957,603981959,0,
2147483711,603988150,603979886,0,2147483711,603988150,603987998,0,4026531840,
2852126821,7536641,327726,2306967584,2306967585,2306895906,2235600931,2306912292,
2172803077,2306930726,2223005735,2147493992,2147625065,2147555370,2281754661,
2147493996,2214672429,2223071278,2147493999,2147494000,2214592561,2214697010,
2147612787,2147616827,2147672085,2147682326,2147502103,2218801219,2231380071,
2185256986,2118148123,2181062684,2147493997,2147602462,2172762175,2147493998,
2147489905,2147489906,2147633274,2147633276,2147645567,2147645568,2147649665,
2147649666,2147653763,2147653764,2147657861,2147668102,2147668103,268435456,
805306431,0,603994820,0,603995279,0,603991536,0,268435456,603980070,0,603981939,
0,2147483680,268435456,603982719,0,2147483681,268435456,603982740,0,2147483682,
268435456,603982761,0,2147483683,268435456,603982822,603991032,0,2147483684,
268435456,603982828,0,2147483692,268435456,603984493,0,2147483696,268435456,
603984585,603981886,0,2147483697,268435456,603984588,603984594,0,603981911,0,
2147483712,268435456,603987120,0,268435456,603980300,0,2147483740,268435456,
603991698,603995279,0,603996161,0,2147483780,268435456,603996913,0,2147483784,
268435456,603996863,0,603997351,0,2147483806,268435456,603997461,0,603997478,
0,603997527,0,603997631,0,2147483810,268435456,1073809540,805306530,0,603997576,
0,2147483674,268435456,1073748232,805306394,0,2147483676,268435456,603982343,
0,4026531840,0,2768240771,0,393289,2147637312,2147637313,2147704898,2147655761,
2374160452,2374160469,2147524678,2386731099,2147524744,2382530652,2147524746,
2386706528,2147698764,2147692621,2147686478,2147680335,2147655760,2089023505,
2147735570,2147729427,2147674196,2080620565,2311245910,2147723287,2147723288,
2147661913,2298718234,2063837211,2068031516,2302832733,2147504286,2298632287,
2059642912,2219026465,2219026466,2219026467,2219026468,2147600485,2290200678,
2147588199,2147582056,2147575913,2198054954,2147563627,2193860652,2147551341,
2147545198,2147537007,2185472048,2147723313,2227316833,2227310690,2227304547,
2147606628,2147569770,2147557484,2147524664,2147530864,2147524740,2147524757,
2147524732,2147489942,2147489946,2147749951,2147516571,2147496092,2147510429,
2147496095,2147496096,2147496097,2147489954,2147489955,2147483814,603988150,
603980346,0,805306517,3221225553,0,1073809516,805306522,3221225557,0,603988150,
603980359,0,603988150,603980405,0,1073809524,805306522,3221225567,0,805306459,
3221225570,0,603988150,603980420,0,1073776648,805306434,3221225577,0,603988150,
603980432,0,805306476,3221225583,0,805306475,3221225586,0,603988150,603980445,
0,603988150,603980460,0,603988150,603980475,0,603988150,603980490,0,603988150,
603980523,0,603988150,603980540,0,603988150,603980553,0,603988150,603980566,
0,603988150,603980588,0,603988150,603980598,0,603988150,603980611,0,603988150,
603980624,0,805306461,3221225625,0,805306444,3221225628,0,805306477,3221225631,
0,805306447,3221225634,0,603988150,603980647,0,805306452,3221225640,0,603988150,
603980662,0,603988150,603980715,0,805306445,3221225649,0,603988150,603980768,
0,603988150,603980811,0,2583691315,1966081,65537,4026531840,268435456,603988150,
603980839,603988575,0,805306387,3221225667,0,805306386,3221225670,0,1073742600,
805306385,3221225674,0,603988150,603987436,0,0,4026531840,1073741840,805306439,
0,2852126735,7864321,65539,2155896850,2147495989,2147483784,2147483815,268435456,
1073809572,805306535,603988383,0,2147483719,268435456,603988487,603988358,603990547,
0,268435456,603988535,0,4026531840,2852126729,7733249,65538,2147495954,2147483701,
2147483719,268435456,603988399,603988358,603990547,0,268435456,603988447,0,4026531840,
0,2852192259,4521985,1,2147483666,268435456,603988407,0,4026531840,2852126727,
7798785,262163,2214592528,2147483777,2147483778,2206210067,2147483780,2181038085,
2147483702,2147483703,2189426744,2147483705,2164260922,2147483707,2147483772,
2147483669,2147483770,2147483775,2147483776,2147483779,2147483784,603988437,
603988989,0,268435456,1073777960,805306438,0,4026531840,2852192260,4718593,1,
2147483667,268435456,1073777456,805306438,0,4026531840,0,2852126727,7798785,
262163,2214592528,2147483777,2147483778,2206210067,2147483780,2181038085,2147483702,
2147483703,2189426744,2147483705,2164260922,2147483707,2147483772,2147483669,
2147483770,2147483775,2147483776,2147483779,2147483784,603988477,603988989,0,
268435456,1073778208,805306438,0,4026531840,2852192260,4718593,1,2147483667,
268435456,1073777704,805306438,0,4026531840,0,2852192259,4521985,1,2147483666,
268435456,603988495,0,4026531840,2852126727,7798785,262163,2214592528,2147483777,
2147483778,2206210067,2147483780,2181038085,2147483702,2147483703,2189426744,
2147483705,2164260922,2147483707,2147483772,2147483669,2147483770,2147483775,
2147483776,2147483779,2147483784,603988525,603988989,0,268435456,1073778976,
805306438,0,4026531840,2852192260,4718593,1,2147483667,268435456,1073778472,
805306438,0,4026531840,0,2852126727,7798785,262163,2214592528,2147483777,2147483778,
2206210067,2147483780,2181038085,2147483702,2147483703,2189426744,2147483705,
2164260922,2147483707,2147483772,2147483669,2147483770,2147483775,2147483776,
2147483779,2147483784,603988565,603988989,0,268435456,1073779224,805306438,0,
4026531840,2852192260,4718593,1,2147483667,268435456,1073778720,805306438,0,
4026531840,0,2852126736,3473409,327717,2147508352,2147508353,2147508354,2273337411,
2147508356,2269143045,2147508358,2264948839,2264948840,2147508329,2227200050,
2147483710,2189434892,2147508333,2147508334,2185257007,2185257008,2147508337,
2113953810,2147508339,2147508276,2147500149,2147508332,2147508247,2147508335,
2147508336,2147508346,2147508283,2147508348,2147508338,2067816478,2151702591,
2147508351,2147508355,2147508357,2147508359,2147508360,2147483715,603988815,
603979780,0,2147483715,603988815,603979858,0,2147483715,603988815,603979886,
0,2147483715,603988815,603988633,0,4026531840,0,2852126787,7077889,327714,2147584128,
2147588225,2147588226,2239766595,2147592324,2248239109,2147606662,2252345447,
2252345448,2147563625,2197850162,2147487855,2147487852,2147487853,2147487854,
2130731055,2168485936,2147483761,2113947666,2147551347,2147526708,2147487856,
2147483762,2147495959,2147584127,2147592323,2147571834,2147555387,2147571836,
2147596421,2147541022,2118174783,2147606663,2147610760,603994820,0,603995279,
0,603991536,0,268435456,603980070,0,268435456,603988739,0,268435456,603983089,
0,603986272,0,2147483712,268435456,603987120,0,2147483718,268435456,603988361,
0,268435456,603980300,0,2147483740,268435456,603991698,603995279,0,603996161,
0,2147483780,268435456,603996913,0,2147483784,268435456,603996863,0,603997351,
0,2147483806,268435456,603997461,0,603997478,0,603997527,0,603997631,0,2147483810,
268435456,1073809540,805306530,0,603997576,0,2147483814,268435456,1073809564,
805306534,0,4026531840,0,2852126727,6291457,327735,2340421664,2340421665,2340421666,
2269118499,2340421668,2172649477,2340421670,2256535591,2340421736,2147483753,
2147483690,2315255845,2239758348,2239758381,2239758382,2239758383,2239758384,
2239758385,2172649490,2239764499,2147483700,2235564053,2147483670,2147483671,
2214592562,2147483707,2218786842,2139095067,2214592540,2147483710,2143289374,
2206203967,2218786883,2231369831,2147483756,2147483757,2147483758,2147483759,
2147483760,2147483761,2147483762,2147483763,2147483765,2147483770,2147483772,
2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,2147483781,
2147483782,2147483783,2147483784,603988805,603987910,0,268435456,1073776912,
805306435,0,4026531840,2852192260,4718593,1,2147483667,268435456,1073747736,
805306435,0,4026531840,0,2768240755,0,327734,2223134784,2223134785,2235779138,
2269352003,2269302852,2147600485,2264965190,2147588199,2285994088,2147575913,
2281787498,2147563627,2147557484,2239967309,2239961166,2239955023,2239930448,
2147655761,2277654624,2277648481,2147674196,2239942741,2239942742,2265059426,
2147524664,2147661913,2147489946,2223153243,2193786972,2223140957,2147504286,
2218940511,2231498851,2176966756,2227286118,2147551341,2147545198,2147537007,
2147530864,2176884860,2147524740,2147524744,2147524746,2147524757,2147489942,
2147516571,2147496092,2147510429,2147496095,2147496096,2147496097,2147489954,
2147489955,2147483814,603988815,603980346,0,805306517,3221225534,0,1073809516,
805306522,3221225538,0,603988815,603980359,0,603988815,603980405,0,1073809524,
805306522,3221225548,0,805306459,3221225551,0,603988815,603980420,0,1073776648,
805306434,3221225558,0,603988815,603980432,0,805306476,3221225564,0,805306475,
3221225567,0,603988815,603980445,0,603988815,603980460,0,603988815,603980475,
0,603988815,603980490,0,603988815,603980523,0,603988815,603980540,0,603988815,
603980553,0,603988815,603980566,0,603988815,603980588,0,603988815,603980598,
0,603988815,603980611,0,603988815,603980624,0,805306461,3221225606,0,805306435,
3221225609,0,805306477,3221225612,0,805306447,3221225615,0,603988815,603980647,
0,805306452,3221225621,0,603988815,603980662,0,603988815,603980715,0,805306445,
3221225630,0,603988815,603980768,0,2583691315,1966081,65537,4026531840,268435456,
603988815,603980839,603988575,0,0,4026531840,0,2852126736,7929857,262162,2214617104,
2147508353,2147508354,2147508355,2147508356,2181062661,2147508278,2147508279,
2185232440,2147491897,2164277306,2147508283,2147508348,2147508245,2147508346,
2147508351,2147508352,2147508360,2147483720,603989413,603989027,0,2147483720,
603989413,603989067,0,2147483720,603989413,603989093,0,2147483720,603989413,
603989101,0,4026531840,2583756856,7995393,65538,4026531840,0,603989035,0,0,2785017858,
8060929,196620,2172649488,2147483777,2172649594,2172649531,2172649596,2147483653,
2168455296,2147483775,2147483778,2147483779,2147483780,2147483784,603989055,
0,603989057,0,0,603989477,0,2852192261,327681,1,2147483784,2147483817,268435456,
1073809588,805306537,0,4026531840,2583756857,8126465,65538,4026531840,0,603989075,
0,0,2785017858,8192001,196619,2189426816,2147483777,2164260986,2168455227,2168455292,
2147483653,2147483778,2147483775,2147483779,2147483780,2147483784,603989055,
0,603989057,0,2583756858,8257537,65538,4026531840,0,603989075,0,0,2852126750,
8323073,196623,2189438992,2147526785,2185259130,2185248827,2185259132,2160097285,
2147491894,2155880503,2147483669,2147522687,2164299904,2147526786,2147530883,
2147530884,2147534984,268435456,1073779976,805306440,0,603992672,0,603989477,
0,2147483777,268435456,603996678,603992336,0,603997351,0,2147483806,268435456,
603997461,0,603997478,0,603997527,0,603997631,0,2147483817,268435456,1073809588,
805306537,0,4026531840,0,2852192261,8388609,1,2147483707,2147483777,268435456,
603996678,603992336,0,4026531840,2852126729,8454145,65538,2147483716,2147495959,
2147483779,268435456,603989179,603996688,603992336,0,268435456,603989188,0,603989185,
603981886,0,0,603989182,603981886,0,1073780760,805306441,0,1073780752,805306441,
0,2852126726,6225921,131078,2164267032,2147483763,2147483666,2139095099,2151678068,
2147483784,603989204,603985270,0,268435456,603989296,0,4026531840,2852192259,
1245185,1,2147483672,268435456,603989212,0,4026531840,2852192259,4521985,1,2147483666,
268435456,603989220,0,4026531840,2852126727,6291457,327735,2340421664,2340421665,
2340421666,2269118499,2340421668,2172649477,2340421670,2256535591,2340421736,
2147483753,2147483690,2315255845,2239758348,2239758381,2239758382,2239758383,
2239758384,2239758385,2172649490,2239764499,2147483700,2235564053,2147483670,
2147483671,2214592562,2147483707,2218786842,2139095067,2214592540,2147483710,
2143289374,2206203967,2218786883,2231369831,2147483756,2147483757,2147483758,
2147483759,2147483760,2147483761,2147483762,2147483763,2147483765,2147483770,
2147483772,2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,
2147483781,2147483782,2147483783,2147483784,603989286,603987198,0,268435456,
1073785392,805306442,0,4026531840,2852192260,4718593,1,2147483667,268435456,
1073783608,805306442,0,4026531840,0,2852192259,4521985,1,2147483666,268435456,
603989304,0,4026531840,2852126727,6291457,327735,2340421664,2340421665,2340421666,
2269118499,2340421668,2172649477,2340421670,2256535591,2340421736,2147483753,
2147483690,2315255845,2239758348,2239758381,2239758382,2239758383,2239758384,
2239758385,2172649490,2239764499,2147483700,2235564053,2147483670,2147483671,
2214592562,2147483707,2218786842,2139095067,2214592540,2147483710,2143289374,
2206203967,2218786883,2231369831,2147483756,2147483757,2147483758,2147483759,
2147483760,2147483761,2147483762,2147483763,2147483765,2147483770,2147483772,
2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,2147483781,
2147483782,2147483783,2147483784,603989370,603987198,0,268435456,1073786152,
805306442,0,4026531840,2852192260,4718593,1,2147483667,268435456,1073785136,
805306442,0,4026531840,0,2852126727,7798785,262162,2214592528,2147483777,2147483778,
2147483779,2147483780,2181038085,2147483702,2147483703,2185232440,2147483705,
2164260922,2147483707,2147483772,2147489813,2147483770,2147483775,2147483776,
2147483784,603989410,603992672,0,268435456,1073779728,805306440,0,4026531840,
0,1073779472,805306440,0,3087017437,2768240675,0,262160,2164295808,2164295809,
2147483802,2147489951,2147489952,2147489953,2147483798,2147483817,2147549256,
2139152457,2113978442,2147510427,2147489948,2147504285,2147498142,2097195135,
805306496,3221225494,0,1073809516,805306522,3221225498,0,603989413,603980359,
0,603989413,603980405,0,1073809524,805306522,3221225508,0,1073803016,805306495,
3221225512,0,603989413,603989161,0,1073780744,805306441,3221225519,0,1073742600,
805306440,3221225523,0,603989413,603989380,0,4026531840,2499805256,0,65537,4026531840,
0,0,805306443,0,2852126736,8519681,196623,2172674064,2185240633,2172665914,2185257019,
2185257084,2147508229,2160066616,2147508351,2160091258,2168479872,2147508353,
2147508354,2147508355,2147508356,2147508360,2147483722,603990499,603989513,0,
2147483722,603990499,603989975,0,2147483722,603990499,603990113,0,2147483722,
603990499,603990257,0,4026531840,0,2583756856,7995393,65538,4026531840,0,603989521,
0,0,2785017860,8585217,196621,2181038096,2147483777,2176843898,2176843835,2176843900,
2147483653,2147483775,2143293463,2164260992,2147483778,2147483779,2147483780,
2147483784,603989543,0,603989057,0,4026531840,0,2852192259,7995393,1,2147483704,
268435456,603989551,0,4026531840,2852126727,8650753,196620,2172649488,2147491969,
2172657786,2172657723,2172657788,2147491845,2168463488,2147491967,2147491970,
2147491971,2147491972,2147491976,268435456,603989575,603996295,0,603989775,603996295,
0,4026531840,0,2852192259,3866625,1,2147483671,268435456,603989583,0,4026531840,
2852126726,6225921,131078,2164267032,2147483763,2147483666,2139095099,2151678068,
2147483784,603989599,603985270,0,268435456,603989691,0,4026531840,2852192259,
1245185,1,2147483672,268435456,603989607,0,4026531840,2852192259,4521985,1,2147483666,
268435456,603989615,0,4026531840,2852126727,6291457,327735,2340421664,2340421665,
2340421666,2269118499,2340421668,2172649477,2340421670,2256535591,2340421736,
2147483753,2147483690,2315255845,2239758348,2239758381,2239758382,2239758383,
2239758384,2239758385,2172649490,2239764499,2147483700,2235564053,2147483670,
2147483671,2214592562,2147483707,2218786842,2139095067,2214592540,2147483710,
2143289374,2206203967,2218786883,2231369831,2147483756,2147483757,2147483758,
2147483759,2147483760,2147483761,2147483762,2147483763,2147483765,2147483770,
2147483772,2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,
2147483781,2147483782,2147483783,2147483784,603989681,603987198,0,268435456,
1073782848,805306442,0,4026531840,2852192260,4718593,1,2147483667,268435456,
1073781320,805306442,0,4026531840,0,2852192259,4521985,1,2147483666,268435456,
603989699,0,4026531840,2852126727,6291457,327735,2340421664,2340421665,2340421666,
2269118499,2340421668,2172649477,2340421670,2256535591,2340421736,2147483753,
2147483690,2315255845,2239758348,2239758381,2239758382,2239758383,2239758384,
2239758385,2172649490,2239764499,2147483700,2235564053,2147483670,2147483671,
2214592562,2147483707,2218786842,2139095067,2214592540,2147483710,2143289374,
2206203967,2218786883,2231369831,2147483756,2147483757,2147483758,2147483759,
2147483760,2147483761,2147483762,2147483763,2147483765,2147483770,2147483772,
2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,2147483781,
2147483782,2147483783,2147483784,603989765,603987198,0,268435456,1073784888,
805306442,0,4026531840,2852192260,4718593,1,2147483667,268435456,1073782592,
805306442,0,4026531840,0,2852192259,3866625,1,2147483671,268435456,603989783,
0,4026531840,2852126726,6225921,131078,2164267032,2147483763,2147483666,2139095099,
2151678068,2147483784,603989799,603985270,0,268435456,603989891,0,4026531840,
2852192259,1245185,1,2147483672,268435456,603989807,0,4026531840,2852192259,
4521985,1,2147483666,268435456,603989815,0,4026531840,2852126727,6291457,327735,
2340421664,2340421665,2340421666,2269118499,2340421668,2172649477,2340421670,
2256535591,2340421736,2147483753,2147483690,2315255845,2239758348,2239758381,
2239758382,2239758383,2239758384,2239758385,2172649490,2239764499,2147483700,
2235564053,2147483670,2147483671,2214592562,2147483707,2218786842,2139095067,
2214592540,2147483710,2143289374,2206203967,2218786883,2231369831,2147483756,
2147483757,2147483758,2147483759,2147483760,2147483761,2147483762,2147483763,
2147483765,2147483770,2147483772,2147483775,2147483776,2147483777,2147483778,
2147483779,2147483780,2147483781,2147483782,2147483783,2147483784,603989881,
603987198,0,268435456,1073784632,805306442,0,4026531840,2852192260,4718593,1,
2147483667,268435456,1073782336,805306442,0,4026531840,0,2852192259,4521985,
1,2147483666,268435456,603989899,0,4026531840,2852126727,6291457,327735,2340421664,
2340421665,2340421666,2269118499,2340421668,2172649477,2340421670,2256535591,
2340421736,2147483753,2147483690,2315255845,2239758348,2239758381,2239758382,
2239758383,2239758384,2239758385,2172649490,2239764499,2147483700,2235564053,
2147483670,2147483671,2214592562,2147483707,2218786842,2139095067,2214592540,
2147483710,2143289374,2206203967,2218786883,2231369831,2147483756,2147483757,
2147483758,2147483759,2147483760,2147483761,2147483762,2147483763,2147483765,
2147483770,2147483772,2147483775,2147483776,2147483777,2147483778,2147483779,
2147483780,2147483781,2147483782,2147483783,2147483784,603989965,603987198,0,
268435456,1073785904,805306442,0,4026531840,2852192260,4718593,1,2147483667,
268435456,1073784376,805306442,0,4026531840,0,2583756857,8126465,65538,4026531840,
0,603989983,0,0,2785017860,8716289,196620,2193621120,2147483777,2172649594,2172649531,
2172649596,2147483653,2147483775,2143293463,2147483778,2147483779,2147483780,
2147483784,603990003,0,603989057,0,4026531840,2852192260,8126465,1,2147483705,
268435456,603990013,603996295,0,4026531840,0,2852192259,3866625,1,2147483671,
268435456,603990021,0,4026531840,2852192259,1245185,1,2147483672,268435456,603990029,
0,4026531840,2852192259,4521985,1,2147483666,268435456,603990037,0,4026531840,
2852126727,6291457,327735,2340421664,2340421665,2340421666,2269118499,2340421668,
2172649477,2340421670,2256535591,2340421736,2147483753,2147483690,2315255845,
2239758348,2239758381,2239758382,2239758383,2239758384,2239758385,2172649490,
2239764499,2147483700,2235564053,2147483670,2147483671,2214592562,2147483707,
2218786842,2139095067,2214592540,2147483710,2143289374,2206203967,2218786883,
2231369831,2147483756,2147483757,2147483758,2147483759,2147483760,2147483761,
2147483762,2147483763,2147483765,2147483770,2147483772,2147483775,2147483776,
2147483777,2147483778,2147483779,2147483780,2147483781,2147483782,2147483783,
2147483784,603990103,603987198,0,268435456,1073783088,805306442,0,4026531840,
2852192260,4718593,1,2147483667,268435456,1073781560,805306442,0,4026531840,
0,2583756858,8257537,65538,4026531840,0,603990121,0,0,2785017860,8716289,196620,
2193621120,2147483777,2172649594,2172649531,2172649596,2147483653,2147483775,
2143293463,2147483778,2147483779,2147483780,2147483784,603990141,0,603989057,
0,4026531840,2852192260,8257537,1,2147483706,268435456,603990151,603996295,0,
4026531840,0,2852192264,3866625,1,2147483671,268435456,2147483723,2147483709,
603990165,603989475,603985400,603995898,0,4026531840,0,2852192259,1245185,1,
2147483672,268435456,603990173,0,4026531840,2852192259,4521985,1,2147483666,
268435456,603990181,0,4026531840,2852126727,6291457,327735,2340421664,2340421665,
2340421666,2269118499,2340421668,2172649477,2340421670,2256535591,2340421736,
2147483753,2147483690,2315255845,2239758348,2239758381,2239758382,2239758383,
2239758384,2239758385,2172649490,2239764499,2147483700,2235564053,2147483670,
2147483671,2214592562,2147483707,2218786842,2139095067,2214592540,2147483710,
2143289374,2206203967,2218786883,2231369831,2147483756,2147483757,2147483758,
2147483759,2147483760,2147483761,2147483762,2147483763,2147483765,2147483770,
2147483772,2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,
2147483781,2147483782,2147483783,2147483784,603990247,603987198,0,268435456,
1073783352,805306442,0,4026531840,2852192260,4718593,1,2147483667,268435456,
1073781824,805306442,0,4026531840,0,2852126746,8650753,196620,2172649488,2147518593,
2172668026,2172657723,2172668028,2147506181,2168486016,2147514495,2147518594,
2147522691,2147522692,2147526792,268435456,603990299,603996295,0,2147483777,
268435456,603996678,603992336,0,603997351,0,2147483806,268435456,603997461,0,
603997478,0,603997527,0,603997631,0,2147483817,268435456,1073809588,805306537,
0,4026531840,2852192259,3866625,1,2147483671,268435456,603990307,0,4026531840,
2852126726,6225921,131078,2164267032,2147483763,2147483666,2139095099,2151678068,
2147483784,603990323,603985270,0,268435456,603990415,0,4026531840,2852192259,
1245185,1,2147483672,268435456,603990331,0,4026531840,2852192259,4521985,1,2147483666,
268435456,603990339,0,4026531840,2852126727,6291457,327735,2340421664,2340421665,
2340421666,2269118499,2340421668,2172649477,2340421670,2256535591,2340421736,
2147483753,2147483690,2315255845,2239758348,2239758381,2239758382,2239758383,
2239758384,2239758385,2172649490,2239764499,2147483700,2235564053,2147483670,
2147483671,2214592562,2147483707,2218786842,2139095067,2214592540,2147483710,
2143289374,2206203967,2218786883,2231369831,2147483756,2147483757,2147483758,
2147483759,2147483760,2147483761,2147483762,2147483763,2147483765,2147483770,
2147483772,2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,
2147483781,2147483782,2147483783,2147483784,603990405,603987198,0,268435456,
1073784120,805306442,0,4026531840,2852192260,4718593,1,2147483667,268435456,
1073782080,805306442,0,4026531840,0,2852192259,4521985,1,2147483666,268435456,
603990423,0,4026531840,2852126727,6291457,327735,2340421664,2340421665,2340421666,
2269118499,2340421668,2172649477,2340421670,2256535591,2340421736,2147483753,
2147483690,2315255845,2239758348,2239758381,2239758382,2239758383,2239758384,
2239758385,2172649490,2239764499,2147483700,2235564053,2147483670,2147483671,
2214592562,2147483707,2218786842,2139095067,2214592540,2147483710,2143289374,
2206203967,2218786883,2231369831,2147483756,2147483757,2147483758,2147483759,
2147483760,2147483761,2147483762,2147483763,2147483765,2147483770,2147483772,
2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,2147483781,
2147483782,2147483783,2147483784,603990489,603987198,0,268435456,1073785648,
805306442,0,4026531840,2852192260,4718593,1,2147483667,268435456,1073783864,
805306442,0,4026531840,0,2768240670,0,196622,2193655936,2193655937,2172708938,
2147510427,2147489948,2147504285,2160066710,2160109695,2147483802,2147498142,
2147489951,2147489952,2151684257,2147483817,805306496,3221225491,0,1073809516,
805306522,3221225495,0,603990499,603980359,0,603990499,603980405,0,1073809524,
805306522,3221225505,0,1073803016,805306495,3221225509,0,2583691287,3866625,
65537,4026531840,268435456,603990499,603989188,0,0,4026531840,2852126736,196609,
262170,2231394352,2147508353,2227200018,2202034243,2227200052,2197839877,2147508358,
2223005719,2147508360,2147508329,2147508346,2147508283,2172657676,2172674111,
2147483710,2139119663,2172674163,2176860277,2147508348,2147508351,2147508352,
2147508354,2147508355,2147508356,2147508357,2147508359,2147483725,603990671,
603979780,0,2147483725,603990671,603979858,0,2147483725,603990671,603979886,
0,2147483725,603990671,603990593,0,4026531840,2852126770,8781825,262167,2218790960,
2147553409,2214625298,2193621059,2214600756,2214649861,2147571846,2210420759,
2147575944,2147528809,2147537018,2147520571,2147537020,2160083007,2168488051,
2139099183,2147549311,2147549312,2147553410,2147557507,2147557508,2147561605,
2147571847,603991536,0,603986272,0,2147483718,268435456,603988361,0,268435456,
603980300,0,2147483760,268435456,603980290,603991032,0,603996161,0,2147483780,
268435456,603996913,0,2147483784,268435456,603996863,0,603997351,0,2147483806,
268435456,603997461,0,603997478,0,603997527,0,603997631,0,2147483810,268435456,
1073809540,805306530,0,603997576,0,2147483814,268435456,1073809564,805306534,
0,4026531840,0,2768240683,0,262175,2218836048,2264973393,2147489954,2147489955,
2160128068,2210459733,2189426758,2193688660,2193621048,2147539033,2197815434,
2197864539,2197815420,2197901389,2197895246,2197889103,2168516694,2193662064,
2147483780,2147483784,2147483797,2185238678,2147489946,2147516571,2147496092,
2147510429,2147504286,2147496095,2147496096,2147496097,2147483814,805306459,
3221225508,0,805306517,3221225511,0,1073809516,805306522,3221225515,0,603990671,
603980359,0,603990671,603980405,0,1073809524,805306522,3221225525,0,1073791240,
805306459,3221225529,0,805306447,3221225532,0,603990671,603980647,0,805306452,
3221225538,0,603990671,603980662,0,603990671,603980715,0,805306445,3221225547,
0,0,4026531840,2852126732,196609,262170,2231386160,2147500161,2227191826,2202026051,
2227191860,2197831685,2147500166,2222997527,2147500168,2147500137,2147500154,
2147500091,2172665868,2172665919,2147483710,2139111471,2172665971,2176852085,
2147500156,2147500159,2147500160,2147500162,2147500163,2147500164,2147500165,
2147500167,2147483727,603990880,603990791,0,2147483727,603990880,603979886,0,
2147483727,603990880,603987714,0,4026531840,2583756862,1,65538,4026531840,0,
603990799,0,0,2785017860,131073,262171,2235564080,2147483777,2231369746,2206203971,
2231369780,2202009605,2147483782,2227175447,2147483784,2147483753,2147483770,
2147483707,2176843788,2147487805,2147483710,2151677999,2164260927,2172649587,
2176843893,2147483772,2147483775,2147483776,2147483778,2147483779,2147483780,
2147483781,2147483783,603990835,0,603979826,0,4026531840,0,2852192260,1,1,2147483710,
268435456,603990845,603990749,0,4026531840,0,2852126725,3342337,1,2147483671,
2147483735,268435456,603990857,603991346,0,1073787664,805306447,0,1073787416,
805306447,0,2852126732,3342337,65539,2155880509,2143289403,2147500149,268435456,
603980752,603991032,0,268435456,603980762,603997700,0,2147483786,603980765,603997104,
0,4026531840,0,3087018908,2768240670,0,262168,2176893008,2235613265,2147489954,
2147489955,2147483780,2147483797,2189426758,2206244976,2151678008,2147483784,
2176843914,2176893019,2176843900,2147510429,2147504286,2168510543,2176850070,
2147489946,2147516571,2147496092,2147496095,2147496096,2147496097,2147483814,
805306459,3221225502,0,805306517,3221225505,0,1073809516,805306522,3221225509,
0,603990880,603980359,0,603990880,603980405,0,1073809524,805306522,3221225519,
0,1073791240,805306459,3221225523,0,805306447,3221225526,0,603990880,603990860,
0,4026531840,0,2499805263,0,65537,4026531840,0,0,2852126728,8847361,65538,2147483709,
2143297595,268435456,603980320,603997700,0,268435456,603980323,603991032,0,4026531840,
2852126728,8912897,65538,2151686156,2147483710,2147483729,603990974,603991004,
0,2147483729,603990974,603990976,0,4026531840,805306449,0,2852192260,589825,
1,2147483660,2147483730,268435456,603990986,0,4026531840,0,2852192259,262145,
1,2147483709,268435456,603990994,0,4026531840,2852192260,8978433,1,2147483712,
268435456,1073788440,805306450,0,4026531840,0,2852192260,1,1,2147483710,2147483731,
268435456,603991014,0,4026531840,0,2852192259,262145,1,2147483709,268435456,
603991022,0,4026531840,2852192260,9043969,1,2147483713,268435456,1073788696,
805306451,0,4026531840,0,2852126736,3473409,327717,2147508352,2147508353,2147508354,
2273337411,2147508356,2269143045,2147508358,2264948839,2264948840,2147508329,
2227200050,2147483710,2189434892,2147508333,2147508334,2185257007,2185257008,
2147508337,2113953810,2147508339,2147508276,2147500149,2147508332,2147508247,
2147508335,2147508336,2147508346,2147508283,2147508348,2147508338,2067816478,
2151702591,2147508351,2147508355,2147508357,2147508359,2147508360,2147483724,
603991160,603979780,0,2147483724,603991160,603979858,0,2147483724,603991160,
603979886,0,2147483724,603991160,603985168,0,4026531840,0,805306506,0,2852126724,
9109505,131077,2164264984,2151677965,2147487785,2147487763,2147487804,603991106,
0,603991152,0,4026531840,0,2785017859,1048577,327719,2147483776,2147483777,2147483778,
2281701443,2147483780,2277507077,2147483782,2273312871,2273312872,2147483753,
2239758386,2147483710,2189426700,2147483757,2147483758,2189426735,2202009648,
2147483761,2113929234,2147483763,2202009652,2147483765,2147483756,2147483671,
2147487768,2147483759,2147483770,2147483707,2147483772,2147483760,2067791902,
2160066623,2147483762,2147487860,2147483775,2147483779,2147483781,2147483783,
2147483784,603980823,0,4026531840,4026531840,2852126721,9175041,65538,2147483689,
2143289363,4026531840,4026531840,0,3087019308,2768240760,0,327735,2223140928,
2223140929,2235791426,2357334115,2265114692,2147606629,2260770886,2147594343,
2286000232,2147582057,2281793642,2147569771,2239979596,2239973453,2239967310,
2239961167,2239936592,2147661905,2281855072,2281848929,2147680340,2244143189,
2244143190,2269259874,2147524664,2147668057,2147489946,2227353691,2193793116,
2227341405,2147504286,2223140959,2181167204,2235680870,2185312364,2147557485,
2147551342,2147543151,2147537008,2181079164,2147524740,2147524744,2147524746,
2147530892,2147524757,2147489942,2147516571,2147496092,2147510429,2147496095,
2147496096,2147496097,2147489954,2147489955,2147483814,603991160,603980346,0,
805306517,3221225536,0,1073809516,805306522,3221225540,0,603991160,603980359,
0,603991160,603980405,0,1073809524,805306522,3221225550,0,805306459,3221225553,
0,805306506,3221225556,0,603991160,603980420,0,1073776648,805306434,3221225563,
0,603991160,603980432,0,805306476,3221225569,0,805306475,3221225572,0,603991160,
603980445,0,603991160,603980460,0,603991160,603980475,0,603991160,603980490,
0,603991160,603980523,0,603991160,603980540,0,603991160,603980553,0,603991160,
603980566,0,603991160,603980588,0,603991160,603980598,0,603991160,603980611,
0,603991160,603980624,0,805306461,3221225611,0,805306444,3221225614,0,805306477,
3221225617,0,805306447,3221225620,0,603991160,603980647,0,805306452,3221225626,
0,603991160,603980662,0,603991160,603980715,0,805306445,3221225635,0,603991160,
603980768,0,603991160,603991092,0,2583691315,1966081,65537,4026531840,268435456,
603991160,603980839,603988575,0,4026531840,2499805260,0,65537,4026531840,0,0,
2852126730,9240577,327720,2147483776,2147483777,2147483778,2285895747,2147483780,
2281701381,2147483782,2277507175,2277507176,2147483753,2243952690,2147483710,
2189426700,2197821453,2147483758,2206203951,2214592560,2147483761,2113929234,
2147483763,2206203956,2147483765,2147483756,2147483671,2147495960,2147483757,
2147483770,2147483707,2147483772,2147483759,2067791902,2164260927,2147483760,
2147483762,2147483764,2147483775,2147483779,2147483781,2147483783,2147483784,
603991400,603991701,0,268435456,603991424,0,268435456,1073790224,805306455,0,
4026531840,2852126727,1441793,65538,2147489816,2147483661,268435456,603991414,
0,268435456,1073789976,805306455,0,4026531840,0,2852192260,1245185,1,2147483672,
268435456,1073789984,805306455,0,4026531840,0,2852192260,1245185,1,2147483672,
268435456,1073790232,805306455,0,4026531840,0,2852126739,9306113,131076,2147502216,
2147514485,2147493947,2143289367,2147483735,268435456,603991462,603991346,0,
268435456,603991465,603991032,0,2147483818,268435456,1073809588,1073741840,805306458,
0,2147483786,603991462,603997104,0,4026531840,0,1073741840,805306458,0,2852192260,
1769473,1,2147483708,268435456,1073790752,805306458,0,4026531840,0,2852126737,
3342337,131076,2147493947,2151696445,2147510389,2134900759,2147483735,268435456,
603991501,603991346,0,268435456,603991504,603991032,0,268435456,603991514,603997700,
0,2147483786,603991517,603997104,0,4026531840,0,1073788944,805306458,0,2852192260,
1769473,1,2147483708,268435456,1073786656,805306458,0,4026531840,0,1073786904,
805306458,0,1073787152,805306458,0,3087019498,2499805274,0,65539,4026531840,
0,0,603991520,603991475,0,2499805274,0,65537,4026531840,0,0,2852126728,9371649,
262167,2218795056,2147491969,2214600722,2189434947,2214600756,2185240581,2147491974,
2210406423,2147491976,2147491945,2147491962,2147491899,2147491964,2172657779,
2176843893,2151686191,2147491967,2147491968,2147491970,2147491971,2147491972,
2147491973,2147491975,2147483739,603991648,603979886,0,2147483739,603991648,
603991572,0,4026531840,0,2852126769,9437185,262166,2214662192,2147518593,2210463762,
2189426755,2210471988,2210420741,2147537030,2206294039,2147491976,2147565673,
2147502202,2147541051,2147502204,2168520819,2147514495,2143359023,2147514496,
2147518594,2147522691,2147522692,2147526789,2147537031,268435456,1073790984,
805306459,0,2147483814,268435456,1073809564,805306534,0,603997351,0,2147483806,
268435456,603997461,0,603997478,0,603997527,0,603997631,0,2147483810,268435456,
1073809540,805306530,0,603997576,0,2147483780,268435456,603996913,0,603996161,
0,603986272,0,2147483718,268435456,603988361,0,2147483784,268435456,603996863,
0,2147483760,268435456,603980290,603991032,0,4026531840,0,2768240665,0,262165,
2227216496,2147496097,2147489954,2147489955,2147483780,2147483797,2160066630,
2147483784,2143289400,2193627286,2172649610,2172698715,2172649596,2147510429,
2147504286,2147496095,2147489946,2147516571,2147496092,2147496096,2147483814,
805306459,3221225498,0,805306517,3221225501,0,1073809516,805306522,3221225505,
0,603991648,603980359,0,603991648,603980405,0,1073809524,805306522,3221225515,
0,1073791240,805306459,3221225519,0,0,4026531840,1073791504,805306460,0,2852126736,
9502721,327718,2147508352,2147508353,2147508354,2277531715,2147508356,2273337349,
2147508358,2269143143,2269143144,2147508329,2227200050,2147483710,2189434892,
2147508333,2147508334,2185257007,2185257008,2147508337,2113953810,2147508339,
2197839924,2147500149,2147508332,2147508247,2147508335,2147508336,2147508346,
2147508283,2147508348,2147508338,2067816478,2155896895,2147508340,2147508351,
2147508355,2147508357,2147508359,2147508360,2147483736,603991976,603979780,0,
2147483736,603991976,603979858,0,2147483736,603991976,603979886,0,2147483736,
603991976,603991759,0,4026531840,2852126789,9568257,327715,2147588224,2147592321,
2147592322,2256543811,2147596420,2260826117,2147610758,2256539751,2256539752,
2147567721,2197854258,2147487855,2147487852,2147487853,2147487854,2130724911,
2168490032,2147483761,2114000914,2147555443,2164308020,2147487856,2147483762,
2147495959,2147508340,2147588223,2147575930,2147559483,2147575932,2147596419,
2147545118,2122373183,2147600517,2147610759,2147614856,603994820,0,603995279,
0,603991536,0,268435456,603980070,0,268435456,603983089,0,2147483844,268435456,
603997773,603992336,0,603986272,0,2147483712,268435456,603987120,0,2147483718,
268435456,603988361,0,268435456,603980300,0,2147483740,268435456,603991698,603995279,
0,603996161,0,2147483780,268435456,603996913,0,2147483784,268435456,603996863,
0,603997351,0,2147483806,268435456,603997461,0,603997478,0,603997527,0,603997631,
0,2147483810,268435456,1073809540,805306530,0,603997576,0,2147483814,268435456,
1073809564,805306534,0,4026531840,2785017859,1048577,327719,2147483776,2147483777,
2147483778,2281701443,2147483780,2277507077,2147483782,2273312871,2273312872,
2147483753,2239758386,2147483710,2189426700,2147483757,2147483758,2189426735,
2202009648,2147483761,2113929234,2147483763,2202009652,2147483765,2147483756,
2147483671,2147487768,2147483759,2147483770,2147483707,2147483772,2147483760,
2067791902,2160066623,2147483762,2147483764,2147483775,2147483779,2147483781,
2147483783,2147483784,603991913,0,4026531840,4026531840,2852192259,1441793,1,
2147483661,268435456,603991921,0,4026531840,2852126729,9502721,327718,2147496064,
2147496065,2147496066,2277519427,2147496068,2273325061,2147496070,2269130855,
2269130856,2147496041,2227187762,2147495998,2189438988,2147496045,2147496046,
2185244719,2185244720,2147496049,2113941522,2147496051,2197827636,2147496053,
2147496044,2147495959,2147496047,2147496048,2147496058,2147495995,2147496060,
2147496050,2067804190,2155884607,2147483764,2147496063,2147496067,2147496069,
2147496071,2147496072,2147483844,268435456,603991973,603997773,603992336,0,603991973,
603992336,0,4026531840,0,1073761048,805306456,0,3087020126,2768240762,0,327735,
2227337280,2239920193,2273544258,2353141859,2269319236,2147608677,2264973382,
2147596391,2286002280,2147584105,2281795690,2147571819,2147565676,2239983693,
2239977550,2239971407,2239932496,2147657809,2147670104,2273468512,2147690580,
2239959125,2239959126,2260879457,2122367032,2147663961,2147498138,2223155291,
2193789020,2222981213,2147512478,2218948703,2227318882,2176974948,2227294310,
2147559533,2147553390,2147545199,2147539056,2176893052,2206253188,2147532936,
2147532938,2147532949,2147498134,2147524763,2147504284,2147518621,2147504287,
2147504288,2147504289,2147498146,2147498147,2147492006,2147483844,1073742600,
805306456,3221225534,0,603991976,603980346,0,805306517,3221225540,0,1073809516,
805306522,3221225544,0,603991976,603980359,0,603991976,603980405,0,1073809524,
805306522,3221225554,0,805306459,3221225557,0,603991976,603980420,0,1073776648,
805306434,3221225564,0,603991976,603980432,0,805306476,3221225570,0,805306475,
3221225573,0,603991976,603980445,0,603991976,603980460,0,603991976,603980475,
0,603991976,603980490,0,603991976,603980523,0,603991976,603980540,0,603991976,
603980553,0,603991976,603980566,0,603991976,603980588,0,603991976,603980598,
0,603991976,603980611,0,603991976,603980624,0,805306461,3221225612,0,805306477,
3221225615,0,805306447,3221225618,0,603991976,603980647,0,2583691277,1441793,
65537,4026531840,603991976,603991867,0,805306452,3221225631,0,603991976,603980662,
0,603991976,603980715,0,805306445,3221225640,0,603991976,603980768,0,2583691315,
1966081,65537,4026531840,268435456,603991976,603980839,603988575,0,4026531840,
2499805272,0,65537,4026531840,0,0,2583691333,9633793,983043,4026531840,0,0,2147483742,
603992216,0,2147483742,603992224,0,2147483742,603992232,0,2147483742,603992240,
0,2147483742,603992248,0,2147483742,603992256,0,2147483742,603992264,0,2147483742,
603992272,0,2147483742,603992280,0,2147483742,603992288,0,2147483742,603992296,
0,2147483742,603992304,0,2147483742,603992312,0,2147483742,603992320,0,2147483742,
603992328,0,0,2852192259,9699329,1,2147483717,268435456,805306462,0,4026531840,
2852192259,9764865,1,2147483718,268435456,805306462,0,4026531840,2852192259,
9830401,1,2147483719,268435456,805306462,0,4026531840,2852192259,9895937,1,2147483720,
268435456,805306462,0,4026531840,2852192259,9961473,1,2147483721,268435456,805306462,
0,4026531840,2852192259,10027009,1,2147483722,268435456,805306462,0,4026531840,
2852192259,10092545,1,2147483723,268435456,805306462,0,4026531840,2852192259,
10158081,1,2147483724,268435456,805306462,0,4026531840,2852192259,10223617,1,
2147483725,268435456,805306462,0,4026531840,2852192259,10289153,1,2147483726,
268435456,805306462,0,4026531840,2852192259,10354689,1,2147483727,268435456,
805306462,0,4026531840,2852192259,10420225,1,2147483728,268435456,805306462,
0,4026531840,2852192259,10485761,1,2147483729,268435456,805306462,0,4026531840,
2852192259,10551297,1,2147483730,268435456,805306462,0,4026531840,2852192259,
10616833,1,2147483731,268435456,805306462,0,4026531840,2852126736,3473409,327717,
2147508352,2147508353,2147508354,2273337411,2147508356,2269143045,2147508358,
2264948839,2264948840,2147508329,2227200050,2147483710,2189434892,2147508333,
2147508334,2185257007,2185257008,2147508337,2113953810,2147508339,2147508276,
2147500149,2147508332,2147508247,2147508335,2147508336,2147508346,2147508283,
2147508348,2147508338,2067816478,2151702591,2147508351,2147508355,2147508357,
2147508359,2147508360,2147483741,603992394,603979780,0,2147483741,603992394,
603979858,0,2147483741,603992394,603979886,0,2147483741,603992394,603985168,
0,4026531840,0,2768240752,0,327733,2223134784,2223134785,2235772994,2348939363,
2265102404,2147600485,2260770886,2147588199,2281799784,2147575913,2277593194,
2147563627,2147557484,2235766861,2235760718,2235754575,2235730000,2147649617,
2273460320,2273454177,2147668052,2235742293,2235742294,2260865122,2147524664,
2147655769,2147489946,2218952795,2189586524,2219014237,2147504286,2214746207,
2176966756,2227286118,2147551341,2147545198,2147537007,2147530864,2176884860,
2147524740,2147524744,2147524746,2147524757,2147489942,2147516571,2147496092,
2147510429,2147496095,2147496096,2147496097,2147489954,2147489955,2147483814,
603992394,603980346,0,805306517,3221225533,0,1073809516,805306522,3221225537,
0,603992394,603980359,0,603992394,603980405,0,1073809524,805306522,3221225547,
0,805306459,3221225550,0,603992394,603980420,0,1073776648,805306434,3221225557,
0,603992394,603980432,0,805306476,3221225563,0,805306475,3221225566,0,603992394,
603980445,0,603992394,603980460,0,603992394,603980475,0,603992394,603980490,
0,603992394,603980523,0,603992394,603980540,0,603992394,603980553,0,603992394,
603980566,0,603992394,603980588,0,603992394,603980598,0,603992394,603980611,
0,603992394,603980624,0,805306461,3221225605,0,805306477,3221225608,0,805306447,
3221225611,0,603992394,603980647,0,805306452,3221225617,0,603992394,603980662,
0,603992394,603980715,0,805306445,3221225626,0,603992394,603980768,0,2583691315,
1966081,65537,4026531840,268435456,603992394,603980839,603988575,0,0,4026531840,
0,2852126779,10682369,327713,2147567744,2147571841,2147571842,2235572291,2147575940,
2231445509,2147590278,2239758439,2248147048,2147547241,2147483759,2147483760,
2147483756,2147483757,2147483758,2126524463,2126524464,2147487857,2160117778,
2147534963,2147500084,2147487858,2147567743,2147524631,2147575939,2147580037,
2147555450,2147539003,2147555452,2147590279,2147514398,2109759551,2147594376,
603995279,0,603994820,0,603991536,0,603986272,0,2147483718,268435456,603988361,
0,268435456,603980300,0,2147483740,268435456,603991698,603995279,0,2147483760,
268435456,603980290,603991032,0,603996161,0,2147483780,268435456,603996913,0,
2147483784,268435456,603996863,0,603997351,0,2147483806,268435456,603997461,
0,603997478,0,603997527,0,603997631,0,2147483810,268435456,1073809540,805306530,
0,603997576,0,2147483814,268435456,1073809564,805306534,0,4026531840,2852126724,
10747905,65538,2147483762,2147483761,268435456,1073796624,805306478,0,805306478,
0,0,2852126736,10813441,262161,2206228496,2147508353,2147508354,2147508355,2147508356,
2147508229,2147508278,2147508279,2181038136,2147491897,2160083002,2147508283,
2147508348,2147508346,2147508352,2147508351,2147508360,2147483721,603992894,
603989027,0,2147483721,603992894,603989067,0,2147483721,603992894,603989093,
0,2147483721,603992894,603992710,0,4026531840,0,2852126751,10878977,196622,2185246736,
2147528833,2181066874,2181056571,2181066876,2147516421,2147483702,2151684151,
2147524735,2164301952,2147528834,2147532931,2147532932,2147537032,268435456,
603992760,0,268435456,603992871,603996295,0,603989477,0,2147483777,268435456,
603996678,603992336,0,603997351,0,2147483806,268435456,603997461,0,603997478,
0,603997527,0,603997631,0,2147483817,268435456,1073809588,805306537,0,4026531840,
0,2852126726,10944513,262161,2202017808,2147483777,2197823506,2147483779,2147483780,
2147483653,2147483770,2147491895,2181038136,2147483705,2130706490,2147483707,
2147483772,2147483776,2147483778,2147483775,2147483784,1610612738,67121876,67121882,
0,603992820,0,4026531840,0,603992791,603989477,0,1073780240,805306441,0,603992797,
603996295,0,2852126726,11075585,1,2147483716,2147483779,268435456,603992811,
603996688,603992336,0,603992817,603981886,0,0,603992814,603981886,0,1073780256,
805306441,0,1073780248,805306441,0,2852126731,11141121,65539,2155872272,2147498039,
2147489810,603992791,603989477,0,268435456,603992838,603984800,0,268435456,603992848,
603996295,0,4026531840,2852192260,4718593,1,2147483667,268435456,1073741856,
805306441,0,4026531840,0,2852126726,11075585,1,2147483716,2147483779,268435456,
603992862,603996688,603992336,0,603992868,603981886,0,0,603992865,603981886,
0,1073780520,805306441,0,1073780512,805306441,0,2852126726,11075585,1,2147483716,
2147483779,268435456,603992885,603996688,603992336,0,603992891,603981886,0,0,
603992888,603981886,0,1073781024,805306441,0,1073781016,805306441,0,2768240669,
0,196623,2197850240,2176901193,2176893002,2147510427,2147489948,2147504285,2164261014,
2164303999,2168490113,2147483802,2147498142,2147489951,2147489952,2151684257,
2147483817,805306496,3221225492,0,1073809516,805306522,3221225496,0,603992894,
603980359,0,603992894,603980405,0,1073809524,805306522,3221225506,0,1073803016,
805306495,3221225510,0,603992894,603989161,0,1073780744,805306441,3221225517,
0,0,4026531840,2852126724,11206657,1,2147483736,268435456,603980585,603993358,
0,805306466,0,2852126736,11272193,327716,2147508352,2147508353,2147508354,2269143107,
2147508356,2264948741,2147508358,2260754535,2260754536,2147508329,2147483710,
2147508332,2143297548,2147508333,2147508334,2176868399,2181062704,2147508337,
2176868370,2147508339,2147508276,2147500149,2147508335,2147508247,2147508336,
2147508338,2147508346,2147508283,2147508348,2147508351,2063622174,2139119679,
2147508355,2147508357,2147508359,2147508360,2147483746,603993008,603979780,0,
2147483746,603993008,603979858,0,2147483746,603993008,603979886,0,2147483746,
603993008,603992564,0,4026531840,3087021116,2768240730,0,327724,2147496096,2147496097,
2315372642,2147489955,2206357572,2147588197,2202009670,2147575911,2265010280,
2147563625,2260803690,2147551339,2147545196,2189604941,2223153230,2147649615,
2218928208,2147625041,2218897508,2248245350,2147643476,2218940501,2218940502,
2147539053,2147483704,2147631193,2147489946,2202151003,2172784732,2147510429,
2147504286,2147496095,2147532910,2147524720,2176843900,2147483780,2147483784,
2147483786,2147483797,2147489942,2147516571,2147496092,2147489954,2147483814,
805306459,3221225522,0,805306517,3221225525,0,1073809516,805306522,3221225529,
0,603993008,603980359,0,603993008,603980405,0,1073809524,805306522,3221225539,
0,1073791240,805306459,3221225543,0,603993008,603980432,0,805306476,3221225549,
0,805306475,3221225552,0,603993008,603980445,0,603993008,603980460,0,603993008,
603980475,0,603993008,603980490,0,603993008,603980523,0,603993008,603980540,
0,603993008,603980553,0,603993008,603992942,0,2583691350,3080193,65537,4026531840,
268435456,603993008,603980608,603993154,0,805306477,3221225588,0,805306447,3221225591,
0,603993008,603980647,0,805306452,3221225597,0,603993008,603980662,0,603993008,
603980715,0,805306445,3221225606,0,603993008,603992660,0,4026531840,0,2499805282,
0,65537,4026531840,0,0,2852126736,11272193,327716,2147508352,2147508353,2147508354,
2269143107,2147508356,2264948741,2147508358,2260754535,2260754536,2147508329,
2147483710,2147508332,2143297548,2147508333,2147508334,2176868399,2181062704,
2147508337,2176868370,2147508339,2147508276,2147500149,2147508335,2147508247,
2147508336,2147508338,2147508346,2147508283,2147508348,2147508351,2063622174,
2139119679,2147508355,2147508357,2147508359,2147508360,2147483748,603993222,
603979780,0,2147483748,603993222,603979858,0,2147483748,603993222,603979886,
0,2147483748,603993222,603992564,0,4026531840,603993212,0,2852126724,11206657,
1,2147483736,268435456,603980585,603993358,0,4026531840,0,3087021320,2768240721,
0,327723,2147496096,2147496097,2147489954,2147489955,2206339140,2147588197,2202009670,
2147575911,2265010280,2147563625,2260803690,2147551339,2147545196,2189586509,
2223134798,2147631183,2218909776,2147606609,2218897508,2244051046,2147625044,
2218922069,2218922070,2147539053,2147483704,2147612761,2147489946,2202132571,
2172766300,2147510429,2147504286,2147496095,2147532910,2147524720,2176843900,
2147483780,2147483784,2147483786,2147483797,2147489942,2147516571,2147496092,
2147483814,805306459,3221225521,0,805306517,3221225524,0,1073809516,805306522,
3221225528,0,603993222,603980359,0,603993222,603980405,0,1073809524,805306522,
3221225538,0,1073791240,805306459,3221225542,0,603993222,603980432,0,805306476,
3221225548,0,805306475,3221225551,0,603993222,603980445,0,603993222,603980460,
0,603993222,603980475,0,603993222,603980490,0,603993222,603980523,0,603993222,
603980540,0,603993222,603980553,0,603993222,603993210,0,805306477,3221225578,
0,805306447,3221225581,0,603993222,603980647,0,805306452,3221225587,0,603993222,
603980662,0,603993222,603980715,0,805306445,3221225596,0,603993222,603992660,
0,4026531840,0,2499805284,0,65537,4026531840,0,0,2852126736,11272193,327716,
2147508352,2147508353,2147508354,2269143107,2147508356,2264948741,2147508358,
2260754535,2260754536,2147508329,2147483710,2147508332,2143297548,2147508333,
2147508334,2176868399,2181062704,2147508337,2176868370,2147508339,2147508276,
2147500149,2147508335,2147508247,2147508336,2147508338,2147508346,2147508283,
2147508348,2147508351,2063622174,2139119679,2147508355,2147508357,2147508359,
2147508360,2147483749,603993414,603979780,0,2147483749,603993414,603979858,0,
2147483749,603993414,603979886,0,2147483749,603993414,603992564,0,4026531840,
3087021514,2768240724,0,327722,2147496096,2147496097,2147489954,2147489955,2273454148,
2147588197,2197815366,2147575911,2260815976,2147563625,2256609386,2147551339,
2147545196,2172815437,2185392206,2147637327,2214721616,2147612753,2244051046,
2147539053,2147631188,2214733909,2214733910,2147532910,2147483704,2147618905,
2147489946,2197944411,2168578140,2147510429,2147504286,2147496095,2147524720,
2176843900,2147483780,2147483784,2147483786,2147483797,2147489942,2147516571,
2147496092,2147483814,805306459,3221225520,0,805306517,3221225523,0,1073809516,
805306522,3221225527,0,603993414,603980359,0,603993414,603980405,0,1073809524,
805306522,3221225537,0,1073791240,805306459,3221225541,0,603993414,603980432,
0,805306476,3221225547,0,805306475,3221225550,0,603993414,603980445,0,603993414,
603980460,0,603993414,603980475,0,603993414,603980490,0,603993414,603980523,
0,603993414,603980540,0,2583691353,2883585,65537,4026531840,268435456,603993414,
603980563,603993552,0,805306477,3221225580,0,805306447,3221225583,0,603993414,
603980647,0,805306452,3221225589,0,603993414,603980662,0,603993414,603980715,
0,805306445,3221225598,0,603993414,603992660,0,4026531840,0,2499805285,0,65537,
4026531840,0,0,2852126736,11272193,327716,2147508352,2147508353,2147508354,2269143107,
2147508356,2264948741,2147508358,2260754535,2260754536,2147508329,2147483710,
2147508332,2143297548,2147508333,2147508334,2176868399,2181062704,2147508337,
2176868370,2147508339,2147508276,2147500149,2147508335,2147508247,2147508336,
2147508338,2147508346,2147508283,2147508348,2147508351,2063622174,2139119679,
2147508355,2147508357,2147508359,2147508360,2147483750,603993608,603979780,0,
2147483750,603993608,603979858,0,2147483750,603993608,603979886,0,2147483750,
603993608,603992564,0,4026531840,3087021704,2768240721,0,327721,2147496096,2147496097,
2147489954,2147489955,2269253700,2294382694,2143289414,2147575911,2256621672,
2147563625,2252415082,2147551339,2147545196,2168614989,2168608846,2147631183,
2176966736,2147606609,2147539053,2147532910,2147625044,2210533461,2210533462,
2147524720,2147483704,2147612761,2147489946,2193743963,2164377692,2147510429,
2147504286,2147496095,2176843900,2147483780,2147483784,2147483786,2147483797,
2147489942,2147516571,2147496092,2147483814,805306459,3221225519,0,805306517,
3221225522,0,1073809516,805306522,3221225526,0,603993608,603980359,0,603993608,
603980405,0,1073809524,805306522,3221225536,0,1073791240,805306459,3221225540,
0,603993608,603980432,0,805306476,3221225546,0,805306475,3221225549,0,603993608,
603980445,0,603993608,603980460,0,603993608,603980475,0,603993608,603980490,
0,603993608,603980523,0,2583691354,2818049,65537,4026531840,268435456,603993608,
603980550,603993742,0,805306477,3221225576,0,805306447,3221225579,0,603993608,
603980647,0,805306452,3221225585,0,603993608,603980662,0,603993608,603980715,
0,805306445,3221225594,0,603993608,603992660,0,4026531840,0,2499805286,0,65537,
4026531840,0,0,2852126736,11272193,327716,2147508352,2147508353,2147508354,2269143107,
2147508356,2264948741,2147508358,2260754535,2260754536,2147508329,2147483710,
2147508332,2143297548,2147508333,2147508334,2176868399,2181062704,2147508337,
2176868370,2147508339,2147508276,2147500149,2147508335,2147508247,2147508336,
2147508338,2147508346,2147508283,2147508348,2147508351,2063622174,2139119679,
2147508355,2147508357,2147508359,2147508360,2147483751,603993810,603979780,0,
2147483751,603993810,603979858,0,2147483751,603993810,603979886,0,2147483751,
603993810,603992564,0,4026531840,2852126724,2752513,131076,2147483740,2147483741,
2147483742,2147483739,268435456,603980537,603993934,0,4026531840,3087021896,
2768240712,0,327720,2147496096,2147496097,2147489954,2147489955,2265040964,2147539053,
2285895750,2147575911,2252427368,2147563625,2248220778,2147551339,2147545196,
2114070605,2164396110,2147612751,2160171088,2147588177,2147532910,2147524720,
2147606612,2206320725,2206320726,2210398332,2147483704,2147594329,2147489946,
2189531227,2126610524,2147510429,2147504286,2147496095,2147483780,2147483784,
2147483786,2147483797,2147489942,2147516571,2147496092,2147483814,805306459,
3221225518,0,805306517,3221225521,0,1073809516,805306522,3221225525,0,603993810,
603980359,0,603993810,603980405,0,1073809524,805306522,3221225535,0,1073791240,
805306459,3221225539,0,603993810,603980432,0,805306476,3221225545,0,805306475,
3221225548,0,603993810,603980445,0,603993810,603980460,0,603993810,603980475,
0,603993810,603980490,0,603993810,603993798,0,805306477,3221225566,0,805306447,
3221225569,0,603993810,603980647,0,805306452,3221225575,0,603993810,603980662,
0,603993810,603980715,0,805306445,3221225584,0,603993810,603992660,0,4026531840,
0,2499805287,0,65537,4026531840,0,0,2852126736,11272193,327716,2147508352,2147508353,
2147508354,2269143107,2147508356,2264948741,2147508358,2260754535,2260754536,
2147508329,2147483710,2147508332,2143297548,2147508333,2147508334,2176868399,
2181062704,2147508337,2176868370,2147508339,2147508276,2147500149,2147508335,
2147508247,2147508336,2147508338,2147508346,2147508283,2147508348,2147508351,
2063622174,2139119679,2147508355,2147508357,2147508359,2147508360,2147483752,
603994012,603979780,0,2147483752,603994012,603979858,0,2147483752,603994012,
603979886,0,2147483752,603994012,603992564,0,4026531840,2852126732,2686977,131078,
2147483744,2160082973,2147483746,2155872351,2147483745,2147491939,268435456,
603980514,603994132,0,268435456,603980517,603994132,0,268435456,603980520,603994132,
0,4026531840,3087022094,2768240709,0,327719,2147496096,2147496097,2147489954,
2147489955,2227286084,2147539053,2281701446,2147532910,2248233064,2147563625,
2244026474,2147551339,2147545196,2114064461,2118252622,2147606607,2155970640,
2147582033,2147524720,2222981244,2147600468,2202120277,2202120278,2147483780,
2147483704,2147588185,2147489946,2185330779,2109827164,2147510429,2147504286,
2147496095,2147483784,2147483786,2147483797,2147489942,2147516571,2147496092,
2147483814,805306459,3221225517,0,805306517,3221225520,0,1073809516,805306522,
3221225524,0,603994012,603980359,0,603994012,603980405,0,1073809524,805306522,
3221225534,0,1073791240,805306459,3221225538,0,603994012,603980432,0,805306476,
3221225544,0,805306475,3221225547,0,603994012,603980445,0,603994012,603980460,
0,603994012,603980475,0,603994012,603993990,0,805306477,3221225562,0,805306447,
3221225565,0,603994012,603980647,0,805306452,3221225571,0,603994012,603980662,
0,603994012,603980715,0,805306445,3221225580,0,603994012,603992660,0,4026531840,
0,2499805288,0,65537,4026531840,0,0,2852126736,11272193,327716,2147508352,2147508353,
2147508354,2269143107,2147508356,2264948741,2147508358,2260754535,2260754536,
2147508329,2147483710,2147508332,2143297548,2147508333,2147508334,2176868399,
2181062704,2147508337,2176868370,2147508339,2147508276,2147500149,2147508335,
2147508247,2147508336,2147508338,2147508346,2147508283,2147508348,2147508351,
2063622174,2139119679,2147508355,2147508357,2147508359,2147508360,2147483753,
603994200,603979780,0,2147483753,603994200,603979858,0,2147483753,603994200,
603979886,0,2147483753,603994200,603992564,0,4026531840,2852126724,2621441,65539,
2155872356,2147483749,2147483750,268435456,603980487,603994316,0,4026531840,
0,3087022278,2768240706,0,327718,2147496096,2147496097,2147489954,2147489955,
2227279940,2147539053,2277507142,2147532910,2147483784,2147563625,2239832170,
2147551339,2147545196,2114058317,2118246478,2147600463,2155964496,2147575889,
2147524720,2218786940,2147594324,2197919829,2197919830,2147483780,2147483704,
2147582041,2147489946,2181130331,2109821020,2147510429,2147504286,2147496095,
2147483786,2147483797,2147489942,2147516571,2147496092,2147483814,805306459,
3221225516,0,805306517,3221225519,0,1073809516,805306522,3221225523,0,603994200,
603980359,0,603994200,603980405,0,1073809524,805306522,3221225533,0,1073791240,
805306459,3221225537,0,603994200,603980432,0,805306476,3221225543,0,805306475,
3221225546,0,603994200,603980445,0,603994200,603980460,0,603994200,603994188,
0,805306477,3221225558,0,805306447,3221225561,0,603994200,603980647,0,805306452,
3221225567,0,603994200,603980662,0,603994200,603980715,0,805306445,3221225576,
0,603994200,603992660,0,4026531840,0,2499805289,0,65537,4026531840,0,0,2852126736,
11272193,327716,2147508352,2147508353,2147508354,2269143107,2147508356,2264948741,
2147508358,2260754535,2260754536,2147508329,2147483710,2147508332,2143297548,
2147508333,2147508334,2176868399,2181062704,2147508337,2176868370,2147508339,
2147508276,2147500149,2147508335,2147508247,2147508336,2147508338,2147508346,
2147508283,2147508348,2147508351,2063622174,2139119679,2147508355,2147508357,
2147508359,2147508360,2147483754,603994382,603979780,0,2147483754,603994382,
603979858,0,2147483754,603994382,603979886,0,2147483754,603994382,603992564,
0,4026531840,2852126724,2555905,65538,2147483752,2147483751,268435456,603980472,
603994644,0,4026531840,3087022456,2768240703,0,327717,2147496096,2147496097,
2147489954,2147489955,2210496580,2147539053,2273312838,2147532910,2147483784,
2147524720,2202083434,2147551339,2147545196,2114052173,2118240334,2147594319,
2118209616,2147569745,2218786940,2147483780,2147588180,2193719381,2193719382,
2147483786,2147483704,2147575897,2147489946,2176929883,2105620572,2147510429,
2147504286,2147496095,2147483797,2147489942,2147516571,2147496092,2147483814,
805306459,3221225515,0,805306517,3221225518,0,1073809516,805306522,3221225522,
0,603994382,603980359,0,603994382,603980405,0,1073809524,805306522,3221225532,
0,1073791240,805306459,3221225536,0,603994382,603980432,0,805306476,3221225542,
0,805306475,3221225545,0,603994382,603980445,0,603994382,603994372,0,805306477,
3221225554,0,805306447,3221225557,0,603994382,603980647,0,805306452,3221225563,
0,603994382,603980662,0,603994382,603980715,0,805306445,3221225572,0,603994382,
603992660,0,4026531840,0,2499805290,0,65537,4026531840,0,0,2852126736,11272193,
327716,2147508352,2147508353,2147508354,2269143107,2147508356,2264948741,2147508358,
2260754535,2260754536,2147508329,2147483710,2147508332,2143297548,2147508333,
2147508334,2176868399,2181062704,2147508337,2176868370,2147508339,2147508276,
2147500149,2147508335,2147508247,2147508336,2147508338,2147508346,2147508283,
2147508348,2147508351,2063622174,2139119679,2147508355,2147508357,2147508359,
2147508360,2147483756,603994550,603979780,0,2147483756,603994550,603979858,0,
2147483756,603994550,603979886,0,2147483756,603994550,603992564,0,4026531840,
2768240695,0,327715,2147496096,2147496097,2147489954,2147489955,2206283844,2147539053,
2264924230,2147532910,2147483784,2147524720,2147483786,2239758460,2147594348,
2114033741,2118221902,2147575887,2118191184,2147551313,2147483780,2147483797,
2147569748,2139174997,2151757910,2147489942,2147483704,2147557465,2147489946,
2168522843,2076242012,2147510429,2147504286,2147496095,2147516571,2147496092,
2147483814,805306459,3221225512,0,805306517,3221225515,0,1073809516,805306522,
3221225519,0,603994550,603980359,0,603994550,603980405,0,1073809524,805306522,
3221225529,0,1073791240,805306459,3221225533,0,603994550,603980432,0,805306476,
3221225539,0,805306477,3221225542,0,805306447,3221225545,0,603994550,603980647,
0,805306452,3221225551,0,603994550,603980662,0,603994550,603980715,0,805306445,
3221225560,0,603994550,603992660,0,0,4026531840,2852126736,11272193,327716,2147508352,
2147508353,2147508354,2269143107,2147508356,2264948741,2147508358,2260754535,
2260754536,2147508329,2147483710,2147508332,2143297548,2147508333,2147508334,
2176868399,2181062704,2147508337,2176868370,2147508339,2147508276,2147500149,
2147508335,2147508247,2147508336,2147508338,2147508346,2147508283,2147508348,
2147508351,2063622174,2139119679,2147508355,2147508357,2147508359,2147508360,
2147483755,603994712,603979780,0,2147483755,603994712,603979858,0,2147483755,
603994712,603979886,0,2147483755,603994712,603992564,0,4026531840,2852126724,
2490369,65539,2155872272,2147483753,2147483754,268435456,603980457,603994494,
0,4026531840,0,3087022782,2768240700,0,327716,2147496096,2147496097,2147489954,
2147489955,2210490436,2147539053,2269118534,2147532910,2147483784,2147524720,
2147483786,2147551339,2147545196,2114046029,2118234190,2147588175,2118203472,
2147563601,2214592636,2147483780,2147582036,2155964501,2189518934,2147483797,
2147483704,2147569753,2147489946,2172729435,2105614428,2147510429,2147504286,
2147496095,2147489942,2147516571,2147496092,2147483814,805306459,3221225514,
0,805306517,3221225517,0,1073809516,805306522,3221225521,0,603994712,603980359,
0,603994712,603980405,0,1073809524,805306522,3221225531,0,1073791240,805306459,
3221225535,0,603994712,603980432,0,805306476,3221225541,0,805306475,3221225544,
0,603994712,603994700,0,805306477,3221225550,0,805306447,3221225553,0,603994712,
603980647,0,805306452,3221225559,0,603994712,603980662,0,603994712,603980715,
0,805306445,3221225568,0,603994712,603992660,0,4026531840,0,2499805291,0,65537,
4026531840,0,0,2852126736,11337729,262172,2235588656,2235588721,2206228498,2206228547,
2235588660,2202034181,2147508358,2231394327,2147508360,2147508329,2147508346,
2147508283,2176851980,2176868415,2147483710,2139119663,2176868466,2176868467,
2181054581,2147508348,2147508351,2147508352,2147508353,2147508354,2147508355,
2147508356,2147508357,2147508359,2147483758,603994955,603979780,0,2147483758,
603994955,603979858,0,2147483758,603994955,603979886,0,2147483758,603994955,
603994868,0,4026531840,2852126774,11403265,262169,2222993456,2222981233,2197856274,
2202017859,2222997556,2223046661,2147580038,2218817559,2147584136,2147537001,
2147545210,2147528763,2147545212,2164285503,2172649586,2139107375,2168496243,
2147557503,2147557504,2147561601,2147561602,2147565699,2147565700,2147569797,
2147580039,268435456,603994952,603995279,0,603991536,0,603986272,0,2147483718,
268435456,603988361,0,268435456,603980300,0,2147483760,268435456,603980290,603991032,
0,603996161,0,2147483780,268435456,603996913,0,2147483784,268435456,603996863,
0,603997351,0,2147483806,268435456,603997461,0,603997478,0,603997527,0,603997631,
0,2147483810,268435456,1073809540,805306530,0,603997576,0,2147483814,268435456,
1073809564,805306534,0,4026531840,0,1073796880,805306478,0,2768240686,0,327712,
2147496096,2147496097,2147489954,2147489955,2168516676,2147575918,2218786886,
2147524720,2147483784,2147483780,2147483786,2147483797,2147489942,2147569741,
2109814862,2147557455,2109784144,2147532881,2147516571,2147496092,2147551316,
2105602133,2105602134,2147483814,2147483704,2147539033,2147489946,2109784155,
2109735036,2147510429,2147504286,2147496095,805306459,3221225509,0,805306517,
3221225512,0,1073809516,805306522,3221225516,0,603994955,603980359,0,603994955,
603980405,0,1073809524,805306522,3221225526,0,1073791240,805306459,3221225530,
0,805306447,3221225533,0,603994955,603980647,0,805306452,3221225539,0,603994955,
603980662,0,603994955,603980715,0,805306445,3221225548,0,603994955,603992660,
0,0,4026531840,2852126728,11468801,65539,2147483666,2151686203,2147483763,2147483761,
603995053,603995173,0,2147483761,603995053,603995689,0,4026531840,0,805306481,
0,2852192259,3866625,1,2147483671,268435456,603995063,0,4026531840,2852126724,
1048577,327719,2147487872,2147487873,2147487874,2281705539,2147487876,2277511173,
2147487878,2273316967,2273316968,2147487849,2239762482,2147487806,2189430796,
2147487853,2147487854,2189430831,2202013744,2147487857,2113933330,2147487859,
2202013748,2147487861,2147487852,2147487767,2147487768,2147487855,2147487866,
2147487803,2147487868,2147487856,2067795998,2160070719,2147487858,2147483764,
2147487871,2147487875,2147487877,2147487879,2147487880,603980118,0,603995111,
0,4026531840,0,2852126727,1376257,327718,2147491968,2147491969,2147491970,2277515331,
2147491972,2273320965,2147491974,2269126759,2269126760,2147491945,2239766578,
2147491902,2189434892,2147491949,2147491950,2189434927,2202017840,2147491953,
2113937426,2147491955,2147491892,2147491957,2147491948,2147491863,2147483672,
2147491951,2147491962,2147491899,2147491964,2147491952,2067800094,2155880511,
2147491954,2147491967,2147491971,2147491973,2147491975,2147491976,268435456,
1073797136,805306479,0,603980226,603991032,0,4026531840,0,2852192262,3866625,
1,2147483671,2147483760,268435456,603980430,603980290,603991032,0,4026531840,
0,2852126726,11534337,65538,2147489810,2147483763,2147483762,603995185,0,2147483762,
603995195,0,4026531840,2852192260,11599873,1,2147483763,268435456,1073797896,
805306482,0,4026531840,0,2852192259,4521985,1,2147483666,268435456,603995203,
0,4026531840,2852126729,11665409,196620,2193633408,2147496065,2172661882,2172661819,
2155872372,2147495941,2164273276,2147496063,2147496066,2147496067,2147496068,
2147496072,2147483770,268435456,603995229,603996127,603997690,0,603995239,603995939,
0,4026531840,0,2852192260,4718593,1,2147483667,268435456,1073798168,805306482,
0,4026531840,0,2852126727,4653057,65538,2147483667,2143297549,268435456,1073798424,
805306482,0,268435456,603995253,0,4026531840,0,2852126730,11730945,65538,2147483764,
2147495955,2147483770,268435456,603995269,603996127,603997690,0,268435456,1073798432,
805306482,0,4026531840,2852192260,4718593,1,2147483667,268435456,1073798696,
805306482,0,4026531840,0,2852126736,11272193,327716,2147508352,2147508353,2147508354,
2269143107,2147508356,2264948741,2147508358,2260754535,2260754536,2147508329,
2147483710,2147508332,2143297548,2147508333,2147508334,2176868399,2181062704,
2147508337,2176868370,2147508339,2147508276,2147500149,2147508335,2147508247,
2147508336,2147508338,2147508346,2147508283,2147508348,2147508351,2063622174,
2139119679,2147508355,2147508357,2147508359,2147508360,2147483757,603995464,
603979780,0,2147483757,603995464,603979858,0,2147483757,603995464,603979886,
0,2147483757,603995464,603995335,0,4026531840,2852126797,10682369,327713,2147594368,
2147598465,2147598466,2235609155,2147602564,2231472133,2147616902,2239787111,
2248183912,2147573865,2147512431,2147512432,2147487852,2147496045,2147504238,
2126561327,2126561328,2147483761,2160144402,2147561587,2147536948,2147483762,
2147594367,2147551255,2147602563,2147606661,2147582074,2147565627,2147582076,
2147616903,2147631134,2109796415,2147621000,603994820,0,268435456,603995449,
603995279,0,268435456,603995452,603995279,0,268435456,603995455,603995279,0,
268435456,603995458,603995279,0,268435456,603995461,603995279,0,603991536,0,
603986272,0,2147483718,268435456,603988361,0,268435456,603980300,0,2147483760,
268435456,603980290,603991032,0,603996161,0,2147483780,268435456,603996913,0,
2147483784,268435456,603996863,0,603997351,0,2147483806,268435456,603997461,
0,603997478,0,603997527,0,603997631,0,2147483810,268435456,1073809540,805306530,
0,603997576,0,2147483814,268435456,1073809564,805306534,0,2147483740,268435456,
603991698,603995279,0,4026531840,1073795344,805306477,0,1073795600,805306477,
0,1073795856,805306477,0,1073796112,805306477,0,1073796368,805306477,0,2768240689,
0,327714,2147496096,2147496097,2147489954,2147489955,2181105732,2147582061,2260729926,
2147532910,2147483784,2147524720,2147483786,2235564156,2147483780,2114021453,
2118209614,2147563599,2118178896,2147539025,2147483797,2147489942,2147557460,
2134968405,2134968406,2147516571,2147483704,2147545177,2147489946,2130761819,
2076229724,2147510429,2147504286,2147496095,2147496092,2147483814,805306459,
3221225511,0,805306517,3221225514,0,1073809516,805306522,3221225518,0,603995464,
603980359,0,603995464,603980405,0,1073809524,805306522,3221225528,0,1073791240,
805306459,3221225532,0,805306477,3221225535,0,805306447,3221225538,0,603995464,
603980647,0,805306452,3221225544,0,603995464,603980662,0,603995464,603980715,
0,805306445,3221225553,0,603995464,603992660,0,0,4026531840,0,2852126728,11796481,
131077,2147491976,2147483661,2147491858,2151686203,2147491955,2147483765,603995649,
603996828,0,2147483765,603995649,603995898,0,4026531840,0,2852192262,1507329,
1,2147483661,2147483782,268435456,1073805576,805306502,603996840,0,4026531840,
0,2852126727,11796481,131077,2147483784,2147489805,2147483666,2151678011,2147483763,
603995598,603995898,0,268435456,1073805840,805306502,0,4026531840,1073800976,
805306486,0,2785017859,11862017,131079,2168459324,2147483661,2147483666,2151678011,
2147483763,2151682164,2147483784,603995615,0,4026531840,4026531840,2852192260,
11927553,1,2147483661,268435456,603995625,603995864,0,4026531840,0,1073800728,
805306485,0,2852126729,11993089,131077,2155884568,2147495949,2155884604,2147495955,
2147483716,2147483779,268435456,603995646,603996688,603992336,0,1073801736,805306488,
0,4026531840,1073801488,805306488,0,3087023651,2768240663,0,131078,2147489912,
2160107633,2160081014,2147518579,2147504245,2147483782,603995649,603995582,0,
1073742600,805306486,3221225488,0,805306485,3221225491,0,2583691277,11927553,
65537,4026531840,603995649,603995601,0,805306481,3221225501,0,603995649,603995628,
0,4026531840,2499805301,0,65537,4026531840,0,0,2852192260,8388609,1,2147483707,
2147483763,268435456,603995699,0,4026531840,0,2852126726,11862017,131079,2168463420,
2147483661,2147491858,2151686203,2147491955,2151686260,2147491976,1610612738,
67124805,67124853,0,603995842,0,4026531840,0,2852192263,1507329,1,2147483661,
2147483782,268435456,1073805576,805306502,603995729,603996840,0,4026531840,2852126729,
12058625,65538,2151688252,2147483764,2147483771,268435456,603995745,603996140,
0,268435456,1073799704,805306483,0,4026531840,0,2852192260,1769473,1,2147483708,
268435456,1073798944,805306483,0,4026531840,0,2852192260,1769473,1,2147483708,
268435456,1073799704,805306483,0,4026531840,0,603995768,603995552,0,2852126727,
11927553,65538,2147483708,2147491853,268435456,1073799192,805306483,0,268435456,
603995782,0,4026531840,0,2852126736,12124161,65539,2155896892,2147483661,2147498100,
2147483782,268435456,1073805576,805306502,603995806,603996840,0,2147483771,268435456,
603995832,603996140,0,268435456,1073799200,805306483,0,4026531840,0,2852126729,
12058625,65538,2151688252,2147483764,2147483771,268435456,603995822,603996140,
0,268435456,1073799976,805306483,0,4026531840,0,2852192260,1769473,1,2147483708,
268435456,1073799472,805306483,0,4026531840,0,2852192260,1769473,1,2147483708,
268435456,1073799976,805306483,0,4026531840,0,2852126732,12189697,131078,2164277308,
2147483763,2147483666,2139095099,2151684212,2147483784,603995768,603995552,0,
2147483771,268435456,603995755,603996140,0,268435456,1073800208,805306483,0,
4026531840,2852126728,11796481,131077,2147491976,2147483661,2147491858,2151686203,
2147491955,2147483766,603995882,603995570,0,2147483766,603995882,603995898,0,
4026531840,0,2768240648,0,65539,2151692406,2151684216,2147483782,603995882,603995582,
0,1073742600,805306486,3221225484,0,0,4026531840,0,2852126730,1114113,131076,
2147483784,2147496051,2147495954,2139107387,2147483768,2147483769,603995916,
603995918,603997690,0,2147483768,603995628,603995037,0,4026531840,805306488,
0,2852126729,11993089,131077,2155884568,2147495949,2155884604,2147495955,2147483716,
2147483779,268435456,603995936,603996688,603992336,0,1073801736,805306489,0,
4026531840,1073801488,805306489,0,2852126728,11010049,196619,2189435008,2147491969,
2164269178,2168463419,2168463484,2147491845,2147491970,2147491967,2147491971,
2147491972,2147483784,2147483764,603996055,603995963,0,2147483764,603996055,
603995987,0,4026531840,0,2583756936,327681,65538,4026531840,0,603995971,0,0,
2785017860,12255233,131076,2147483716,2151677965,2147487785,2147483667,603995983,
0,603989057,0,4026531840,2147483769,603995918,603997690,0,2852126737,12386305,
196618,2147506304,2147510401,2164271226,2168455227,2168465532,2147497989,2147510402,
2147506303,2147514499,2147514500,2147483777,268435456,603996678,603992336,0,
603997351,0,2147483806,268435456,603997461,0,603997478,0,603997527,0,603997631,
0,4026531840,0,1073801240,805306487,0,2785017859,12451841,196621,2197815424,
2147483777,2176843898,2160070675,2164265076,2147483653,2164260923,2147483775,
2160066684,2147483778,2147483779,2147483780,2147483784,603996042,0,4026531840,
4026531840,2852192260,4653057,1,2147483661,268435456,603996052,603996217,0,4026531840,
0,1073800472,805306484,0,3087024089,2768240684,0,262160,2160101504,2164295809,
2147489951,2147489952,2147559540,2147489953,2147483798,2147551351,2147483817,
2143350905,2147483802,2147510427,2147489948,2147504285,2147498142,2093000831,
805306496,3221225494,0,1073809516,805306522,3221225498,0,603996055,603980359,
0,603996055,603980405,0,1073809524,805306522,3221225508,0,1073803016,805306495,
3221225512,0,2583691305,458753,65537,4026531840,268435456,603996055,603996019,
603995898,0,805306487,3221225524,0,1073742600,805306484,3221225528,0,2583691277,
4653057,65537,4026531840,603996055,603996022,0,4026531840,0,2499805300,0,65537,
4026531840,0,0,1073802000,805306490,0,2852192260,12517377,1,2147483764,2147483771,
268435456,603996140,0,4026531840,0,2852126729,1114113,131076,2147483784,2147496051,
2147495954,2139107387,2147483815,268435456,1073809572,1073802000,805306491,0,
603996158,603995037,0,4026531840,0,1073802000,805306491,0,2852126726,11534337,
65538,2147489810,2147483763,2147483772,603996173,0,2147483772,603996183,0,4026531840,
2852192260,11599873,1,2147483763,268435456,1073802248,805306492,0,4026531840,
0,2852192260,4521985,1,2147483666,268435456,603996193,603996379,0,4026531840,
0,2852126727,4653057,65538,2147489811,2143289357,268435456,603996207,0,268435456,
1073802520,805306492,0,4026531840,0,2852192260,4718593,1,2147483667,268435456,
1073802528,805306492,0,4026531840,0,2852126728,11010049,196619,2189435008,2147491969,
2164269178,2168463419,2168463484,2147491845,2147491970,2147491967,2147491971,
2147491972,2147483784,2147483767,603996241,603995963,0,2147483767,603996241,
603995987,0,4026531840,0,2768240674,0,196623,2197850240,2181099641,2147483802,
2147510427,2147489948,2147504285,2164261014,2151745655,2160109695,2164295809,
2147498142,2147489951,2147489952,2151684257,2147483817,805306496,3221225492,
0,1073809516,805306522,3221225496,0,603996241,603980359,0,603996241,603980405,
0,1073809524,805306522,3221225506,0,1073803016,805306495,3221225510,0,2583691305,
458753,65537,4026531840,268435456,603996241,603996019,603995898,0,805306487,
3221225522,0,0,4026531840,0,2852126748,11010049,196619,2189443200,2147508353,
2164260986,2168504379,2168455292,2147491845,2147508354,2147500159,2147516547,
2147516548,2147524744,2147483775,603996339,603997351,0,2147483775,603996339,
603980336,0,2147483775,603996339,603997478,0,2147483775,603996339,603997527,
0,2147483775,603996339,603997631,0,2147483775,603996339,603989057,0,2147483775,
603996339,603989151,0,4026531840,0,2768240662,0,196621,2189461632,2189461633,
2147483802,2147510427,2147489948,2147504285,2155872406,2155915391,2147498142,
2147489951,2147489952,2151684257,2147483817,805306496,3221225490,0,1073809516,
805306522,3221225494,0,603996339,603980359,0,603996339,603980405,0,1073809524,
805306522,3221225504,0,1073803016,805306495,3221225508,0,0,4026531840,0,2852126736,
12582913,262160,2176868368,2147508353,2147508354,2147508355,2185257076,2147508229,
2147508346,2147508352,2172649528,2147491897,2130722874,2147508283,2147508348,
2147508356,2147508360,2147508351,2147483773,603996608,603996415,0,2147483773,
603996608,603996449,0,2147483773,603996608,603996481,0,2147483773,603996608,
603996489,0,4026531840,2583756856,7995393,65538,4026531840,0,603996423,0,0,2785017860,
12648449,262161,2172649488,2147483777,2147483778,2193625107,2197819460,2147483653,
2147483776,2147487767,2147483784,2147487785,2147483770,2147483707,2147483772,
2147487757,2147483779,2147483775,2147483780,603989055,0,603989057,0,4026531840,
0,2583756857,8126465,65538,4026531840,0,603996457,0,0,2785017860,12713985,262160,
2147483776,2147483777,2147483778,2160070675,2189430852,2147483653,2147483779,
2147487767,2147483784,2147487785,2147483770,2147483707,2147483772,2147487757,
2147483780,2147483775,603989055,0,603989057,0,4026531840,2583756858,8257537,
65538,4026531840,0,603996457,0,0,2852126746,12779521,196621,2181038096,2147518593,
2176862330,2176852027,2155876468,2147506181,2168473724,2147514495,2164291712,
2147518594,2147522691,2147522692,2147526792,603989477,0,603996691,0,2147483777,
268435456,603996678,603992336,0,603997351,0,2147483806,268435456,603997461,0,
603997478,0,603997527,0,603997631,0,2147483817,268435456,1073809588,805306537,
0,4026531840,0,2852126729,12845057,65539,2147489860,2151677965,2147483667,1073803016,
805306494,0,2147483779,268435456,603996551,603996688,603992336,0,805306496,0,
0,1073803536,805306498,0,2852126727,12910593,65538,2147489833,2143289367,268435456,
603989188,0,268435456,603996568,603992336,0,4026531840,0,1073801240,805306494,
0,2785017859,12976129,262161,2176843792,2147483777,2147483778,2189430803,2189426804,
2147483653,2147483770,2147483776,2181038136,2147483705,2130706490,2147483707,
2147483772,2147483779,2147483780,2147483775,2147483784,603996595,0,4026531840,
4026531840,2852192260,4653057,1,2147483661,268435456,603996605,603996691,0,4026531840,
0,1073802776,805306493,0,3087024640,2768240681,0,262161,2181085312,2210445441,
2147524738,2147518618,2147504285,2147498142,2147518614,2147489951,2147489952,
2147483817,2118164554,2147510427,2147489948,2109804669,2109796478,2113984639,
2147489953,603996608,603996533,0,1073809516,805306522,3221225499,0,603996608,
603980359,0,603996608,603980405,0,1073809524,805306522,3221225509,0,805306496,
3221225512,0,805306494,3221225515,0,1073803016,805306495,3221225519,0,603996608,
603996554,0,1073742600,805306493,3221225526,0,2583691277,4653057,65537,4026531840,
603996608,603996571,0,4026531840,0,2499805309,0,65537,4026531840,0,0,2852192260,
1769473,1,2147483708,268435456,1073803288,805306497,0,4026531840,0,1073803792,
805306499,0,2852126736,12582913,262160,2176868368,2147508353,2147508354,2147508355,
2185257076,2147508229,2147508346,2147508352,2172649528,2147491897,2130722874,
2147508283,2147508348,2147508356,2147508360,2147508351,2147483774,603996776,
603996415,0,2147483774,603996776,603996449,0,2147483774,603996776,603996481,
0,2147483774,603996776,603996727,0,4026531840,2852126748,12779521,196621,2181046288,
2147532929,2176876666,2176866363,2155872372,2147520517,2168488060,2147528831,
2164306048,2147532930,2147537027,2147537028,2147496072,268435456,603996773,603992336,
0,603989477,0,2147483817,268435456,1073809588,805306537,0,2147483777,268435456,
603996678,603992336,0,603997351,0,2147483806,268435456,603997461,0,603997478,
0,603997527,0,603997631,0,4026531840,0,1073802000,805306494,0,2768240671,0,262160,
2176891008,2176891009,2147524738,2147518618,2147498142,2147489951,2147518614,
2147489952,2147489953,2147483817,2118164554,2147510427,2147489948,2147504285,
2105602174,2105596031,603996776,603996533,0,1073809516,805306522,3221225497,
0,603996776,603980359,0,603996776,603980405,0,1073809524,805306522,3221225507,
0,805306496,3221225510,0,805306494,3221225513,0,1073803016,805306495,3221225517,
0,603996776,603996554,0,0,4026531840,0,2852192262,1507329,1,2147483661,2147483782,
268435456,1073805576,805306502,603996840,0,4026531840,0,3087024822,2768240648,
0,1,2147483782,2583691277,11927553,65537,4026531840,268435456,1073805840,3221225484,
0,4026531840,2499805318,0,65537,4026531840,0,0,1073802000,805306503,0,2852126726,
13041864,196616,2147483656,2160072809,2147483650,2160066563,2147483769,2147483653,
2147483795,2147483655,603996881,603997791,0,268435456,603996901,0,4026531840,
2852192259,13172737,1,2147483753,268435456,603996889,0,4026531840,2852126725,
13238273,1,2147483787,2147483820,268435456,1073806112,805306504,0,1073806616,
805306504,0,2852126725,13238273,1,2147483787,2147483820,268435456,1073806360,
805306504,0,1073806864,805306504,0,2852126726,13303809,327720,2147491968,2147491969,
2147491970,2285903939,2147491972,2281709573,2147491974,2277515367,2277515368,
2147491945,2239766578,2147491902,2189434892,2193621005,2147491950,2189434927,
2202017840,2147491953,2113937426,2147491955,2202017844,2147491957,2147491948,
2147491863,2147491949,2147491951,2147491962,2147491899,2172657724,2147491952,
2067800094,2164269119,2147491954,2147491956,2147491964,2147491967,2147491971,
2147491973,2147491975,2147491976,1610612738,67126051,67126073,0,603997030,0,
4026531840,2852192263,1507329,1,2147483661,2147483782,268435456,1073805576,805306502,
603996975,603996840,0,4026531840,2852192260,1769473,1,2147483708,268435456,1073804056,
805306500,0,4026531840,0,603996988,603997997,0,2852126727,11927553,65538,2147483708,
2147491853,268435456,1073804312,805306500,0,268435456,603997002,0,4026531840,
0,2852126731,11927553,65538,2147498044,2147483661,2147483782,268435456,1073805576,
805306502,603997020,603996840,0,268435456,1073805088,805306500,0,4026531840,
0,2852192260,1769473,1,2147483708,268435456,1073804584,805306500,0,4026531840,
0,2852126727,13434881,327719,2147483776,2147483777,2147483778,2281701443,2147483780,
2277507077,2147483782,2273312871,2273312872,2147483753,2227175474,2147483710,
2189426700,2147483757,2147483758,2185232431,2185232432,2147483761,2113929234,
2147483763,2197815348,2147483765,2147483756,2147483671,2147483759,2147483760,
2147483770,2147483707,2168461372,2147483762,2067791902,2160066623,2147483764,
2147483772,2147483775,2147483779,2147483781,2147483783,2147483784,603996988,
603997997,0,268435456,1073804816,805306500,0,4026531840,2852126727,13500417,
65538,2147483766,2147489909,268435456,603997094,0,268435456,1073874948,805306507,
0,4026531840,0,2852192260,786433,1,2147483765,268435456,1073807128,805306507,
0,4026531840,0,2516582517,851969,196610,4026531840,0,603997126,0,603997116,0,
603997136,0,0,2785017860,917505,65538,2147487863,2143289461,603997126,0,603997136,
0,4026531840,2852192261,786433,1,2147483765,2147483787,268435456,603991090,603997080,
0,4026531840,2147483788,603991090,603997141,603997303,0,603997144,603991032,
0,2852192262,4718593,1,2147483667,2147483789,268435456,603997156,603997265,603997159,
0,4026531840,0,1073940492,805306508,0,2852126731,13631488,65539,2147483766,2151684213,
2147498103,268435456,603997177,0,268435456,1073875020,805306513,0,268435456,
1073875004,805306512,0,4026531840,2852126728,917505,65538,2147491959,2143289461,
268435456,1073940548,805306513,0,268435456,1073940532,805306512,0,4026531840,
2852192260,786433,1,2147483765,268435456,1073940548,805306513,0,4026531840,0,
2852192260,13565953,1,2147483767,268435456,1073940532,805306512,0,4026531840,
0,1073800976,805306510,0,2516582517,851969,196610,4026531840,0,603997236,0,603997226,
0,603997249,0,0,2785017860,917505,65538,2147487863,2143289461,603997236,0,603997249,
0,4026531840,2852192261,13697025,1,2147483667,2147483793,268435456,603997246,
603997337,0,4026531840,1073874964,805306509,0,2852192261,13762561,1,2147483667,
2147483792,268435456,603997259,603997289,0,4026531840,603997262,603991032,0,
1073940508,805306510,0,2768240656,0,131076,2147491984,2155903117,2147500174,
2147483793,1073742600,805306509,3221225482,0,603997265,603997211,603991032,0,
2583691283,13828308,65537,4026531840,603997265,603997214,0,0,4026531840,2852126727,
13959168,65538,2147483766,2147489911,268435456,603997201,0,268435456,1073875004,
805306512,0,4026531840,0,2852192260,786433,1,2147483765,2147483791,268435456,
603997313,0,4026531840,0,2852126727,13959168,65538,2147483766,2147489911,268435456,
603997327,0,268435456,1073874988,805306511,0,4026531840,0,2852192260,13565953,
1,2147483767,268435456,1073940516,805306511,0,4026531840,0,2852126727,14024704,
65538,2147483766,2147489909,268435456,603997191,0,268435456,1073875020,805306513,
0,4026531840,0,2852126726,14090241,65538,2151678074,2147489916,2147483798,603997363,
0,2147483798,603997395,0,4026531840,2852192259,14155777,1,2147483770,268435456,
603997371,0,4026531840,2852126727,14221312,65538,2147489914,2147483771,268435456,
603997385,0,268435456,1073875044,805306518,0,4026531840,0,2852192260,14155777,
1,2147483770,268435456,1073940572,805306518,0,4026531840,0,2852192259,14286849,
1,2147483772,268435456,603997403,0,4026531840,2852126727,14352384,65538,2147489916,
2147483773,268435456,603997417,0,268435456,1073875044,805306518,0,4026531840,
0,2852192260,14286849,1,2147483772,268435456,1073940572,805306518,0,4026531840,
0,2852192260,14417921,1,2147483769,2147483801,268435456,603997437,0,4026531840,
0,2852126724,14483656,131077,2147483656,2147483653,2147483650,2151677955,2147483655,
268435456,1073875028,805306521,0,4026531840,0,2852192260,1835009,1,2147483653,
2147483806,268435456,603997461,0,4026531840,0,2852126726,14548993,1,2147483785,
2147483853,268435456,603997475,603998608,603998598,0,1073779720,805306526,0,
0,1073875028,805306526,0,2583691391,14614529,131075,4026531840,0,0,2147483807,
603997490,0,2147483807,603997517,0,2852192260,14680065,1,2147483775,268435456,
603997500,603998674,0,4026531840,0,2852126727,14745601,1,2147483785,2147483855,
268435456,603997514,603998646,603998640,603998674,0,1073875028,805306527,0,1073940604,
805306527,0,2852192260,14811137,1,2147483776,268435456,603997500,603998674,0,
4026531840,0,2583691393,14876673,131075,4026531840,0,0,2147483808,603997539,
0,2147483808,603997566,0,2852192260,14942209,1,2147483777,268435456,603997549,
603998912,0,4026531840,0,2852126727,14745601,1,2147483785,2147483857,268435456,
603997563,603998978,603998972,603998912,0,1073875028,805306528,0,1073940604,
805306528,0,2852192260,15007745,1,2147483778,268435456,603997549,603998912,0,
4026531840,0,2583691398,15073281,131075,4026531840,0,0,2147483811,603997588,
0,2147483811,603997598,0,2852192260,15138817,1,2147483782,268435456,1073809548,
805306531,0,4026531840,0,2852192260,15204353,1,2147483783,268435456,1073809548,
805306531,0,4026531840,0,2852192261,327681,1,2147483784,2147483812,268435456,
1073809556,805306532,0,4026531840,1073809556,805306533,0,2852192261,327681,1,
2147483784,2147483814,268435456,1073809564,805306534,0,4026531840,2583691395,
15269889,131075,4026531840,0,0,2147483809,603997643,0,2147483809,603997670,0,
2852192260,15335425,1,2147483779,268435456,603997653,603999040,0,4026531840,
0,2852126727,14745601,1,2147483785,2147483859,268435456,603997667,603999012,
603999006,603999040,0,1073875028,805306529,0,1073940604,805306529,0,2852192260,
15400961,1,2147483780,268435456,603997653,603999040,0,4026531840,0,2852192261,
327681,1,2147483784,2147483816,268435456,1073809580,805306536,0,4026531840,2852192261,
327681,1,2147483784,2147483815,268435456,1073809572,805306535,0,4026531840,2852192261,
327681,1,2147483784,2147483818,268435456,1073809588,805306538,0,4026531840,2785017859,
15466497,65538,2147483784,2147487763,603997720,0,4026531840,4026531840,0,2852192260,
4653057,1,2147483661,268435456,603997730,603981369,0,4026531840,0,1073761048,
805306560,0,3087025729,2768240658,0,131076,2151698448,2151692456,2147483840,
2147512335,2583691277,4653057,65537,4026531840,603997733,603997710,0,603997733,
603981381,0,1073746696,805306383,3221225493,0,1073742600,805306560,3221225497,
0,4026531840,0,2499805376,0,65537,4026531840,0,0,1073875148,805306562,0,1073875156,
805306563,0,1073802000,805306564,0,2852192262,327681,1,2147483784,2147483815,
268435456,1073809572,1073802000,805306565,0,4026531840,0,1073802000,805306566,
0,2852126748,15532232,131079,2147500040,2164293637,2147508226,2151718915,2155880455,
2147532921,2147483795,2147483847,603997914,603997831,0,2147483847,603997914,
603997841,0,2147483847,603997914,603997851,0,2147483847,603997914,603997861,
0,2147483847,603997914,603997871,0,2147483847,603997914,603997881,0,2147483847,
603997914,603997427,0,4026531840,0,2852192260,15597569,1,2147483795,268435456,
1073809596,805306567,0,4026531840,0,2852192260,65624,1,2147483655,268435456,
1073809596,805306567,0,4026531840,0,2852192260,65775,1,2147483656,268435456,
1073809596,805306567,0,4026531840,0,2852192260,15728641,1,2147483650,268435456,
1073809596,805306567,0,4026531840,0,2852192260,1835009,1,2147483653,268435456,
1073809596,805306567,0,4026531840,0,2852192260,15794177,1,2147483651,268435456,
1073809596,805306567,0,4026531840,0,2852126729,13041864,131079,2147483656,2164260869,
2147483650,2151677955,2155872263,2147491961,2147483795,268435456,1073875028,
805306567,0,2147483801,268435456,603997911,603997437,0,4026531840,1073875028,
805306567,0,3087025896,2768240647,0,65538,2147483847,2143295641,603997914,603997891,
0,1073809596,805306567,3221225484,0,4026531840,2499805383,0,65537,4026531840,
0,0,2583691412,15925249,131075,4026531840,0,0,2147483851,603997946,0,2147483851,
603997976,0,2852192259,15990785,1,2147483796,268435456,603997954,0,4026531840,
2852126729,16056321,65538,2147483752,2147491845,268435456,603997970,603997451,
0,2147483806,268435456,603997973,603997461,0,4026531840,0,1073940604,805306571,
0,1073875028,805306571,0,2852192259,16121857,1,2147483797,268435456,603997954,
0,4026531840,2852192261,1835009,1,2147483653,2147483806,268435456,603997994,
603997461,0,4026531840,1073875028,805306572,0,2852126736,13369345,327719,2147508352,
2147508353,2147508354,2281726019,2147508356,2277531653,2147508358,2273337447,
2273337448,2147508329,2239782962,2147483710,2189434892,2193645581,2147508334,
2189451311,2202034224,2147508337,2113953810,2147508339,2202034228,2147500149,
2147508332,2147508247,2147508333,2147508335,2147508346,2147508283,2147508348,
2147508336,2067816478,2160091199,2147508338,2147508340,2147508351,2147508355,
2147508357,2147508359,2147508360,2147483781,603998406,603979780,0,2147483781,
603998406,603979858,0,2147483781,603998406,603979886,0,2147483781,603998406,
603998057,0,4026531840,0,2852126795,16187393,327716,2147600512,2147604609,2147604610,
2269126723,2147608708,2265032709,2147623046,2260734055,2260734056,2147580009,
2206244914,2147487853,2147487852,2139113485,2147487854,2172680239,2172686384,
2147483761,2114002962,2147557491,2168504372,2147487855,2147487856,2147495959,
2147483762,2147569780,2147588218,2147561531,2147588220,2147600511,2147547166,
2139152447,2147608707,2147612805,2147623047,2147627144,603994820,0,603995279,
0,603991536,0,268435456,603980070,0,2147483782,268435456,1073805576,805306502,
603996840,0,268435456,603983089,0,603986272,0,2147483712,268435456,603987120,
0,2147483718,268435456,603988361,0,268435456,603980300,0,2147483740,268435456,
603991698,603995279,0,603996161,0,2147483780,268435456,603996913,0,2147483783,
268435456,603996860,603992336,0,2147483784,268435456,603996863,0,603997351,0,
2147483806,268435456,603997461,0,603997478,0,603997527,0,603997631,0,2147483810,
268435456,1073809540,805306530,0,603997576,0,2147483814,268435456,1073809564,
805306534,0,4026531840,0,2852126733,13369345,327719,2147483776,2147483777,2147483778,
2281701443,2147483780,2277507077,2147483782,2273312871,2273312872,2147483753,
2239758386,2147483710,2189426700,2193639437,2147483758,2189426735,2202009648,
2147483761,2113929234,2147483763,2202009652,2147483765,2147483756,2147483671,
2147483757,2147483759,2147483770,2147483707,2147483772,2147483760,2067791902,
2160066623,2147483762,2147489908,2147483775,2147483779,2147483781,2147483783,
2147483784,603998229,603992336,0,2147483783,268435456,603998229,603996860,603992336,
0,268435456,1073805840,805306502,0,4026531840,1073800976,805306501,0,2785017859,
13303809,327720,2147483776,2147483777,2147483778,2285895747,2147483780,2281701381,
2147483782,2277507175,2277507176,2147483753,2239758386,2147483710,2189426700,
2193621005,2147483758,2189426735,2202009648,2147483761,2113929234,2147483763,
2202009652,2147483765,2147483756,2147483671,2147483757,2147483759,2147483770,
2147483707,2172653628,2147483760,2067791902,2164260927,2147483762,2147483764,
2147483772,2147483775,2147483779,2147483781,2147483783,2147483784,603998280,
0,4026531840,4026531840,0,2852192259,11927553,1,2147483661,268435456,603998288,
0,4026531840,2852126736,13369345,327719,2147498112,2147498113,2147498114,2281715779,
2147498116,2277521413,2147498118,2273327207,2273327208,2147498089,2239772722,
2147498046,2189441036,2193621005,2147498094,2189441071,2202023984,2147498097,
2113943570,2147498099,2202023988,2147498101,2147498092,2147498007,2147498093,
2147498095,2147498106,2147498043,2147498108,2147498096,2067806238,2160080959,
2147498098,2147504244,2147498111,2147498115,2147498117,2147498119,2147498120,
2147483782,268435456,1073805576,805306502,603998348,603996840,0,603998403,603992336,
0,2147483783,268435456,603998403,603996860,603992336,0,4026531840,0,2852126729,
9502721,327718,2147483776,2147483777,2147483778,2277507139,2147483780,2273312773,
2147483782,2269118567,2269118568,2147483753,2227175474,2147483710,2189426700,
2147483757,2147483758,2185232431,2185232432,2147483761,2113929234,2147483763,
2197815348,2147483765,2147483756,2147483671,2147483759,2147483760,2147483770,
2147483707,2147483772,2147483762,2067791902,2155872319,2147489908,2147483775,
2147483779,2147483781,2147483783,2147483784,603998400,603992336,0,2147483783,
268435456,603998400,603996860,603992336,0,4026531840,0,1073805344,805306501,
0,1073800472,805306501,0,3087026560,2768240765,0,327736,2223163456,2223163457,
2235801666,2361550947,2265131076,2294429797,2260770886,2294417511,2294411368,
2147604585,2290204778,2147592299,2147586156,2235795533,2235789390,2235783247,
2235758672,2147678289,2286071904,2286065761,2147696724,2248353877,2248353878,
2273476706,2147524664,2147684441,2147489946,2231564379,2189615196,2231416925,
2147504286,2227357791,2176995428,2181177446,2147580013,2147573870,2147565679,
2147559536,2189467772,2147524740,2147545221,2206259334,2147530887,2147524744,
2147524746,2147524757,2147489942,2147516571,2147496092,2147510429,2147496095,
2147496096,2147496097,2147489954,2147489955,2147483814,603998406,603980346,0,
805306517,3221225537,0,1073809516,805306522,3221225541,0,603998406,603980359,
0,603998406,603980405,0,1073809524,805306522,3221225551,0,805306459,3221225554,
0,1073742600,805306501,3221225558,0,603998406,603998173,0,2583691277,11927553,
65537,4026531840,603998406,603998232,0,603998406,603980420,0,1073776648,805306434,
3221225575,0,603998406,603980432,0,805306476,3221225581,0,805306475,3221225584,
0,603998406,603980445,0,603998406,603980460,0,603998406,603980475,0,603998406,
603980490,0,603998406,603980523,0,603998406,603980540,0,603998406,603980553,
0,603998406,603980566,0,603998406,603980588,0,603998406,603980598,0,603998406,
603980611,0,603998406,603980624,0,805306461,3221225623,0,805306477,3221225626,
0,805306447,3221225629,0,603998406,603980647,0,805306452,3221225635,0,603998406,
603980662,0,603998406,603980715,0,805306445,3221225644,0,603998406,603980768,
0,2583691315,1966081,65537,4026531840,268435456,603998406,603980839,603988575,
0,4026531840,2499805317,0,65537,4026531840,0,0,2852192260,1835009,1,2147483653,
268435456,1073875028,805306584,0,4026531840,0,3087026602,2768240659,0,65538,
2147483864,2147492045,1073809596,805306573,3221225481,0,2583691401,14548993,
65537,4026531840,2147483864,268435456,2583691269,1835009,65537,4026531840,268435456,
1073875028,1073875028,3221225496,0,4026531840,2499805389,0,65537,4026531840,
0,0,1073875028,805306585,0,1073875028,805306575,0,3087026636,2768240655,0,65538,
2147483865,2143297743,1073809596,805306575,3221225481,0,2583691401,14745601,
65537,4026531840,2147483865,268435456,603998646,603998643,603998640,603998674,
0,4026531840,2499805391,0,65537,4026531840,0,0,2852126772,16252929,196621,2147508376,
2147516569,2147524762,2147541147,2168553620,2160074757,2168455318,2168471703,
2155921557,2147549340,2147557533,2147565726,2147573919,2147483854,603998896,
603998744,0,2147483854,603998896,603998754,0,2147483854,603998896,603998764,
0,2147483854,603998896,603998774,0,2147483854,603998896,603998784,0,2147483854,
603998896,603998794,0,2147483854,603998896,603998804,0,2147483854,603998896,
603998814,0,2147483854,603998896,603998824,0,2147483854,603998896,603998834,
0,2147483854,603998896,603998844,0,2147483854,603998896,603998854,0,2147483854,
603998896,603998864,0,4026531840,0,2852192260,16318465,1,2147483798,268435456,
1073809596,805306574,0,4026531840,0,2852192260,1835009,1,2147483653,268435456,
1073809596,805306574,0,4026531840,0,2852192260,16384001,1,2147483799,268435456,
1073809596,805306574,0,4026531840,0,2852192260,16449537,1,2147483800,268435456,
1073809596,805306574,0,4026531840,0,2852192260,16515073,1,2147483801,268435456,
1073809596,805306574,0,4026531840,0,2852192260,16580609,1,2147483802,268435456,
1073809596,805306574,0,4026531840,0,2852192260,16121857,1,2147483797,268435456,
1073809596,805306574,0,4026531840,0,2852192260,16646145,1,2147483803,268435456,
1073809596,805306574,0,4026531840,0,2852192260,16711681,1,2147483804,268435456,
1073809596,805306574,0,4026531840,0,2852192260,16777217,1,2147483805,268435456,
1073809596,805306574,0,4026531840,0,2852192260,16842753,1,2147483806,268435456,
1073809596,805306574,0,4026531840,0,2852192260,16908289,1,2147483807,268435456,
1073809596,805306574,0,4026531840,0,2852192260,15990785,1,2147483796,268435456,
1073809596,805306574,0,4026531840,0,2852126724,16973825,196621,2147483800,2147483801,
2147483802,2147483803,2168455316,2160066565,2168455318,2168455319,2155872405,
2147483804,2147483805,2147483806,2147483807,268435456,1073875028,805306574,0,
4026531840,0,3087026874,2499805390,0,65539,4026531840,0,0,603998896,603998874,
0,2499805390,0,65537,4026531840,0,0,2852126728,17039361,65538,2147483808,2147492001,
2147483856,603998956,603998926,0,2147483856,603998956,603998936,0,4026531840,
2852192260,17104897,1,2147483808,268435456,1073809596,805306576,0,4026531840,
0,2852192260,17170433,1,2147483809,268435456,1073809596,805306576,0,4026531840,
0,2852126724,17235969,65538,2147483808,2147483809,268435456,1073875028,805306576,
0,4026531840,3087026934,2499805392,0,65539,4026531840,0,0,603998956,603998946,
0,2499805392,0,65537,4026531840,0,0,1073875028,805306586,0,1073875028,805306577,
0,3087026968,2768240655,0,65538,2147483866,2147492049,1073809596,805306577,3221225481,
0,2583691401,14745601,65537,4026531840,2147483866,268435456,603998978,603998975,
603998972,603998912,0,4026531840,2499805393,0,65537,4026531840,0,0,1073875028,
805306587,0,1073875028,805306579,0,3087027002,2768240655,0,65538,2147483867,
2143297747,1073809596,805306579,3221225481,0,2583691401,14745601,65537,4026531840,
2147483867,268435456,603999012,603999009,603999006,603999040,0,4026531840,2499805395,
0,65537,4026531840,0,0,2583691424,17301505,524292,4026531840,0,0,0,2147483858,
603999176,603999100,0,2147483858,603999176,603999090,0,2147483858,603999176,
603999080,0,2147483858,603999176,603999110,0,2147483858,603999176,603999120,
0,2147483858,603999176,603999130,0,2147483858,603999176,603999140,0,2147483858,
603999176,603999150,0,0,2852192260,17367041,1,2147483810,268435456,1073809596,
805306578,0,4026531840,0,2852192260,17170433,1,2147483809,268435456,1073809596,
805306578,0,4026531840,0,2852192260,17104897,1,2147483808,268435456,1073809596,
805306578,0,4026531840,0,2852192260,17432577,1,2147483811,268435456,1073809596,
805306578,0,4026531840,0,2852192260,17498113,1,2147483812,268435456,1073809596,
805306578,0,4026531840,0,2852192260,17563649,1,2147483813,268435456,1073809596,
805306578,0,4026531840,0,2852192260,17629185,1,2147483814,268435456,1073809596,
805306578,0,4026531840,0,2852192260,17694721,1,2147483815,268435456,1073809596,
805306578,0,4026531840,0,2852126724,17760257,196616,2147483808,2147483809,2147483810,
2147483811,2147483812,2147483813,2147483814,2147483815,268435456,1073875028,
805306578,0,4026531840,3087027154,2499805394,0,65539,4026531840,0,0,603999176,
603999160,0,2499805394,0,65537,4026531840,0,0,2852126724,1114113,131076,2147483784,
2147483763,2147483666,2139095099,2147483863,603999207,603982701,0,4026531840,
1073761048,805306583,0,3087027195,2768240653,0,65538,2147483863,2143307807,2583691277,
3538945,65537,4026531840,268435456,603999207,603999204,603982701,0,1073742600,
805306583,3221225490,0,4026531840,2499805399,0,65537,4026531840,0,0,2852126724,
17825792,131078,2147483656,2164260869,2147483650,2151677955,2147483655,2147483769,
2147483868,603999270,603999286,0,4026531840,2852126727,17891328,196616,2147491848,
2147491961,2147491842,2147491843,2147483765,2143297541,2147483767,2143297543,
268435457,1073741840,805306588,0,603999267,603999286,0,4026531840,0,1073875028,
805306589,0,2768240648,0,65539,2155886812,2147492061,2147483870,1073809596,805306589,
3221225481,0,603999270,603999247,0,0,4026531840,0,2852126739,17825792,131078,
2147489800,2164279301,2147495938,2151702531,2147483655,2147514489,2147483870,
603999316,0,2147483870,603999326,0,2147483870,603999334,0,2147483870,603999342,
0,2147483870,603999350,0,2147483870,603999324,603999358,0,4026531840,0,2852192259,
18022400,1,2147483655,268435456,805306590,0,4026531840,805306590,0,2852192259,
18087936,1,2147483656,268435456,805306590,0,4026531840,2852192259,18153472,1,
2147483650,268435456,805306590,0,4026531840,2852192259,18219008,1,2147483653,
268435456,805306590,0,4026531840,2852192259,18284544,1,2147483651,268435456,
805306590,0,4026531840,2852192260,18350080,1,2147483769,2147483871,268435456,
603999368,0,4026531840,0,2852126724,18415616,131076,2147483656,2147483653,2147483650,
2147483651,268435456,1073875028,805306591,0,4026531840,2852126740,18481152,131077,
2147491848,2147516421,2147483650,2151702531,2147500039,2147483873,603999474,
603999410,0,2147483873,603999474,603999420,0,2147483873,603999474,603999430,
0,2147483873,603999474,603999440,0,2147483873,603999474,603999450,0,4026531840,
0,2852192260,18153472,1,2147483650,268435456,1073742600,805306593,0,4026531840,
0,2852192260,18087936,1,2147483656,268435456,1073742600,805306593,0,4026531840,
0,2852192260,18022400,1,2147483655,268435456,1073742600,805306593,0,4026531840,
0,2852192260,18284544,1,2147483651,268435456,1073742600,805306593,0,4026531840,
0,2852192260,18219008,1,2147483653,268435456,1073742600,805306593,0,4026531840,
0,2852126724,18546688,131077,2147483656,2147483653,2147483650,2151677955,2147483655,
268435456,1073742864,805306593,0,4026531840,0,3087027452,2499805409,0,65539,
4026531840,0,0,603999474,603999460,0,2499805409,0,65537,4026531840,0,0,2852126726,
18612224,65538,2147489803,2143289353,2147483872,603999502,0,2147483872,603999538,
0,4026531840,2852192259,18677760,1,2147483657,268435456,603999510,0,4026531840,
2852126727,18546688,131078,2147483656,2147483653,2160066562,2151677955,2147483655,
2147489802,603999528,603999380,0,268435456,1073741840,805306592,0,4026531840,
0,2852192260,18743296,1,2147483658,268435456,1073741848,805306592,0,4026531840,
0,2852192259,18808832,1,2147483659,268435456,603999546,0,4026531840,2852126727,
18874368,131077,2147483656,2147483653,2147483650,2151677955,2147489799,603999564,
603999663,0,268435456,1073741840,805306592,0,268435457,805306592,0,2583691271,
18939904,65540,268435457,1073741840,805306592,0,268435456,1073741848,805306592,
0,0,2852126732,19005440,196616,2147491848,2147500153,2164269058,2147491843,2147491964,
2147491845,2147483770,2147491847,2147483875,603999647,603999600,0,2147483875,
603999647,603999779,0,2147483875,603999647,603999755,0,4026531840,2852192259,
19070976,1,2147483770,268435457,805306595,0,4026531840,2852192260,18350080,1,
2147483769,2147483877,268435456,603999765,0,4026531840,0,2852126733,19005440,
196616,2147502088,2147491961,2164279298,2147502083,2147502204,2147502085,2147483770,
2147502087,268435457,1073741840,805306595,0,2147483877,268435456,603999644,603999765,
0,268435456,1073875028,805306596,0,4026531840,0,1073875028,805306596,0,2768240648,
0,65539,2147492068,2151692515,2147483877,1073809596,805306596,3221225481,0,603999647,
603999618,0,0,4026531840,0,2852126736,18415616,131076,2147491848,2147508229,
2147483650,2147500035,2147483874,603999739,603999687,0,2147483874,603999739,
603999697,0,2147483874,603999739,603999707,0,2147483874,603999739,603999717,
0,4026531840,2852192260,18153472,1,2147483650,268435456,1073742600,805306594,
0,4026531840,0,2852192260,18087936,1,2147483656,268435456,1073742600,805306594,
0,4026531840,0,2852192260,18284544,1,2147483651,268435456,1073742600,805306594,
0,4026531840,0,2852192260,18219008,1,2147483653,268435456,1073742600,805306594,
0,4026531840,0,2852126724,18874368,131076,2147483656,2147483653,2147483650,2147483651,
268435456,1073742864,805306594,0,4026531840,3087027717,2499805410,0,65539,4026531840,
0,0,603999739,603999727,0,2499805410,0,65537,4026531840,0,0,2852192260,18350080,
1,2147483769,2147483877,268435456,603999765,0,4026531840,0,2852126724,18481152,
131077,2147483656,2147483653,2147483650,2151677955,2147483655,268435456,1073875028,
805306597,0,4026531840,0,2852126748,19136512,131079,2172665864,2164293637,2147508226,
2151718915,2147491847,2147532921,2147483772,2147483876,603999899,603999819,0,
2147483876,603999899,603999829,0,2147483876,603999899,603999839,0,2147483876,
603999899,603999849,0,2147483876,603999899,603999859,0,2147483876,603999899,
603999869,0,2147483876,603999899,603999608,0,4026531840,0,2852192260,19202048,
1,2147483772,268435456,1073809596,805306596,0,4026531840,0,2852192260,18022400,
1,2147483655,268435456,1073809596,805306596,0,4026531840,0,2852192260,18087936,
1,2147483656,268435456,1073809596,805306596,0,4026531840,0,2852192260,18153472,
1,2147483650,268435456,1073809596,805306596,0,4026531840,0,2852192260,18219008,
1,2147483653,268435456,1073809596,805306596,0,4026531840,0,2852192260,18284544,
1,2147483651,268435456,1073809596,805306596,0,4026531840,0,2852126729,19005440,
131079,2172659720,2164271109,2147493890,2151688195,2147493895,2147483769,2147494012,
2147483877,268435456,603999644,603999765,0,268435456,1073875028,805306596,0,
4026531840,3087027881,2768240647,0,65538,2147492068,2147483877,1073809596,805306596,
3221225481,0,603999899,603999879,0,4026531840,2499805412,0,65537,4026531840,
0,0,2852126732,19005440,196616,2147491848,2147500153,2164269058,2147491843,2147483772,
2147491845,2147491962,2147491847,2147483878,603999980,603999943,0,2147483878,
603999980,604000068,0,2147483878,603999980,603999608,0,4026531840,2852192259,
19202048,1,2147483772,268435457,805306598,0,4026531840,2852126733,19005440,196616,
2147502088,2147491961,2164279298,2147502083,2147483772,2147502085,2147502202,
2147502087,268435457,1073741840,805306598,0,2147483877,268435456,603999977,603999765,
0,268435456,1073875028,805306599,0,4026531840,0,1073875028,805306599,0,2768240648,
0,65539,2147498214,2151684325,2147483879,603999980,603999951,0,1073809596,805306599,
3221225484,0,0,4026531840,0,2852126732,19267584,65539,2147491978,2151694339,
2147483785,2147483880,604000052,604000016,0,2147483880,604000052,604000024,0,
2147483880,604000052,604000032,0,4026531840,0,2852192259,19333120,1,2147483785,
268435456,805306600,0,4026531840,2852192259,19398656,1,2147483786,268435456,
805306600,0,4026531840,2852192259,18284544,1,2147483651,268435456,805306600,
0,4026531840,2852126724,19464192,131076,2147483785,2143289349,2147483786,2147483651,
268435456,1073741840,805306600,0,4026531840,3087028030,2499805416,0,65539,4026531840,
0,0,604000052,604000040,0,2499805416,0,65537,4026531840,0,0,2852126748,19529728,
131079,2147500040,2164293637,2164285442,2151718915,2147491847,2147532921,2147483770,
2147483879,604000188,604000108,0,2147483879,604000188,604000118,0,2147483879,
604000188,604000128,0,2147483879,604000188,604000138,0,2147483879,604000188,
604000148,0,2147483879,604000188,604000158,0,2147483879,604000188,603999608,
0,4026531840,0,2852192260,19070976,1,2147483770,268435456,1073809596,805306599,
0,4026531840,0,2852192260,18022400,1,2147483655,268435456,1073809596,805306599,
0,4026531840,0,2852192260,18087936,1,2147483656,268435456,1073809596,805306599,
0,4026531840,0,2852192260,18153472,1,2147483650,268435456,1073809596,805306599,
0,4026531840,0,2852192260,18219008,1,2147483653,268435456,1073809596,805306599,
0,4026531840,0,2852192260,18284544,1,2147483651,268435456,1073809596,805306599,
0,4026531840,0,2852126729,19005440,131079,2147493896,2164271109,2164271106,2151688195,
2147493895,2147483769,2147494010,2147483877,268435456,603999977,603999765,0,
268435456,1073875028,805306599,0,4026531840,3087028170,2768240647,0,65538,2147483879,
2143295717,604000188,604000168,0,1073809596,805306599,3221225484,0,4026531840,
2499805415,0,65537,4026531840,0,0,2852126732,19267584,65539,2147491978,2151694339,
2147483785,2147483881,604000264,604000228,0,2147483881,604000264,604000236,0,
2147483881,604000264,604000244,0,4026531840,0,2852192259,19333120,1,2147483785,
268435456,805306601,0,4026531840,2852192259,19398656,1,2147483786,268435456,
805306601,0,4026531840,2852192259,18284544,1,2147483651,268435456,805306601,
0,4026531840,2852126724,19464192,131076,2147483785,2143289349,2147483786,2147483651,
268435456,1073875028,805306601,0,4026531840,3087028242,2499805417,0,65539,4026531840,
0,0,604000264,604000252,0,2499805417,0,65537,4026531840,0,0,2147483882,604000284,
604000331,0,2852126723,19595264,65538,2147483790,2147483789,268435456,604000294,
0,805306602,0,2852126727,19660800,65538,2147483752,2147489797,268435456,604000308,
0,268435456,1073741848,805306602,0,4026531840,0,2852192260,18219008,1,2147483653,
268435456,1073741856,805306602,0,4026531840,0,2852192261,19726336,1,2147483776,
2147483884,268435456,604000328,604000434,0,4026531840,1073741840,805306604,0,
2852192260,18219008,1,2147483653,2147483883,268435456,604000341,0,4026531840,
0,2583691325,19791872,65539,805306603,0,0,268435456,604000351,0,0,2852192260,
18219008,1,2147483653,268435456,1073741848,805306603,0,4026531840,0,2852192261,
19857408,1,2147483778,2147483886,268435456,604000371,604000374,0,4026531840,
1073741840,805306606,0,2852126728,19922944,65538,2147483808,2147492001,2147483887,
604000418,604000388,0,2147483887,604000418,604000398,0,4026531840,2852192260,
19988480,1,2147483808,268435456,1073742600,805306607,0,4026531840,0,2852192260,
20054016,1,2147483809,268435456,1073742600,805306607,0,4026531840,0,2852126724,
20119552,65538,2147483808,2147483809,268435456,1073742864,805306607,0,4026531840,
3087028396,2499805423,0,65539,4026531840,0,0,604000418,604000408,0,2499805423,
0,65537,4026531840,0,0,2852126772,20185088,196621,2147508376,2147516569,2147524762,
2147541147,2168553620,2160074757,2168455318,2168471703,2155921557,2147549340,
2147557533,2147565726,2147573919,2147483885,604000656,604000504,0,2147483885,
604000656,604000514,0,2147483885,604000656,604000524,0,2147483885,604000656,
604000534,0,2147483885,604000656,604000544,0,2147483885,604000656,604000554,
0,2147483885,604000656,604000564,0,2147483885,604000656,604000574,0,2147483885,
604000656,604000584,0,2147483885,604000656,604000594,0,2147483885,604000656,
604000604,0,2147483885,604000656,604000614,0,2147483885,604000656,604000624,
0,4026531840,0,2852192260,20250624,1,2147483798,268435456,1073742600,805306605,
0,4026531840,0,2852192260,18219008,1,2147483653,268435456,1073742600,805306605,
0,4026531840,0,2852192260,20316160,1,2147483799,268435456,1073742600,805306605,
0,4026531840,0,2852192260,20381696,1,2147483800,268435456,1073742600,805306605,
0,4026531840,0,2852192260,20447232,1,2147483801,268435456,1073742600,805306605,
0,4026531840,0,2852192260,20512768,1,2147483802,268435456,1073742600,805306605,
0,4026531840,0,2852192260,20578304,1,2147483797,268435456,1073742600,805306605,
0,4026531840,0,2852192260,20643840,1,2147483803,268435456,1073742600,805306605,
0,4026531840,0,2852192260,20709376,1,2147483804,268435456,1073742600,805306605,
0,4026531840,0,2852192260,20774912,1,2147483805,268435456,1073742600,805306605,
0,4026531840,0,2852192260,20840448,1,2147483806,268435456,1073742600,805306605,
0,4026531840,0,2852192260,20905984,1,2147483807,268435456,1073742600,805306605,
0,4026531840,0,2852192260,20971520,1,2147483796,268435456,1073742600,805306605,
0,4026531840,0,2852126724,21037056,196621,2147483800,2147483801,2147483802,2147483803,
2168455316,2160066565,2168455318,2168455319,2155872405,2147483804,2147483805,
2147483806,2147483807,268435456,1073742864,805306605,0,4026531840,0,3087028634,
2499805421,0,65539,4026531840,0,0,604000656,604000634,0,2499805421,0,65537,4026531840,
0,0,2583691395,21102592,131075,4026531840,0,0,2147483888,604000684,0,2147483888,
604000697,0,2852192260,21168128,1,2147483779,268435456,604000694,604000779,0,
4026531840,0,1073741840,805306608,0,2852192260,21233664,1,2147483780,268435456,
604000694,604000779,0,4026531840,0,2852126732,19267584,65539,2147491978,2151694339,
2147483785,2147483890,604000763,604000727,0,2147483890,604000763,604000735,0,
2147483890,604000763,604000743,0,4026531840,0,2852192259,19333120,1,2147483785,
268435456,805306610,0,4026531840,2852192259,19398656,1,2147483786,268435456,
805306610,0,4026531840,2852192259,18284544,1,2147483651,268435456,805306610,
0,4026531840,2852126724,19464192,131076,2147483785,2143289349,2147483786,2147483651,
268435456,1073875028,805306610,0,4026531840,3087028741,2499805426,0,65539,4026531840,
0,0,604000763,604000751,0,2499805426,0,65537,4026531840,0,0,2583691424,21299200,
524292,4026531840,0,0,0,2147483889,604000915,604000839,0,2147483889,604000915,
604000829,0,2147483889,604000915,604000819,0,2147483889,604000915,604000849,
0,2147483889,604000915,604000859,0,2147483889,604000915,604000869,0,2147483889,
604000915,604000879,0,2147483889,604000915,604000889,0,0,2852192260,21364736,
1,2147483810,268435456,1073742600,805306609,0,4026531840,0,2852192260,20054016,
1,2147483809,268435456,1073742600,805306609,0,4026531840,0,2852192260,19988480,
1,2147483808,268435456,1073742600,805306609,0,4026531840,0,2852192260,21430272,
1,2147483811,268435456,1073742600,805306609,0,4026531840,0,2852192260,21495808,
1,2147483812,268435456,1073742600,805306609,0,4026531840,0,2852192260,21561344,
1,2147483813,268435456,1073742600,805306609,0,4026531840,0,2852192260,21626880,
1,2147483814,268435456,1073742600,805306609,0,4026531840,0,2852192260,21692416,
1,2147483815,268435456,1073742600,805306609,0,4026531840,0,2852126724,21757952,
196616,2147483808,2147483809,2147483810,2147483811,2147483812,2147483813,2147483814,
2147483815,268435456,1073742864,805306609,0,4026531840,3087028893,2499805425,
0,65539,4026531840,0,0,604000915,604000899,0,2499805425,0,65537,4026531840,0,
0,2852126736,3473409,327717,2147508352,2147508353,2147508354,2273337411,2147508356,
2269143045,2147508358,2264948839,2264948840,2147508329,2227200050,2147483710,
2189434892,2147508333,2147508334,2185257007,2185257008,2147508337,2113953810,
2147508339,2147508276,2147500149,2147508332,2147508247,2147508335,2147508336,
2147508346,2147508283,2147508348,2147508338,2067816478,2151702591,2147508351,
2147508355,2147508357,2147508359,2147508360,2147483841,604001003,603979780,0,
2147483841,604001003,603979858,0,2147483841,604001003,603979886,0,2147483841,
604001003,603985168,0,4026531840,0,2852126727,3538945,65538,2147483669,2143295501,
1073748488,805306561,0,268435456,603980833,603992336,0,4026531840,0,2768240758,
0,327735,2223134784,2223134785,2235785282,2353133667,2265108548,2147600485,2260770886,
2147588199,2285994088,2147575913,2281787498,2147563627,2239973452,2239967309,
2239961166,2239955023,2239930448,2147655761,2277654624,2277648481,2147674196,
2239942741,2239942742,2265059426,2147524664,2147661913,2147489946,2223153243,
2193786972,2223140957,2147504286,2218940511,2181161060,2231480422,2147557484,
2147551341,2147545198,2147537007,2147530864,2176884860,2147524740,2147524744,
2147524746,2147524757,2147489942,2147516571,2147496092,2147510429,2147496095,
2147496096,2164273313,2147489954,2147489955,2147483814,2147723457,604001003,
603980346,0,805306517,3221225535,0,1073809516,805306522,3221225539,0,604001003,
603980359,0,604001003,603980405,0,1073809524,805306522,3221225549,0,805306459,
3221225552,0,604001003,603980420,0,1073776648,805306434,3221225559,0,604001003,
603980432,0,805306476,3221225565,0,805306475,3221225568,0,604001003,603980445,
0,604001003,603980460,0,604001003,603980475,0,604001003,603980490,0,604001003,
603980523,0,604001003,603980540,0,604001003,603980553,0,604001003,603980566,
0,604001003,603980588,0,604001003,603980598,0,604001003,603980611,0,604001003,
603980624,0,805306461,3221225607,0,805306444,3221225610,0,805306477,3221225613,
0,805306447,3221225616,0,604001003,603980647,0,805306452,3221225622,0,604001003,
603980662,0,604001003,603980715,0,805306445,3221225631,0,604001003,603980768,
0,604001003,604000989,0,2583691315,1966081,65537,4026531840,268435456,604001003,
603980839,603988575,0,0,4026531840,0,2583691290,21823489,196611,4026531840,0,
0,2147483677,604001197,0,2147483677,604001238,0,2147483677,604001269,0,0,2852192260,
21889025,1,2147483674,268435456,604001207,603982851,0,4026531840,0,2852192259,
21954561,1,2147483675,268435456,604001215,0,4026531840,2852192260,3866625,1,
2147483671,268435456,604001225,603991032,0,4026531840,0,2852192260,1245185,1,
2147483672,268435456,604001235,603981886,0,4026531840,0,1073749304,805306397,
0,2852192259,21954561,1,2147483675,268435456,604001246,0,4026531840,2852192260,
3866625,1,2147483671,268435456,604001256,603991032,0,4026531840,0,2852192260,
1245185,1,2147483672,268435456,604001266,603982851,0,4026531840,0,1073749544,
805306397,0,2852192259,22020097,1,2147483676,268435456,604001277,0,4026531840,
2852126726,22085633,65538,2147489822,2147483671,268435456,604001289,0,268435456,
604002019,0,4026531840,2852126734,22151169,327721,2294292512,2294292513,2147500162,
2290106435,2147500164,2285912069,2147500166,2281726055,2281726056,2147500137,
2239782962,2147500094,2189443084,2147508333,2189426734,2189443119,2202026032,
2147508337,2113945618,2147500147,2147500084,2197839893,2147508332,2147500055,
2147508334,2147508335,2147500154,2147500091,2147500156,2147508336,2067816478,
2160083007,2147508338,2147500149,2147500159,2147500160,2147500161,2147500163,
2147500165,2147500167,2147500168,1610612738,67130437,67130645,0,1610612738,67130697,
67130888,0,1610612738,67130891,67130894,0,604001809,0,4026531840,0,2852192262,
22216705,1,2147483694,2147483842,268435456,604001361,603997767,603999192,0,4026531840,
0,2852192259,3801089,1,2147483669,268435456,604001369,0,4026531840,2852126726,
5701633,327718,2147483776,2147483777,2147483778,2277507139,2147483780,2273312773,
2147483782,2269118567,2269118568,2147483753,2227175474,2147483710,2189426700,
2147483757,2147483758,2185232431,2185232432,2147483761,2113929234,2147483763,
2147483700,2193627157,2147483756,2147483671,2147483759,2147483760,2147483770,
2147483707,2147483772,2147483762,2067791902,2155872319,2147483765,2147483775,
2147483779,2147483781,2147483783,2147483784,604001417,603991032,0,268435456,
604001491,0,4026531840,2852192259,3801089,1,2147483669,268435456,604001425,0,
4026531840,2852126727,1376257,327718,2147483776,2147483777,2147483778,2277507139,
2147483780,2273312773,2147483782,2269118567,2269118568,2147483753,2239758386,
2147483710,2189426700,2147483757,2147483758,2189426735,2202009648,2147483761,
2113929234,2147483763,2147483700,2147483765,2147483756,2147483671,2147489816,
2147483759,2147483770,2147483707,2147483772,2147483760,2067791902,2155872319,
2147483762,2147483775,2147483779,2147483781,2147483783,2147483784,604001475,
603991032,0,268435456,604001488,603982851,0,4026531840,0,2852192260,1245185,
1,2147483672,268435456,604001485,603982851,0,4026531840,0,1073749832,805306397,
0,1073751360,805306397,0,2852126727,1376257,327718,2147483776,2147483777,2147483778,
2277507139,2147483780,2273312773,2147483782,2269118567,2269118568,2147483753,
2239758386,2147483710,2189426700,2147483757,2147483758,2189426735,2202009648,
2147483761,2113929234,2147483763,2147483700,2147483765,2147483756,2147483671,
2147489816,2147483759,2147483770,2147483707,2147483772,2147483760,2067791902,
2155872319,2147483762,2147483775,2147483779,2147483781,2147483783,2147483784,
604001541,603991032,0,268435456,604001554,603982851,0,4026531840,0,2852192260,
1245185,1,2147483672,268435456,604001551,603982851,0,4026531840,0,1073751104,
805306397,0,1073752888,805306397,0,2852192262,22216705,1,2147483694,2147483843,
268435456,604001569,603997770,603982701,0,4026531840,0,2852126728,22282241,65538,
2147491871,2143289373,268435456,604001583,603991032,0,268435456,604001596,603991032,
0,4026531840,2852192260,1245185,1,2147483672,268435456,604001593,603982851,0,
4026531840,0,1073750328,805306397,0,2852192260,1245185,1,2147483672,268435456,
604001606,603982851,0,4026531840,0,1073752120,805306397,0,604001612,603984678,
0,2852126726,5701633,327718,2147483776,2147483777,2147483778,2277507139,2147483780,
2273312773,2147483782,2269118567,2269118568,2147483753,2227175474,2147483710,
2189426700,2147483757,2147483758,2185232431,2185232432,2147483761,2113929234,
2147483763,2147483700,2193627157,2147483756,2147483671,2147483759,2147483760,
2147483770,2147483707,2147483772,2147483762,2067791902,2155872319,2147483765,
2147483775,2147483779,2147483781,2147483783,2147483784,604001660,603991032,0,
268435456,604001734,0,4026531840,2852192259,3801089,1,2147483669,268435456,604001668,
0,4026531840,2852126727,1376257,327718,2147483776,2147483777,2147483778,2277507139,
2147483780,2273312773,2147483782,2269118567,2269118568,2147483753,2239758386,
2147483710,2189426700,2147483757,2147483758,2189426735,2202009648,2147483761,
2113929234,2147483763,2147483700,2147483765,2147483756,2147483671,2147489816,
2147483759,2147483770,2147483707,2147483772,2147483760,2067791902,2155872319,
2147483762,2147483775,2147483779,2147483781,2147483783,2147483784,604001718,
603991032,0,268435456,604001731,603982851,0,4026531840,0,2852192260,1245185,
1,2147483672,268435456,604001728,603982851,0,4026531840,0,1073750080,805306397,
0,1073751864,805306397,0,2852126727,1376257,327718,2147483776,2147483777,2147483778,
2277507139,2147483780,2273312773,2147483782,2269118567,2269118568,2147483753,
2239758386,2147483710,2189426700,2147483757,2147483758,2189426735,2202009648,
2147483761,2113929234,2147483763,2147483700,2147483765,2147483756,2147483671,
2147489816,2147483759,2147483770,2147483707,2147483772,2147483760,2067791902,
2155872319,2147483762,2147483775,2147483779,2147483781,2147483783,2147483784,
604001784,603991032,0,268435456,604001797,603982851,0,4026531840,0,2852192260,
1245185,1,2147483672,268435456,604001794,603982851,0,4026531840,0,1073751608,
805306397,0,1073753136,805306397,0,604001569,603982666,0,604001361,604000931,
0,604001569,603990547,0,2852126726,22347777,196620,2189432936,2147489905,2185238578,
2147489901,2147489900,2139095061,2155878430,2155878503,2147489902,2147489903,
2147489904,2147489906,268435456,604001831,0,604001361,604000931,0,4026531840,
2852126726,5701633,327718,2147483776,2147483777,2147483778,2277507139,2147483780,
2273312773,2147483782,2269118567,2269118568,2147483753,2227175474,2147483710,
2189426700,2147483757,2147483758,2185232431,2185232432,2147483761,2113929234,
2147483763,2147483700,2193627157,2147483756,2147483671,2147483759,2147483760,
2147483770,2147483707,2147483772,2147483762,2067791902,2155872319,2147483765,
2147483775,2147483779,2147483781,2147483783,2147483784,604001879,603991032,0,
268435456,604001953,0,4026531840,2852192259,3801089,1,2147483669,268435456,604001887,
0,4026531840,2852126727,1376257,327718,2147483776,2147483777,2147483778,2277507139,
2147483780,2273312773,2147483782,2269118567,2269118568,2147483753,2239758386,
2147483710,2189426700,2147483757,2147483758,2189426735,2202009648,2147483761,
2113929234,2147483763,2147483700,2147483765,2147483756,2147483671,2147489816,
2147483759,2147483770,2147483707,2147483772,2147483760,2067791902,2155872319,
2147483762,2147483775,2147483779,2147483781,2147483783,2147483784,604001937,
603991032,0,268435456,604001950,603982851,0,4026531840,0,2852192260,1245185,
1,2147483672,268435456,604001947,603982851,0,4026531840,0,1073750848,805306397,
0,1073752632,805306397,0,2852126727,1376257,327718,2147483776,2147483777,2147483778,
2277507139,2147483780,2273312773,2147483782,2269118567,2269118568,2147483753,
2239758386,2147483710,2189426700,2147483757,2147483758,2189426735,2202009648,
2147483761,2113929234,2147483763,2147483700,2147483765,2147483756,2147483671,
2147489816,2147483759,2147483770,2147483707,2147483772,2147483760,2067791902,
2155872319,2147483762,2147483775,2147483779,2147483781,2147483783,2147483784,
604002003,603991032,0,268435456,604002016,603982851,0,4026531840,0,2852192260,
1245185,1,2147483672,268435456,604002013,603982851,0,4026531840,0,1073752376,
805306397,0,1073753392,805306397,0,2852192259,3866625,1,2147483671,268435456,
604002027,0,4026531840,2852126732,22413313,262173,2202009632,2239758369,2239764498,
2210404419,2239764532,2206210053,2147489926,2235570199,2147489928,2147489897,
2147489914,2147489851,2181044236,2185238576,2155884590,2155878447,2147489854,
2164267071,2176850035,2181044341,2147489916,2147489919,2147489920,2147489921,
2147489922,2147489923,2147489924,2147489925,2147489927,604002073,603982666,0,
604002073,603990547,0,2147483843,268435456,604002073,603997770,603982701,0,4026531840,
0,2852192260,22478849,1,2147483679,268435456,604002083,603991032,0,4026531840,
0,2852192260,1245185,1,2147483672,268435456,604002093,603982851,0,4026531840,
0,1073750592,805306397,0,2852126746,5832705,327731,2147528832,2147528833,2323689506,
2269163555,2323689508,2172694533,2323689510,2256580647,2323689576,2147528809,
2147528746,2298523685,2239774732,2239803437,2239803438,2239803439,2239803440,
2147528817,2172674066,2147528819,2147528756,2227220501,2147528726,2147528727,
2210443314,2147528763,2210443290,2139140123,2206248988,2147483710,2143334430,
2197860415,2202054723,2214637671,2147528812,2147528813,2147528814,2147528815,
2147528816,2147528818,2147520629,2147528826,2147528828,2147528831,2147528834,
2147528835,2147528836,2147528837,2147528838,2147528839,2147491976,2147483691,
604004420,603979780,0,2147483691,604004420,603979828,0,2147483691,604004420,
603979858,0,2147483691,2147483672,604004420,603981957,603981959,0,2147483691,
604004420,603979886,0,2147483691,604004420,604002178,0,4026531840,0,2852126826,
5898241,327726,2147655808,2147659905,2306895906,2239795235,2306912292,2172813317,
2306930726,2239782951,2147487848,2147635305,2147555370,2281754661,2147487852,
2227255341,2227265582,2227193903,2227275824,2147483761,2223087666,2147623027,
2147598388,2147682325,2147692566,2147495959,2147627067,2214600771,2193645594,
2134925339,2189451292,2214596711,2147612702,2181161023,2147487853,2147487854,
2147487855,2147487856,2147483762,2147643514,2147643516,2147655807,2147659906,
2147664003,2147664004,2147668101,2147678342,2147678343,603994820,0,603995279,
0,603991536,0,268435456,603980070,0,268435456,604002334,0,603981939,0,2147483680,
268435456,603982719,0,2147483681,268435456,603982740,0,2147483682,268435456,
603982761,0,2147483683,268435456,603982822,603991032,0,2147483684,268435456,
603982828,0,2147483692,268435456,603984493,0,2147483696,268435456,603984585,
603981886,0,2147483697,268435456,603984588,603984594,0,268435456,604003384,0,
2147483712,268435456,603987120,0,2147483718,268435456,603988361,0,268435456,
603980300,0,2147483740,268435456,603991698,603995279,0,603996161,0,2147483780,
268435456,603996913,0,2147483784,268435456,603996863,0,603997351,0,2147483806,
268435456,603997461,0,603997478,0,603997527,0,603997631,0,2147483810,268435456,
1073809540,805306530,0,603997576,0,2147483674,268435456,1073748232,805306394,
0,2147483676,268435456,603982343,0,4026531840,2852126726,5963777,65539,2155878448,
2147483671,2147483784,603983103,603987180,0,268435456,604002348,0,4026531840,
0,2852126732,6094849,65539,2155872272,2147502103,2147489928,268435456,604002368,
0,2147483815,268435456,1073809572,805306535,604002884,0,268435456,603983752,
0,4026531840,0,2852126729,6160385,65538,2147483784,2147495959,2147483815,268435456,
1073809572,805306535,604002384,0,268435456,603983360,0,4026531840,0,2852192259,
3866625,1,2147483671,268435456,604002392,0,4026531840,2852126726,6225921,131078,
2164267032,2147483763,2147483666,2139095099,2151678068,2147483784,604002408,
603985358,0,268435456,604002650,0,4026531840,2852192259,1245185,1,2147483672,
268435456,604002416,0,4026531840,2852192259,4521985,1,2147483666,268435456,604002424,
0,4026531840,2852126726,6291457,327735,2340421664,2340421665,2340421666,2269118499,
2340421668,2172649477,2340421670,2256535591,2340421736,2147483753,2147483690,
2315255845,2239758348,2239758381,2239758382,2239758383,2239758384,2239758385,
2172649490,2239764499,2147483700,2235564053,2147483670,2147483671,2214592562,
2147483707,2218786842,2139095067,2214592540,2147483710,2143289374,2206203967,
2218786883,2231369831,2147483756,2147483757,2147483758,2147483759,2147483760,
2147483761,2147483762,2147483763,2147483765,2147483770,2147483772,2147483775,
2147483776,2147483777,2147483778,2147483779,2147483780,2147483781,2147483782,
2147483783,2147483784,604002490,603987198,0,268435456,604002574,0,4026531840,
0,2852192259,4718593,1,2147483667,268435456,604002498,0,4026531840,2852126723,
22544385,196620,2147483752,2176843777,2181038098,2151677971,2147483707,2172649493,
2147483751,2143289367,2151678057,2147483761,2147483762,2147483765,1073761872,
805306423,0,604002518,0,2852126723,22609921,327727,2306867232,2306867233,2306867234,
2231369763,2306867236,2164260869,2306867238,2306867239,2306867240,2290090021,
2147483690,2235564078,2197815308,2214592557,2134900750,2155872271,2222981168,
2214592559,2147483698,2147483763,2147483700,2147483710,2147483670,2222981187,
2147483756,2147483673,2185232410,2147483675,2181038108,2147483757,2109734942,
2172649535,2147483758,2147483759,2147483760,2147483770,2147483772,2147483775,
2147483776,2147483777,2147483778,2147483779,2147483780,2147483781,2147483782,
2147483783,2147483784,1073761872,805306423,0,1073765968,805306424,0,2852126723,
22544385,196620,2147483752,2176843777,2181038098,2151677971,2147483707,2172649493,
2147483751,2143289367,2151678057,2147483761,2147483762,2147483765,1073762888,
805306423,0,604002594,0,2852126723,22609921,327727,2306867232,2306867233,2306867234,
2231369763,2306867236,2164260869,2306867238,2306867239,2306867240,2290090021,
2147483690,2235564078,2197815308,2214592557,2134900750,2155872271,2222981168,
2214592559,2147483698,2147483763,2147483700,2147483710,2147483670,2222981187,
2147483756,2147483673,2185232410,2147483675,2181038108,2147483757,2109734942,
2172649535,2147483758,2147483759,2147483760,2147483770,2147483772,2147483775,
2147483776,2147483777,2147483778,2147483779,2147483780,2147483781,2147483782,
2147483783,2147483784,1073762888,805306423,0,1073767240,805306424,0,2852192259,
4521985,1,2147483666,268435456,604002658,0,4026531840,2852126726,6291457,327735,
2340421664,2340421665,2340421666,2269118499,2340421668,2172649477,2340421670,
2256535591,2340421736,2147483753,2147483690,2315255845,2239758348,2239758381,
2239758382,2239758383,2239758384,2239758385,2172649490,2239764499,2147483700,
2235564053,2147483670,2147483671,2214592562,2147483707,2218786842,2139095067,
2214592540,2147483710,2143289374,2206203967,2218786883,2231369831,2147483756,
2147483757,2147483758,2147483759,2147483760,2147483761,2147483762,2147483763,
2147483765,2147483770,2147483772,2147483775,2147483776,2147483777,2147483778,
2147483779,2147483780,2147483781,2147483782,2147483783,2147483784,604002724,
603987198,0,268435456,604002808,0,4026531840,0,2852192259,4718593,1,2147483667,
268435456,604002732,0,4026531840,2852126723,22544385,196620,2147483752,2176843777,
2181038098,2151677971,2147483707,2172649493,2147483751,2143289367,2151678057,
2147483761,2147483762,2147483765,1073762632,805306423,0,604002752,0,2852126723,
22609921,327727,2306867232,2306867233,2306867234,2231369763,2306867236,2164260869,
2306867238,2306867239,2306867240,2290090021,2147483690,2235564078,2197815308,
2214592557,2134900750,2155872271,2222981168,2214592559,2147483698,2147483763,
2147483700,2147483710,2147483670,2222981187,2147483756,2147483673,2185232410,
2147483675,2181038108,2147483757,2109734942,2172649535,2147483758,2147483759,
2147483760,2147483770,2147483772,2147483775,2147483776,2147483777,2147483778,
2147483779,2147483780,2147483781,2147483782,2147483783,2147483784,1073762632,
805306423,0,1073766984,805306424,0,2852126723,22544385,196620,2147483752,2176843777,
2181038098,2151677971,2147483707,2172649493,2147483751,2143289367,2151678057,
2147483761,2147483762,2147483765,1073764416,805306423,0,604002828,0,2852126723,
22609921,327727,2306867232,2306867233,2306867234,2231369763,2306867236,2164260869,
2306867238,2306867239,2306867240,2290090021,2147483690,2235564078,2197815308,
2214592557,2134900750,2155872271,2222981168,2214592559,2147483698,2147483763,
2147483700,2147483710,2147483670,2222981187,2147483756,2147483673,2185232410,
2147483675,2181038108,2147483757,2109734942,2172649535,2147483758,2147483759,
2147483760,2147483770,2147483772,2147483775,2147483776,2147483777,2147483778,
2147483779,2147483780,2147483781,2147483782,2147483783,2147483784,1073764416,
805306423,0,1073769792,805306424,0,2852192259,3866625,1,2147483671,268435456,
604002892,0,4026531840,2852126726,6225921,131078,2164267032,2147483763,2147483666,
2139095099,2151678068,2147483784,604002908,603985358,0,268435456,604003150,0,
4026531840,2852192259,1245185,1,2147483672,268435456,604002916,0,4026531840,
2852192259,4521985,1,2147483666,268435456,604002924,0,4026531840,2852126726,
6291457,327735,2340421664,2340421665,2340421666,2269118499,2340421668,2172649477,
2340421670,2256535591,2340421736,2147483753,2147483690,2315255845,2239758348,
2239758381,2239758382,2239758383,2239758384,2239758385,2172649490,2239764499,
2147483700,2235564053,2147483670,2147483671,2214592562,2147483707,2218786842,
2139095067,2214592540,2147483710,2143289374,2206203967,2218786883,2231369831,
2147483756,2147483757,2147483758,2147483759,2147483760,2147483761,2147483762,
2147483763,2147483765,2147483770,2147483772,2147483775,2147483776,2147483777,
2147483778,2147483779,2147483780,2147483781,2147483782,2147483783,2147483784,
604002990,603987198,0,268435456,604003074,0,4026531840,0,2852192259,4718593,
1,2147483667,268435456,604002998,0,4026531840,2852126723,22544385,196620,2147483752,
2176843777,2181038098,2151677971,2147483707,2172649493,2147483751,2143289367,
2151678057,2147483761,2147483762,2147483765,1073762376,805306423,0,604003018,
0,2852126723,22609921,327727,2306867232,2306867233,2306867234,2231369763,2306867236,
2164260869,2306867238,2306867239,2306867240,2290090021,2147483690,2235564078,
2197815308,2214592557,2134900750,2155872271,2222981168,2214592559,2147483698,
2147483763,2147483700,2147483710,2147483670,2222981187,2147483756,2147483673,
2185232410,2147483675,2181038108,2147483757,2109734942,2172649535,2147483758,
2147483759,2147483760,2147483770,2147483772,2147483775,2147483776,2147483777,
2147483778,2147483779,2147483780,2147483781,2147483782,2147483783,2147483784,
1073762376,805306423,0,1073766472,805306424,0,2852126723,22544385,196620,2147483752,
2176843777,2181038098,2151677971,2147483707,2172649493,2147483751,2143289367,
2151678057,2147483761,2147483762,2147483765,1073764160,805306423,0,604003094,
0,2852126723,22609921,327727,2306867232,2306867233,2306867234,2231369763,2306867236,
2164260869,2306867238,2306867239,2306867240,2290090021,2147483690,2235564078,
2197815308,2214592557,2134900750,2155872271,2222981168,2214592559,2147483698,
2147483763,2147483700,2147483710,2147483670,2222981187,2147483756,2147483673,
2185232410,2147483675,2181038108,2147483757,2109734942,2172649535,2147483758,
2147483759,2147483760,2147483770,2147483772,2147483775,2147483776,2147483777,
2147483778,2147483779,2147483780,2147483781,2147483782,2147483783,2147483784,
1073764160,805306423,0,1073769024,805306424,0,2852192259,4521985,1,2147483666,
268435456,604003158,0,4026531840,2852126726,6291457,327735,2340421664,2340421665,
2340421666,2269118499,2340421668,2172649477,2340421670,2256535591,2340421736,
2147483753,2147483690,2315255845,2239758348,2239758381,2239758382,2239758383,
2239758384,2239758385,2172649490,2239764499,2147483700,2235564053,2147483670,
2147483671,2214592562,2147483707,2218786842,2139095067,2214592540,2147483710,
2143289374,2206203967,2218786883,2231369831,2147483756,2147483757,2147483758,
2147483759,2147483760,2147483761,2147483762,2147483763,2147483765,2147483770,
2147483772,2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,
2147483781,2147483782,2147483783,2147483784,604003224,603987198,0,268435456,
604003308,0,4026531840,0,2852192259,4718593,1,2147483667,268435456,604003232,
0,4026531840,2852126723,22544385,196620,2147483752,2176843777,2181038098,2151677971,
2147483707,2172649493,2147483751,2143289367,2151678057,2147483761,2147483762,
2147483765,1073763904,805306423,0,604003252,0,2852126723,22609921,327727,2306867232,
2306867233,2306867234,2231369763,2306867236,2164260869,2306867238,2306867239,
2306867240,2290090021,2147483690,2235564078,2197815308,2214592557,2134900750,
2155872271,2222981168,2214592559,2147483698,2147483763,2147483700,2147483710,
2147483670,2222981187,2147483756,2147483673,2185232410,2147483675,2181038108,
2147483757,2109734942,2172649535,2147483758,2147483759,2147483760,2147483770,
2147483772,2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,
2147483781,2147483782,2147483783,2147483784,1073763904,805306423,0,1073768768,
805306424,0,2852126723,22544385,196620,2147483752,2176843777,2181038098,2151677971,
2147483707,2172649493,2147483751,2143289367,2151678057,2147483761,2147483762,
2147483765,1073765432,805306423,0,604003328,0,2852126723,22609921,327727,2306867232,
2306867233,2306867234,2231369763,2306867236,2164260869,2306867238,2306867239,
2306867240,2290090021,2147483690,2235564078,2197815308,2214592557,2134900750,
2155872271,2222981168,2214592559,2147483698,2147483763,2147483700,2147483710,
2147483670,2222981187,2147483756,2147483673,2185232410,2147483675,2181038108,
2147483757,2109734942,2172649535,2147483758,2147483759,2147483760,2147483770,
2147483772,2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,
2147483781,2147483782,2147483783,2147483784,1073765432,805306423,0,1073772088,
805306424,0,2852126732,6094849,65539,2155872272,2147502103,2147489928,268435456,
604003404,0,2147483815,268435456,1073809572,805306535,604003920,0,268435456,
603986928,0,4026531840,0,2852126729,6160385,65538,2147483784,2147495959,2147483815,
268435456,1073809572,805306535,604003420,0,268435456,603986536,0,4026531840,
0,2852192259,3866625,1,2147483671,268435456,604003428,0,4026531840,2852126726,
6225921,131078,2164267032,2147483763,2147483666,2139095099,2151678068,2147483784,
604003444,603985358,0,268435456,604003686,0,4026531840,2852192259,1245185,1,
2147483672,268435456,604003452,0,4026531840,2852192259,4521985,1,2147483666,
268435456,604003460,0,4026531840,2852126726,6291457,327735,2340421664,2340421665,
2340421666,2269118499,2340421668,2172649477,2340421670,2256535591,2340421736,
2147483753,2147483690,2315255845,2239758348,2239758381,2239758382,2239758383,
2239758384,2239758385,2172649490,2239764499,2147483700,2235564053,2147483670,
2147483671,2214592562,2147483707,2218786842,2139095067,2214592540,2147483710,
2143289374,2206203967,2218786883,2231369831,2147483756,2147483757,2147483758,
2147483759,2147483760,2147483761,2147483762,2147483763,2147483765,2147483770,
2147483772,2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,
2147483781,2147483782,2147483783,2147483784,604003526,603987198,0,268435456,
604003610,0,4026531840,0,2852192259,4718593,1,2147483667,268435456,604003534,
0,4026531840,2852126723,22544385,196620,2147483752,2176843777,2181038098,2151677971,
2147483707,2172649493,2147483751,2143289367,2151678057,2147483761,2147483762,
2147483765,1073762120,805306423,0,604003554,0,2852126723,22609921,327727,2306867232,
2306867233,2306867234,2231369763,2306867236,2164260869,2306867238,2306867239,
2306867240,2290090021,2147483690,2235564078,2197815308,2214592557,2134900750,
2155872271,2222981168,2214592559,2147483698,2147483763,2147483700,2147483710,
2147483670,2222981187,2147483756,2147483673,2185232410,2147483675,2181038108,
2147483757,2109734942,2172649535,2147483758,2147483759,2147483760,2147483770,
2147483772,2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,
2147483781,2147483782,2147483783,2147483784,1073762120,805306423,0,1073766216,
805306424,0,2852126723,22544385,196620,2147483752,2176843777,2181038098,2151677971,
2147483707,2172649493,2147483751,2143289367,2151678057,2147483761,2147483762,
2147483765,1073763648,805306423,0,604003630,0,2852126723,22609921,327727,2306867232,
2306867233,2306867234,2231369763,2306867236,2164260869,2306867238,2306867239,
2306867240,2290090021,2147483690,2235564078,2197815308,2214592557,2134900750,
2155872271,2222981168,2214592559,2147483698,2147483763,2147483700,2147483710,
2147483670,2222981187,2147483756,2147483673,2185232410,2147483675,2181038108,
2147483757,2109734942,2172649535,2147483758,2147483759,2147483760,2147483770,
2147483772,2147483775,2147483776,2147483777,2147483778,2147483779,2147483780,
2147483781,2147483782,2147483783,2147483784,1073763648,805306423,0,1073768256,
805306424,0,2852192259,4521985,1,2147483666,268435456,604003694,0,4026531840,
2852126726,6291457,327735,2340421664,2340421665,2340421666,2269118499,2340421668,
2172649477,2340421670,2256535591,2340421736,2147483753,2147483690,2315255845,
2239758348,2239758381,2239758382,2239758383,2239758384,2239758385,2172649490,
2239764499,2147483700,2235564053,2147483670,2147483671,2214592562,2147483707,
2218786842,2139095067,2214592540,2147483710,2143289374,2206203967,2218786883,
2231369831,2147483756,2147483757,2147483758,2147483759,2147483760,2147483761,
2147483762,2147483763,2147483765,2147483770,2147483772,2147483775,2147483776,
2147483777,2147483778,2147483779,2147483780,2147483781,2147483782,2147483783,
2147483784,604003760,603987198,0,268435456,604003844,0,4026531840,0,2852192259,
4718593,1,2147483667,268435456,604003768,0,4026531840,2852126723,22544385,196620,
2147483752,2176843777,2181038098,2151677971,2147483707,2172649493,2147483751,
2143289367,2151678057,2147483761,2147483762,2147483765,1073763392,805306423,
0,604003788,0,2852126723,22609921,327727,2306867232,2306867233,2306867234,2231369763,
2306867236,2164260869,2306867238,2306867239,2306867240,2290090021,2147483690,
2235564078,2197815308,2214592557,2134900750,2155872271,2222981168,2214592559,
2147483698,2147483763,2147483700,2147483710,2147483670,2222981187,2147483756,
2147483673,2185232410,2147483675,2181038108,2147483757,2109734942,2172649535,
2147483758,2147483759,2147483760,2147483770,2147483772,2147483775,2147483776,
2147483777,2147483778,2147483779,2147483780,2147483781,2147483782,2147483783,
2147483784,1073763392,805306423,0,1073768000,805306424,0,2852126723,22544385,
196620,2147483752,2176843777,2181038098,2151677971,2147483707,2172649493,2147483751,
2143289367,2151678057,2147483761,2147483762,2147483765,1073765176,805306423,
0,604003864,0,2852126723,22609921,327727,2306867232,2306867233,2306867234,2231369763,
2306867236,2164260869,2306867238,2306867239,2306867240,2290090021,2147483690,
2235564078,2197815308,2214592557,2134900750,2155872271,2222981168,2214592559,
2147483698,2147483763,2147483700,2147483710,2147483670,2222981187,2147483756,
2147483673,2185232410,2147483675,2181038108,2147483757,2109734942,2172649535,
2147483758,2147483759,2147483760,2147483770,2147483772,2147483775,2147483776,
2147483777,2147483778,2147483779,2147483780,2147483781,2147483782,2147483783,
2147483784,1073765176,805306423,0,1073771320,805306424,0,2852192259,3866625,
1,2147483671,268435456,604003928,0,4026531840,2852126726,6225921,131078,2164267032,
2147483763,2147483666,2139095099,2151678068,2147483784,604003944,603985358,0,
268435456,604004186,0,4026531840,2852192259,1245185,1,2147483672,268435456,604003952,
0,4026531840,2852192259,4521985,1,2147483666,268435456,604003960,0,4026531840,
2852126726,6291457,327735,2340421664,2340421665,2340421666,2269118499,2340421668,
2172649477,2340421670,2256535591,2340421736,2147483753,2147483690,2315255845,
2239758348,2239758381,2239758382,2239758383,2239758384,2239758385,2172649490,
2239764499,2147483700,2235564053,2147483670,2147483671,2214592562,2147483707,
2218786842,2139095067,2214592540,2147483710,2143289374,2206203967,2218786883,
2231369831,2147483756,2147483757,2147483758,2147483759,2147483760,2147483761,
2147483762,2147483763,2147483765,2147483770,2147483772,2147483775,2147483776,
2147483777,2147483778,2147483779,2147483780,2147483781,2147483782,2147483783,
2147483784,604004026,603987198,0,268435456,604004110,0,4026531840,0,2852192259,
4718593,1,2147483667,268435456,604004034,0,4026531840,2852126723,22544385,196620,
2147483752,2176843777,2181038098,2151677971,2147483707,2172649493,2147483751,
2143289367,2151678057,2147483761,2147483762,2147483765,1073763136,805306423,
0,604004054,0,2852126723,22609921,327727,2306867232,2306867233,2306867234,2231369763,
2306867236,2164260869,2306867238,2306867239,2306867240,2290090021,2147483690,
2235564078,2197815308,2214592557,2134900750,2155872271,2222981168,2214592559,
2147483698,2147483763,2147483700,2147483710,2147483670,2222981187,2147483756,
2147483673,2185232410,2147483675,2181038108,2147483757,2109734942,2172649535,
2147483758,2147483759,2147483760,2147483770,2147483772,2147483775,2147483776,
2147483777,2147483778,2147483779,2147483780,2147483781,2147483782,2147483783,
2147483784,1073763136,805306423,0,1073767488,805306424,0,2852126723,22544385,
196620,2147483752,2176843777,2181038098,2151677971,2147483707,2172649493,2147483751,
2143289367,2151678057,2147483761,2147483762,2147483765,1073764920,805306423,
0,604004130,0,2852126723,22609921,327727,2306867232,2306867233,2306867234,2231369763,
2306867236,2164260869,2306867238,2306867239,2306867240,2290090021,2147483690,
2235564078,2197815308,2214592557,2134900750,2155872271,2222981168,2214592559,
2147483698,2147483763,2147483700,2147483710,2147483670,2222981187,2147483756,
2147483673,2185232410,2147483675,2181038108,2147483757,2109734942,2172649535,
2147483758,2147483759,2147483760,2147483770,2147483772,2147483775,2147483776,
2147483777,2147483778,2147483779,2147483780,2147483781,2147483782,2147483783,
2147483784,1073764920,805306423,0,1073770552,805306424,0,2852192259,4521985,
1,2147483666,268435456,604004194,0,4026531840,2852126726,6291457,327735,2340421664,
2340421665,2340421666,2269118499,2340421668,2172649477,2340421670,2256535591,
2340421736,2147483753,2147483690,2315255845,2239758348,2239758381,2239758382,
2239758383,2239758384,2239758385,2172649490,2239764499,2147483700,2235564053,
2147483670,2147483671,2214592562,2147483707,2218786842,2139095067,2214592540,
2147483710,2143289374,2206203967,2218786883,2231369831,2147483756,2147483757,
2147483758,2147483759,2147483760,2147483761,2147483762,2147483763,2147483765,
2147483770,2147483772,2147483775,2147483776,2147483777,2147483778,2147483779,
2147483780,2147483781,2147483782,2147483783,2147483784,604004260,603987198,0,
268435456,604004344,0,4026531840,0,2852192259,4718593,1,2147483667,268435456,
604004268,0,4026531840,2852126723,22544385,196620,2147483752,2176843777,2181038098,
2151677971,2147483707,2172649493,2147483751,2143289367,2151678057,2147483761,
2147483762,2147483765,1073764664,805306423,0,604004288,0,2852126723,22609921,
327727,2306867232,2306867233,2306867234,2231369763,2306867236,2164260869,2306867238,
2306867239,2306867240,2290090021,2147483690,2235564078,2197815308,2214592557,
2134900750,2155872271,2222981168,2214592559,2147483698,2147483763,2147483700,
2147483710,2147483670,2222981187,2147483756,2147483673,2185232410,2147483675,
2181038108,2147483757,2109734942,2172649535,2147483758,2147483759,2147483760,
2147483770,2147483772,2147483775,2147483776,2147483777,2147483778,2147483779,
2147483780,2147483781,2147483782,2147483783,2147483784,1073764664,805306423,
0,1073770296,805306424,0,2852126723,22544385,196620,2147483752,2176843777,2181038098,
2151677971,2147483707,2172649493,2147483751,2143289367,2151678057,2147483761,
2147483762,2147483765,1073765680,805306423,0,604004364,0,2852126723,22609921,
327727,2306867232,2306867233,2306867234,2231369763,2306867236,2164260869,2306867238,
2306867239,2306867240,2290090021,2147483690,2235564078,2197815308,2214592557,
2134900750,2155872271,2222981168,2214592559,2147483698,2147483763,2147483700,
2147483710,2147483670,2222981187,2147483756,2147483673,2185232410,2147483675,
2181038108,2147483757,2109734942,2172649535,2147483758,2147483759,2147483760,
2147483770,2147483772,2147483775,2147483776,2147483777,2147483778,2147483779,
2147483780,2147483781,2147483782,2147483783,2147483784,1073765680,805306423,
0,1073773104,805306424,0,2768240764,0,393287,2147637312,2147637313,2147704898,
2395119707,2369966148,2390919260,2147524678,2395095136,2147524744,2390894689,
2147524746,2386694242,2147698764,2147692621,2147686478,2147680335,2147655760,
2147655761,2361522275,2147723283,2147674196,2302857301,2302857302,2147729431,
2147729432,2147661913,2294530074,2047066139,2051260444,2294444125,2147504286,
2290243679,2042871840,2047066145,2051260450,2076426275,2206449700,2147600485,
2281812070,2147588199,2147582056,2147575913,2185478186,2185484331,2185478188,
2147551341,2147545198,2147537007,2172895280,2147729457,2147606628,2147569770,
2147563627,2147557484,2147530864,2147723319,2147524664,2147524740,2147524757,
2147489942,2147524732,2147489946,2147516571,2147496092,2147510429,2147496095,
2147496096,2147496097,2147489954,2147489955,2147483814,604004420,603980346,0,
805306517,3221225551,0,1073809516,805306522,3221225555,0,604004420,603980359,
0,604004420,603980405,0,1073809524,805306522,3221225565,0,805306459,3221225568,
0,604004420,603980420,0,1073776648,805306434,3221225575,0,604004420,603980432,
0,805306476,3221225581,0,805306475,3221225584,0,604004420,603980445,0,604004420,
603980460,0,604004420,603980475,0,604004420,603980490,0,604004420,603980523,
0,604004420,603980540,0,604004420,603980553,0,604004420,603980566,0,604004420,
603980588,0,604004420,603980598,0,604004420,603980611,0,604004420,603980624,
0,805306461,3221225623,0,805306444,3221225626,0,805306477,3221225629,0,805306447,
3221225632,0,604004420,603980647,0,805306452,3221225638,0,604004420,603980662,
0,604004420,603980715,0,805306445,3221225647,0,604004420,603980768,0,604004420,
603980811,0,2583691315,1966081,65537,4026531840,268435456,604004420,603980839,
603988575,0,805306411,3221225665,0,805306387,3221225668,0,0,4026531840,0,1879048194,
22675456,19,1,268435457,805306388,0
]);

function isTokenActive(token_id, row){
    var index  = ( row  * 6 ) + ( token_id  >> 5 );;
    var shift  = 1 << ( 31 & ( token_id ) );;
    return ( token_lookup[index] & shift ) != 0
}

function pre_scan(l, token){
    var tk_length = l.token_length;;
    var bt_length = l.byte_length;;
    var type_cache = l._type;;
    scan( l, token, 0 );
    var type_out = l._type;;
    l._type  = type_cache;
    l.token_length  = tk_length;
    l.byte_length  = bt_length;
    return type_out  > 0
}

function scan_core(l, tk_row){
    switch(( l.get_byte_at( l.byte_offset ) & 127 )){
    case 33: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 33 ){
            if( isTokenActive( 112, tk_row ) ){
                l.setToken( 112, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 92, tk_row ) ){
                    l.setToken( 92, 2, 2 )
                };
                if( l.get_byte_at( l.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 94, tk_row ) ){
                        l.setToken( 94, 3, 3 )
                    }
                }
            }
        }
    }
    break;
    case 34: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 34 ){
            if( isTokenActive( 122, tk_row ) ){
                l.setToken( 122, 1, 1 )
            };
            if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            }
        }
    }
    break;
    case 35: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 35 ){
            if( isTokenActive( 55, tk_row ) ){
                l.setToken( 55, 1, 1 )
            }
        }
    }
    break;
    case 36: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 36 ){
            if( isTokenActive( 138, tk_row ) ){
                l.setToken( 138, 1, 1 )
            };
            if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 136, l.byte_length, l.token_length )
            } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 139, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 123 ){
                if( isTokenActive( 119, tk_row ) ){
                    l.setToken( 119, 2, 2 )
                }
            }
        }
    }
    break;
    case 37: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 37 ){
            if( isTokenActive( 106, tk_row ) ){
                l.setToken( 106, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 71, tk_row ) ){
                    l.setToken( 71, 2, 2 )
                }
            }
        }
    }
    break;
    case 38: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 38 ){
            if( isTokenActive( 90, tk_row ) ){
                l.setToken( 90, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 38 ){
                if( isTokenActive( 86, tk_row ) ){
                    l.setToken( 86, 2, 2 )
                };
                if( l.get_byte_at( l.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 82, tk_row ) ){
                        l.setToken( 82, 3, 3 )
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 77, tk_row ) ){
                    l.setToken( 77, 2, 2 )
                }
            }
        }
    }
    break;
    case 39: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 39 ){
            if( isTokenActive( 124, tk_row ) ){
                l.setToken( 124, 1, 1 )
            };
            if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            }
        }
    }
    break;
    case 40: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 40 ){
            if( isTokenActive( 23, tk_row ) ){
                l.setToken( 23, 1, 1 )
            }
        }
    }
    break;
    case 41: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 41 ){
            if( isTokenActive( 24, tk_row ) ){
                l.setToken( 24, 1, 1 )
            }
        }
    }
    break;
    case 42: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 42 ){
            if( isTokenActive( 16, tk_row ) ){
                l.setToken( 16, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 42 ){
                if( isTokenActive( 107, tk_row ) ){
                    l.setToken( 107, 2, 2 )
                };
                if( l.get_byte_at( l.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 80, tk_row ) ){
                        l.setToken( 80, 3, 3 )
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 47 ){
                if( isTokenActive( 10, tk_row ) ){
                    l.setToken( 10, 2, 2 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 69, tk_row ) ){
                    l.setToken( 69, 2, 2 )
                }
            }
        }
    }
    break;
    case 43: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 43 ){
            if( isTokenActive( 103, tk_row ) ){
                l.setToken( 103, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 72, tk_row ) ){
                    l.setToken( 72, 2, 2 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 43 ){
                if( isTokenActive( 113, tk_row ) ){
                    l.setToken( 113, 2, 2 )
                }
            }
        }
    }
    break;
    case 44: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 44 ){
            if( isTokenActive( 13, tk_row ) ){
                l.setToken( 13, 1, 1 )
            }
        }
    }
    break;
    case 45: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 45 ){
            if( isTokenActive( 104, tk_row ) ){
                l.setToken( 104, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 73, tk_row ) ){
                    l.setToken( 73, 2, 2 )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 45 ){
                if( isTokenActive( 114, tk_row ) ){
                    l.setToken( 114, 2, 2 )
                }
            }
        }
    }
    break;
    case 46: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 46 ){
            if( isTokenActive( 61, tk_row ) ){
                l.setToken( 61, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 46 ){
                if( isTokenActive( 116, tk_row ) && l.get_byte_at( l.byte_offset  + 2 ) == 46 ){
                    l.setToken( 116, 3, 3 )
                }
            }
        }
    }
    break;
    case 47: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 47 ){
            if( isTokenActive( 105, tk_row ) ){
                l.setToken( 105, 1, 1 )
            };
            if( isTokenActive( 120, tk_row ) && token_production( l, 67128578, 3, 120, 2, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 120, l.byte_length, l.token_length )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 42 ){
                if( isTokenActive( 9, tk_row ) ){
                    l.setToken( 9, 2, 2 )
                };
                if( isTokenActive( 120, tk_row ) && token_production( l, 67128578, 3, 120, 2, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 120, l.byte_length, l.token_length )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 47 ){
                if( isTokenActive( 11, tk_row ) ){
                    l.setToken( 11, 2, 2 )
                };
                if( isTokenActive( 120, tk_row ) && token_production( l, 67128578, 3, 120, 2, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 120, l.byte_length, l.token_length )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 70, tk_row ) ){
                    l.setToken( 70, 2, 2 )
                }
            }
        }
    }
    break;
    case 48: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 48 ){
            if( isTokenActive( 161, tk_row ) ){
                l.setToken( 161, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            } else if( isTokenActive( 140, tk_row ) && token_production( l, 67129368, 177, 140, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 140, l.byte_length, l.token_length )
            } else if( isTokenActive( 143, tk_row ) && token_production( l, 67129406, 180, 143, 128, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 143, l.byte_length, l.token_length )
            } else if( isTokenActive( 144, tk_row ) && token_production( l, 67129449, 182, 144, 256, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 144, l.byte_length, l.token_length )
            } else if( isTokenActive( 145, tk_row ) && token_production( l, 67129760, 184, 145, 512, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 145, l.byte_length, l.token_length )
            } else if( isTokenActive( 5, tk_row ) && l.isNum(  ) && l.byte_length  > 1 ){
                l._type  = 5
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 88 ){
                if( isTokenActive( 127, tk_row ) ){
                    l.setToken( 127, 2, 2 )
                };
                if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 118, l.byte_length, l.token_length )
                } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 123, l.byte_length, l.token_length )
                } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 125, l.byte_length, l.token_length )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 120 ){
                if( isTokenActive( 128, tk_row ) ){
                    l.setToken( 128, 2, 2 )
                };
                if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 118, l.byte_length, l.token_length )
                } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 123, l.byte_length, l.token_length )
                } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 125, l.byte_length, l.token_length )
                } else if( isTokenActive( 143, tk_row ) && token_production( l, 67129406, 180, 143, 128, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 143, l.byte_length, l.token_length )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 66 ){
                if( isTokenActive( 129, tk_row ) ){
                    l.setToken( 129, 2, 2 )
                };
                if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 118, l.byte_length, l.token_length )
                } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 123, l.byte_length, l.token_length )
                } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 125, l.byte_length, l.token_length )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 98 ){
                if( isTokenActive( 130, tk_row ) ){
                    l.setToken( 130, 2, 2 )
                };
                if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 118, l.byte_length, l.token_length )
                } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 123, l.byte_length, l.token_length )
                } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 125, l.byte_length, l.token_length )
                } else if( isTokenActive( 144, tk_row ) && token_production( l, 67129449, 182, 144, 256, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 144, l.byte_length, l.token_length )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 79 ){
                if( isTokenActive( 131, tk_row ) ){
                    l.setToken( 131, 2, 2 )
                };
                if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 118, l.byte_length, l.token_length )
                } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 123, l.byte_length, l.token_length )
                } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 125, l.byte_length, l.token_length )
                } else if( isTokenActive( 145, tk_row ) && token_production( l, 67129760, 184, 145, 512, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 145, l.byte_length, l.token_length )
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 111 ){
                if( isTokenActive( 132, tk_row ) ){
                    l.setToken( 132, 2, 2 )
                };
                if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 118, l.byte_length, l.token_length )
                } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 123, l.byte_length, l.token_length )
                } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 125, l.byte_length, l.token_length )
                } else if( isTokenActive( 145, tk_row ) && token_production( l, 67129760, 184, 145, 512, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 145, l.byte_length, l.token_length )
                }
            }
        }
    }
    break;
    case 49: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 49 ){
            if( isTokenActive( 160, tk_row ) ){
                l.setToken( 160, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            } else if( isTokenActive( 140, tk_row ) && token_production( l, 67129368, 177, 140, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 140, l.byte_length, l.token_length )
            } else if( isTokenActive( 5, tk_row ) && l.isNum(  ) && l.byte_length  > 1 ){
                l._type  = 5
            }
        }
    }
    break;
    case 50: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 50 ){
            if( isTokenActive( 163, tk_row ) ){
                l.setToken( 163, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            } else if( isTokenActive( 140, tk_row ) && token_production( l, 67129368, 177, 140, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 140, l.byte_length, l.token_length )
            } else if( isTokenActive( 5, tk_row ) && l.isNum(  ) && l.byte_length  > 1 ){
                l._type  = 5
            }
        }
    }
    break;
    case 51: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 51 ){
            if( isTokenActive( 164, tk_row ) ){
                l.setToken( 164, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            } else if( isTokenActive( 140, tk_row ) && token_production( l, 67129368, 177, 140, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 140, l.byte_length, l.token_length )
            } else if( isTokenActive( 5, tk_row ) && l.isNum(  ) && l.byte_length  > 1 ){
                l._type  = 5
            }
        }
    }
    break;
    case 52: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 52 ){
            if( isTokenActive( 165, tk_row ) ){
                l.setToken( 165, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            } else if( isTokenActive( 140, tk_row ) && token_production( l, 67129368, 177, 140, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 140, l.byte_length, l.token_length )
            } else if( isTokenActive( 5, tk_row ) && l.isNum(  ) && l.byte_length  > 1 ){
                l._type  = 5
            }
        }
    }
    break;
    case 53: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 53 ){
            if( isTokenActive( 166, tk_row ) ){
                l.setToken( 166, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            } else if( isTokenActive( 140, tk_row ) && token_production( l, 67129368, 177, 140, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 140, l.byte_length, l.token_length )
            } else if( isTokenActive( 5, tk_row ) && l.isNum(  ) && l.byte_length  > 1 ){
                l._type  = 5
            }
        }
    }
    break;
    case 54: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 54 ){
            if( isTokenActive( 167, tk_row ) ){
                l.setToken( 167, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            } else if( isTokenActive( 140, tk_row ) && token_production( l, 67129368, 177, 140, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 140, l.byte_length, l.token_length )
            } else if( isTokenActive( 5, tk_row ) && l.isNum(  ) && l.byte_length  > 1 ){
                l._type  = 5
            }
        }
    }
    break;
    case 55: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 55 ){
            if( isTokenActive( 162, tk_row ) ){
                l.setToken( 162, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            } else if( isTokenActive( 140, tk_row ) && token_production( l, 67129368, 177, 140, 64, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 140, l.byte_length, l.token_length )
            } else if( isTokenActive( 5, tk_row ) && l.isNum(  ) && l.byte_length  > 1 ){
                l._type  = 5
            }
        }
    }
    break;
    case 58: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 58 ){
            if( isTokenActive( 41, tk_row ) ){
                l.setToken( 41, 1, 1 )
            }
        }
    }
    break;
    case 59: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 59 ){
            if( isTokenActive( 21, tk_row ) ){
                l.setToken( 21, 1, 1 )
            }
        }
    }
    break;
    case 60: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 60 ){
            if( isTokenActive( 95, tk_row ) ){
                l.setToken( 95, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 60 ){
                if( isTokenActive( 100, tk_row ) ){
                    l.setToken( 100, 2, 2 )
                };
                if( l.get_byte_at( l.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 74, tk_row ) ){
                        l.setToken( 74, 3, 3 )
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 97, tk_row ) ){
                    l.setToken( 97, 2, 2 )
                }
            }
        }
    }
    break;
    case 61: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 61 ){
            if( isTokenActive( 68, tk_row ) ){
                l.setToken( 68, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 91, tk_row ) ){
                    l.setToken( 91, 2, 2 )
                };
                if( l.get_byte_at( l.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 93, tk_row ) ){
                        l.setToken( 93, 3, 3 )
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 62 ){
                if( isTokenActive( 51, tk_row ) ){
                    l.setToken( 51, 2, 2 )
                }
            }
        }
    }
    break;
    case 62: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 62 ){
            if( isTokenActive( 96, tk_row ) ){
                l.setToken( 96, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 62 ){
                if( isTokenActive( 101, tk_row ) ){
                    l.setToken( 101, 2, 2 )
                };
                if( l.get_byte_at( l.byte_offset  + 2 ) == 62 ){
                    if( isTokenActive( 102, tk_row ) ){
                        l.setToken( 102, 3, 3 )
                    };
                    if( l.get_byte_at( l.byte_offset  + 3 ) == 61 ){
                        if( isTokenActive( 76, tk_row ) ){
                            l.setToken( 76, 4, 4 )
                        }
                    }
                } else if( l.get_byte_at( l.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 75, tk_row ) ){
                        l.setToken( 75, 3, 3 )
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 98, tk_row ) ){
                    l.setToken( 98, 2, 2 )
                }
            }
        }
    }
    break;
    case 63: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 63 ){
            if( isTokenActive( 84, tk_row ) ){
                l.setToken( 84, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 63 ){
                if( isTokenActive( 87, tk_row ) ){
                    l.setToken( 87, 2, 2 )
                };
                if( l.get_byte_at( l.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 81, tk_row ) ){
                        l.setToken( 81, 3, 3 )
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 46 ){
                if( isTokenActive( 66, tk_row ) ){
                    l.setToken( 66, 2, 2 )
                }
            }
        }
    }
    break;
    case 65: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 65 ){
            if( isTokenActive( 156, tk_row ) ){
                l.setToken( 156, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 136, l.byte_length, l.token_length )
            } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 139, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            }
        }
    }
    break;
    case 66: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 66 ){
            if( isTokenActive( 157, tk_row ) ){
                l.setToken( 157, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 136, l.byte_length, l.token_length )
            } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 139, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            }
        }
    }
    break;
    case 67: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 67 ){
            if( isTokenActive( 158, tk_row ) ){
                l.setToken( 158, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 136, l.byte_length, l.token_length )
            } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 139, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            }
        }
    }
    break;
    case 68: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 68 ){
            if( isTokenActive( 159, tk_row ) ){
                l.setToken( 159, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 136, l.byte_length, l.token_length )
            } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 139, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            }
        }
    }
    break;
    case 69: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 69 ){
            if( isTokenActive( 141, tk_row ) ){
                l.setToken( 141, 1, 1 )
            };
            if( isTokenActive( 148, tk_row ) ){
                l.setToken( 148, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 136, l.byte_length, l.token_length )
            } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 139, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            }
        }
    }
    break;
    case 70: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 70 ){
            if( isTokenActive( 150, tk_row ) ){
                l.setToken( 150, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 136, l.byte_length, l.token_length )
            } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 139, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            }
        }
    }
    break;
    case 91: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 91 ){
            if( isTokenActive( 59, tk_row ) ){
                l.setToken( 59, 1, 1 )
            }
        }
    }
    break;
    case 92: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 92 ){
            if( isTokenActive( 121, tk_row ) ){
                l.setToken( 121, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 47 ){
                if( isTokenActive( 147, tk_row ) ){
                    l.setToken( 147, 2, 2 )
                }
            }
        }
    }
    break;
    case 93: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 93 ){
            if( isTokenActive( 60, tk_row ) ){
                l.setToken( 60, 1, 1 )
            }
        }
    }
    break;
    case 94: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 94 ){
            if( isTokenActive( 89, tk_row ) ){
                l.setToken( 89, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 78, tk_row ) ){
                    l.setToken( 78, 2, 2 )
                }
            }
        }
    }
    break;
    case 95: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 95 ){
            if( isTokenActive( 137, tk_row ) ){
                l.setToken( 137, 1, 1 )
            };
            if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 136, l.byte_length, l.token_length )
            } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 139, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            }
        }
    }
    break;
    case 96: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 96 ){
            if( isTokenActive( 117, tk_row ) ){
                l.setToken( 117, 1, 1 )
            }
        }
    }
    break;
    case 97: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 97 ){
            if( isTokenActive( 151, tk_row ) ){
                l.setToken( 151, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 136, l.byte_length, l.token_length )
            } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 139, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 119 ){
                if( 3 == compare( l, l.byte_offset  + 2, 85, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 30, tk_row ) ){
                        l.setToken( 30, 5, 5 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 115 ){
                if( isTokenActive( 17, tk_row ) ){
                    l.setToken( 17, 2, 2 )
                };
                if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 118, l.byte_length, l.token_length )
                } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 123, l.byte_length, l.token_length )
                } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 125, l.byte_length, l.token_length )
                } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 136, l.byte_length, l.token_length )
                } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 139, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 2 ){
                    l._type  = 3
                };
                if( l.get_byte_at( l.byte_offset  + 2 ) == 121 ){
                    if( 2 == compare( l, l.byte_offset  + 3, 199, 2, token_sequence_lookup ) ){
                        if( isTokenActive( 47, tk_row ) ){
                            l.setToken( 47, 5, 5 )
                        };
                        if( isTokenActive( 56, tk_row ) ){
                            l.setToken( 56, 5, 5 )
                        };
                        if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 118, l.byte_length, l.token_length )
                        } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 123, l.byte_length, l.token_length )
                        } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 125, l.byte_length, l.token_length )
                        } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 136, l.byte_length, l.token_length )
                        } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 139, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                            l._type  = 3
                        }
                    }
                }
            }
        }
    }
    break;
    case 98: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 98 ){
            if( isTokenActive( 152, tk_row ) ){
                l.setToken( 152, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 136, l.byte_length, l.token_length )
            } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 139, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 114 ){
                if( 3 == compare( l, l.byte_offset  + 2, 114, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 35, tk_row ) ){
                        l.setToken( 35, 5, 5 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                        l._type  = 3
                    }
                }
            }
        }
    }
    break;
    case 99: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 99 ){
            if( isTokenActive( 153, tk_row ) ){
                l.setToken( 153, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 136, l.byte_length, l.token_length )
            } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 139, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 111 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 110 ){
                    if( l.get_byte_at( l.byte_offset  + 3 ) == 116 ){
                        if( 4 == compare( l, l.byte_offset  + 4, 105, 4, token_sequence_lookup ) ){
                            if( isTokenActive( 34, tk_row ) ){
                                l.setToken( 34, 8, 8 )
                            };
                            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 118, l.byte_length, l.token_length )
                            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 123, l.byte_length, l.token_length )
                            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 125, l.byte_length, l.token_length )
                            } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 136, l.byte_length, l.token_length )
                            } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 139, l.byte_length, l.token_length )
                            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 8 ){
                                l.setToken( 146, l.byte_length, l.token_length )
                            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 8 ){
                                l._type  = 3
                            }
                        }
                    } else if( l.get_byte_at( l.byte_offset  + 3 ) == 115 ){
                        if( l.get_byte_at( l.byte_offset  + 4 ) == 116 ){
                            if( isTokenActive( 32, tk_row ) ){
                                l.setToken( 32, 5, 5 )
                            };
                            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 118, l.byte_length, l.token_length )
                            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 123, l.byte_length, l.token_length )
                            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 125, l.byte_length, l.token_length )
                            } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 136, l.byte_length, l.token_length )
                            } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 139, l.byte_length, l.token_length )
                            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                                l.setToken( 146, l.byte_length, l.token_length )
                            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                                l._type  = 3
                            }
                        }
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 97 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 116 ){
                    if( 2 == compare( l, l.byte_offset  + 3, 273, 2, token_sequence_lookup ) ){
                        if( isTokenActive( 43, tk_row ) ){
                            l.setToken( 43, 5, 5 )
                        };
                        if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 118, l.byte_length, l.token_length )
                        } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 123, l.byte_length, l.token_length )
                        } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 125, l.byte_length, l.token_length )
                        } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 136, l.byte_length, l.token_length )
                        } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 139, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                            l._type  = 3
                        }
                    }
                } else if( l.get_byte_at( l.byte_offset  + 2 ) == 115 ){
                    if( l.get_byte_at( l.byte_offset  + 3 ) == 101 ){
                        if( isTokenActive( 40, tk_row ) ){
                            l.setToken( 40, 4, 4 )
                        };
                        if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 118, l.byte_length, l.token_length )
                        } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 123, l.byte_length, l.token_length )
                        } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 125, l.byte_length, l.token_length )
                        } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 136, l.byte_length, l.token_length )
                        } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 139, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 4 ){
                            l._type  = 3
                        }
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 108 ){
                if( 3 == compare( l, l.byte_offset  + 2, 277, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 52, tk_row ) ){
                        l.setToken( 52, 5, 5 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                        l._type  = 3
                    }
                }
            }
        }
    }
    break;
    case 100: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 100 ){
            if( isTokenActive( 154, tk_row ) ){
                l.setToken( 154, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 136, l.byte_length, l.token_length )
            } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 139, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 101 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 98 ){
                    if( 5 == compare( l, l.byte_offset  + 3, 78, 5, token_sequence_lookup ) ){
                        if( isTokenActive( 45, tk_row ) ){
                            l.setToken( 45, 8, 8 )
                        };
                        if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 8 ){
                            l.setToken( 118, l.byte_length, l.token_length )
                        } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 8 ){
                            l.setToken( 123, l.byte_length, l.token_length )
                        } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 8 ){
                            l.setToken( 125, l.byte_length, l.token_length )
                        } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 8 ){
                            l.setToken( 136, l.byte_length, l.token_length )
                        } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 8 ){
                            l.setToken( 139, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 8 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 8 ){
                            l._type  = 3
                        }
                    }
                } else if( l.get_byte_at( l.byte_offset  + 2 ) == 102 ){
                    if( 4 == compare( l, l.byte_offset  + 3, 192, 4, token_sequence_lookup ) ){
                        if( isTokenActive( 15, tk_row ) ){
                            l.setToken( 15, 7, 7 )
                        };
                        if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 118, l.byte_length, l.token_length )
                        } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 123, l.byte_length, l.token_length )
                        } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 125, l.byte_length, l.token_length )
                        } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 136, l.byte_length, l.token_length )
                        } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 139, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 7 ){
                            l._type  = 3
                        }
                    }
                } else if( l.get_byte_at( l.byte_offset  + 2 ) == 108 ){
                    if( 3 == compare( l, l.byte_offset  + 3, 253, 3, token_sequence_lookup ) ){
                        if( isTokenActive( 108, tk_row ) ){
                            l.setToken( 108, 6, 6 )
                        };
                        if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 118, l.byte_length, l.token_length )
                        } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 123, l.byte_length, l.token_length )
                        } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 125, l.byte_length, l.token_length )
                        } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 136, l.byte_length, l.token_length )
                        } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 139, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 6 ){
                            l._type  = 3
                        }
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 111 ){
                if( isTokenActive( 26, tk_row ) ){
                    l.setToken( 26, 2, 2 )
                };
                if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 118, l.byte_length, l.token_length )
                } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 123, l.byte_length, l.token_length )
                } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 125, l.byte_length, l.token_length )
                } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 136, l.byte_length, l.token_length )
                } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 139, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 2 ){
                    l._type  = 3
                }
            }
        }
    }
    break;
    case 101: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 101 ){
            if( isTokenActive( 142, tk_row ) ){
                l.setToken( 142, 1, 1 )
            };
            if( isTokenActive( 149, tk_row ) ){
                l.setToken( 149, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 136, l.byte_length, l.token_length )
            } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 139, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 120 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 116 ){
                    if( 4 == compare( l, l.byte_offset  + 3, 71, 4, token_sequence_lookup ) ){
                        if( isTokenActive( 53, tk_row ) ){
                            l.setToken( 53, 7, 7 )
                        };
                        if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 118, l.byte_length, l.token_length )
                        } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 123, l.byte_length, l.token_length )
                        } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 125, l.byte_length, l.token_length )
                        } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 136, l.byte_length, l.token_length )
                        } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 139, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 7 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 7 ){
                            l._type  = 3
                        }
                    }
                } else if( l.get_byte_at( l.byte_offset  + 2 ) == 112 ){
                    if( 3 == compare( l, l.byte_offset  + 3, 186, 3, token_sequence_lookup ) ){
                        if( isTokenActive( 14, tk_row ) ){
                            l.setToken( 14, 6, 6 )
                        };
                        if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 118, l.byte_length, l.token_length )
                        } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 123, l.byte_length, l.token_length )
                        } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 125, l.byte_length, l.token_length )
                        } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 136, l.byte_length, l.token_length )
                        } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 139, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 6 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 6 ){
                            l._type  = 3
                        }
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 108 ){
                if( 2 == compare( l, l.byte_offset  + 2, 248, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 25, tk_row ) ){
                        l.setToken( 25, 4, 4 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 4 ){
                        l._type  = 3
                    }
                }
            }
        }
    }
    break;
    case 102: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 102 ){
            if( isTokenActive( 155, tk_row ) ){
                l.setToken( 155, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 136, l.byte_length, l.token_length )
            } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 139, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 117 ){
                if( 6 == compare( l, l.byte_offset  + 2, 90, 6, token_sequence_lookup ) ){
                    if( isTokenActive( 48, tk_row ) ){
                        l.setToken( 48, 8, 8 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 8 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 8 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 8 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 8 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 8 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 8 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 8 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 105 ){
                if( 5 == compare( l, l.byte_offset  + 2, 203, 5, token_sequence_lookup ) ){
                    if( isTokenActive( 44, tk_row ) ){
                        l.setToken( 44, 7, 7 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 7 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 7 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 7 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 7 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 7 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 7 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 7 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 97 ){
                if( 3 == compare( l, l.byte_offset  + 2, 260, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 135, tk_row ) ){
                        l.setToken( 135, 5, 5 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 114 ){
                if( 2 == compare( l, l.byte_offset  + 2, 265, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 20, tk_row ) ){
                        l.setToken( 20, 4, 4 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 4 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 111 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 114 ){
                    if( isTokenActive( 28, tk_row ) ){
                        l.setToken( 28, 3, 3 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 3 ){
                        l._type  = 3
                    }
                }
            }
        }
    }
    break;
    case 103: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 103 ){
            if( 2 == compare( l, l.byte_offset  + 1, 127, 2, token_sequence_lookup ) ){
                if( isTokenActive( 57, tk_row ) ){
                    l.setToken( 57, 3, 3 )
                };
                if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 118, l.byte_length, l.token_length )
                } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 123, l.byte_length, l.token_length )
                } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 125, l.byte_length, l.token_length )
                } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 136, l.byte_length, l.token_length )
                } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 139, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 3 ){
                    l._type  = 3
                }
            }
        }
    }
    break;
    case 105: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 105 ){
            if( l.get_byte_at( l.byte_offset  + 1 ) == 110 ){
                if( isTokenActive( 29, tk_row ) ){
                    l.setToken( 29, 2, 2 )
                };
                if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 118, l.byte_length, l.token_length )
                } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 123, l.byte_length, l.token_length )
                } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 125, l.byte_length, l.token_length )
                } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 136, l.byte_length, l.token_length )
                } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 139, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 2 ){
                    l._type  = 3
                };
                if( l.get_byte_at( l.byte_offset  + 2 ) == 115 ){
                    if( 7 == compare( l, l.byte_offset  + 3, 61, 7, token_sequence_lookup ) ){
                        if( isTokenActive( 99, tk_row ) ){
                            l.setToken( 99, 10, 10 )
                        };
                        if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 10 ){
                            l.setToken( 118, l.byte_length, l.token_length )
                        } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 10 ){
                            l.setToken( 123, l.byte_length, l.token_length )
                        } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 10 ){
                            l.setToken( 125, l.byte_length, l.token_length )
                        } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 10 ){
                            l.setToken( 136, l.byte_length, l.token_length )
                        } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 10 ){
                            l.setToken( 139, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 10 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 10 ){
                            l._type  = 3
                        }
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 109 ){
                if( 4 == compare( l, l.byte_offset  + 2, 179, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 12, tk_row ) ){
                        l.setToken( 12, 6, 6 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 6 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 102 ){
                if( isTokenActive( 22, tk_row ) ){
                    l.setToken( 22, 2, 2 )
                };
                if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 118, l.byte_length, l.token_length )
                } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 123, l.byte_length, l.token_length )
                } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 125, l.byte_length, l.token_length )
                } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 136, l.byte_length, l.token_length )
                } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 139, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 2 ){
                    l._type  = 3
                }
            }
        }
    }
    break;
    case 108: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 108 ){
            if( 2 == compare( l, l.byte_offset  + 1, 110, 2, token_sequence_lookup ) ){
                if( isTokenActive( 33, tk_row ) ){
                    l.setToken( 33, 3, 3 )
                };
                if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 118, l.byte_length, l.token_length )
                } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 123, l.byte_length, l.token_length )
                } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 125, l.byte_length, l.token_length )
                } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 136, l.byte_length, l.token_length )
                } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 139, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 3 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 3 ){
                    l._type  = 3
                }
            }
        }
    }
    break;
    case 109: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 109 ){
            if( 3 == compare( l, l.byte_offset  + 1, 149, 3, token_sequence_lookup ) ){
                if( isTokenActive( 64, tk_row ) ){
                    l.setToken( 64, 4, 4 )
                };
                if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 4 ){
                    l.setToken( 118, l.byte_length, l.token_length )
                } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 4 ){
                    l.setToken( 123, l.byte_length, l.token_length )
                } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 4 ){
                    l.setToken( 125, l.byte_length, l.token_length )
                } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 4 ){
                    l.setToken( 136, l.byte_length, l.token_length )
                } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 4 ){
                    l.setToken( 139, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 4 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 4 ){
                    l._type  = 3
                }
            }
        }
    }
    break;
    case 110: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 110 ){
            if( isTokenActive( 126, tk_row ) ){
                l.setToken( 126, 1, 1 )
            };
            if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 118, l.byte_length, l.token_length )
            } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 123, l.byte_length, l.token_length )
            } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 125, l.byte_length, l.token_length )
            } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 136, l.byte_length, l.token_length )
            } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 139, l.byte_length, l.token_length )
            } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 1 ){
                l.setToken( 146, l.byte_length, l.token_length )
            } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 1 ){
                l._type  = 3
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 117 ){
                if( 2 == compare( l, l.byte_offset  + 2, 146, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 133, tk_row ) ){
                        l.setToken( 133, 4, 4 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 4 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 101 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 119 ){
                    if( isTokenActive( 62, tk_row ) ){
                        l.setToken( 62, 3, 3 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 3 ){
                        l._type  = 3
                    }
                }
            }
        }
    }
    break;
    case 111: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 111 ){
            if( l.get_byte_at( l.byte_offset  + 1 ) == 102 ){
                if( isTokenActive( 31, tk_row ) ){
                    l.setToken( 31, 2, 2 )
                };
                if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 118, l.byte_length, l.token_length )
                } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 123, l.byte_length, l.token_length )
                } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 125, l.byte_length, l.token_length )
                } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 136, l.byte_length, l.token_length )
                } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 139, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 2 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 2 ){
                    l._type  = 3
                }
            }
        }
    }
    break;
    case 114: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 114 ){
            if( 5 == compare( l, l.byte_offset  + 1, 118, 5, token_sequence_lookup ) ){
                if( isTokenActive( 36, tk_row ) ){
                    l.setToken( 36, 6, 6 )
                };
                if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 6 ){
                    l.setToken( 118, l.byte_length, l.token_length )
                } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 6 ){
                    l.setToken( 123, l.byte_length, l.token_length )
                } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 6 ){
                    l.setToken( 125, l.byte_length, l.token_length )
                } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 6 ){
                    l.setToken( 136, l.byte_length, l.token_length )
                } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 6 ){
                    l.setToken( 139, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 6 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 6 ){
                    l._type  = 3
                }
            }
        }
    }
    break;
    case 115: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 115 ){
            if( l.get_byte_at( l.byte_offset  + 1 ) == 119 ){
                if( 4 == compare( l, l.byte_offset  + 2, 131, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 39, tk_row ) ){
                        l.setToken( 39, 6, 6 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 6 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 116 ){
                if( 4 == compare( l, l.byte_offset  + 2, 224, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 54, tk_row ) ){
                        l.setToken( 54, 6, 6 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 6 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 117 ){
                if( 3 == compare( l, l.byte_offset  + 2, 302, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 63, tk_row ) ){
                        l.setToken( 63, 5, 5 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 101 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 116 ){
                    if( isTokenActive( 58, tk_row ) ){
                        l.setToken( 58, 3, 3 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 3 ){
                        l._type  = 3
                    }
                }
            }
        }
    }
    break;
    case 116: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 116 ){
            if( l.get_byte_at( l.byte_offset  + 1 ) == 97 ){
                if( 4 == compare( l, l.byte_offset  + 2, 125, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 65, tk_row ) ){
                        l.setToken( 65, 6, 6 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 6 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 121 ){
                if( 4 == compare( l, l.byte_offset  + 2, 218, 4, token_sequence_lookup ) ){
                    if( isTokenActive( 110, tk_row ) ){
                        l.setToken( 110, 6, 6 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 6 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 6 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 104 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 114 ){
                    if( 2 == compare( l, l.byte_offset  + 3, 287, 2, token_sequence_lookup ) ){
                        if( isTokenActive( 37, tk_row ) ){
                            l.setToken( 37, 5, 5 )
                        };
                        if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 118, l.byte_length, l.token_length )
                        } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 123, l.byte_length, l.token_length )
                        } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 125, l.byte_length, l.token_length )
                        } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 136, l.byte_length, l.token_length )
                        } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 139, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                            l._type  = 3
                        }
                    }
                } else if( l.get_byte_at( l.byte_offset  + 2 ) == 105 ){
                    if( l.get_byte_at( l.byte_offset  + 3 ) == 115 ){
                        if( isTokenActive( 67, tk_row ) ){
                            l.setToken( 67, 4, 4 )
                        };
                        if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 118, l.byte_length, l.token_length )
                        } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 123, l.byte_length, l.token_length )
                        } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 125, l.byte_length, l.token_length )
                        } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 136, l.byte_length, l.token_length )
                        } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 139, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 4 ){
                            l._type  = 3
                        }
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 114 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 117 ){
                    if( l.get_byte_at( l.byte_offset  + 3 ) == 101 ){
                        if( isTokenActive( 134, tk_row ) ){
                            l.setToken( 134, 4, 4 )
                        };
                        if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 118, l.byte_length, l.token_length )
                        } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 123, l.byte_length, l.token_length )
                        } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 125, l.byte_length, l.token_length )
                        } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 136, l.byte_length, l.token_length )
                        } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 139, l.byte_length, l.token_length )
                        } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 4 ){
                            l.setToken( 146, l.byte_length, l.token_length )
                        } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 4 ){
                            l._type  = 3
                        }
                    }
                } else if( l.get_byte_at( l.byte_offset  + 2 ) == 121 ){
                    if( isTokenActive( 42, tk_row ) ){
                        l.setToken( 42, 3, 3 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 3 ){
                        l._type  = 3
                    }
                }
            }
        }
    }
    break;
    case 118: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 118 ){
            if( l.get_byte_at( l.byte_offset  + 1 ) == 111 ){
                if( 2 == compare( l, l.byte_offset  + 2, 137, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 109, tk_row ) ){
                        l.setToken( 109, 4, 4 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 4 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 97 ){
                if( l.get_byte_at( l.byte_offset  + 2 ) == 114 ){
                    if( isTokenActive( 46, tk_row ) ){
                        l.setToken( 46, 3, 3 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 3 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 3 ){
                        l._type  = 3
                    }
                }
            }
        }
    }
    break;
    case 119: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 119 ){
            if( l.get_byte_at( l.byte_offset  + 1 ) == 104 ){
                if( 3 == compare( l, l.byte_offset  + 2, 98, 3, token_sequence_lookup ) ){
                    if( isTokenActive( 27, tk_row ) ){
                        l.setToken( 27, 5, 5 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                        l._type  = 3
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 105 ){
                if( 2 == compare( l, l.byte_offset  + 2, 210, 2, token_sequence_lookup ) ){
                    if( isTokenActive( 38, tk_row ) ){
                        l.setToken( 38, 4, 4 )
                    };
                    if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 118, l.byte_length, l.token_length )
                    } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 123, l.byte_length, l.token_length )
                    } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 125, l.byte_length, l.token_length )
                    } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 136, l.byte_length, l.token_length )
                    } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 139, l.byte_length, l.token_length )
                    } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 4 ){
                        l.setToken( 146, l.byte_length, l.token_length )
                    } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 4 ){
                        l._type  = 3
                    }
                }
            }
        }
    }
    break;
    case 121: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 121 ){
            if( 4 == compare( l, l.byte_offset  + 1, 140, 4, token_sequence_lookup ) ){
                if( isTokenActive( 50, tk_row ) ){
                    l.setToken( 50, 5, 5 )
                };
                if( isTokenActive( 118, tk_row ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) && l.byte_length  > 5 ){
                    l.setToken( 118, l.byte_length, l.token_length )
                } else if( isTokenActive( 123, tk_row ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) && l.byte_length  > 5 ){
                    l.setToken( 123, l.byte_length, l.token_length )
                } else if( isTokenActive( 125, tk_row ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) && l.byte_length  > 5 ){
                    l.setToken( 125, l.byte_length, l.token_length )
                } else if( isTokenActive( 136, tk_row ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) && l.byte_length  > 5 ){
                    l.setToken( 136, l.byte_length, l.token_length )
                } else if( isTokenActive( 139, tk_row ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) && l.byte_length  > 5 ){
                    l.setToken( 139, l.byte_length, l.token_length )
                } else if( isTokenActive( 146, tk_row ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) && l.byte_length  > 5 ){
                    l.setToken( 146, l.byte_length, l.token_length )
                } else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) && l.byte_length  > 5 ){
                    l._type  = 3
                }
            }
        }
    }
    break;
    case 123: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 123 ){
            if( isTokenActive( 18, tk_row ) ){
                l.setToken( 18, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 125 ){
                if( isTokenActive( 115, tk_row ) ){
                    l.setToken( 115, 2, 2 )
                }
            }
        }
    }
    break;
    case 124: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 124 ){
            if( isTokenActive( 88, tk_row ) ){
                l.setToken( 88, 1, 1 )
            };
            if( l.get_byte_at( l.byte_offset  + 1 ) == 124 ){
                if( isTokenActive( 85, tk_row ) ){
                    l.setToken( 85, 2, 2 )
                };
                if( l.get_byte_at( l.byte_offset  + 2 ) == 61 ){
                    if( isTokenActive( 83, tk_row ) ){
                        l.setToken( 83, 3, 3 )
                    }
                }
            } else if( l.get_byte_at( l.byte_offset  + 1 ) == 61 ){
                if( isTokenActive( 79, tk_row ) ){
                    l.setToken( 79, 2, 2 )
                }
            }
        }
    }
    break;
    case 125: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 125 ){
            if( isTokenActive( 19, tk_row ) ){
                l.setToken( 19, 1, 1 )
            }
        }
    }
    break;
    case 126: 
    {
        if( l.get_byte_at( l.byte_offset  ) == 126 ){
            if( isTokenActive( 111, tk_row ) ){
                l.setToken( 111, 1, 1 )
            }
        }
    }
    break;
    default: 
    break
};
    if( ( ( l._type ) > 0 ) )return;;
    if( isTokenActive( 118, tk_row ) && pre_scan( l, 272 ) && token_production( l, 67128321, 146, 118, 1, states_buffer, scan ) ){
    l.setToken( 118, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 120, tk_row ) && pre_scan( l, 284 ) && token_production( l, 67128578, 3, 120, 2, states_buffer, scan ) ){
    l.setToken( 120, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 123, tk_row ) && pre_scan( l, 290 ) && token_production( l, 67128664, 152, 123, 4, states_buffer, scan ) ){
    l.setToken( 123, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 125, tk_row ) && pre_scan( l, 290 ) && token_production( l, 67129007, 151, 125, 8, states_buffer, scan ) ){
    l.setToken( 125, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 136, tk_row ) && pre_scan( l, 294 ) && token_production( l, 67129084, 171, 136, 16, states_buffer, scan ) ){
    l.setToken( 136, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 139, tk_row ) && pre_scan( l, 294 ) && token_production( l, 67129296, 173, 139, 32, states_buffer, scan ) ){
    l.setToken( 139, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 140, tk_row ) && pre_scan( l, 278 ) && token_production( l, 67129368, 177, 140, 64, states_buffer, scan ) ){
    l.setToken( 140, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 143, tk_row ) && pre_scan( l, 301 ) && token_production( l, 67129406, 180, 143, 128, states_buffer, scan ) ){
    l.setToken( 143, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 144, tk_row ) && pre_scan( l, 303 ) && token_production( l, 67129449, 182, 144, 256, states_buffer, scan ) ){
    l.setToken( 144, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 145, tk_row ) && pre_scan( l, 322 ) && token_production( l, 67129760, 184, 145, 512, states_buffer, scan ) ){
    l.setToken( 145, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 146, tk_row ) && pre_scan( l, 294 ) && token_production( l, 67129795, 186, 146, 1024, states_buffer, scan ) ){
    l.setToken( 146, l.byte_length, l.token_length );
    return
} else if( isTokenActive( 0, tk_row ) && false ){
    l._type  = 0;
    return
} else if( isTokenActive( 8, tk_row ) && l.isSP( true ) ){
    l._type  = 8;
    return
} else if( isTokenActive( 3, tk_row ) && l.isUniID(  ) ){
    l._type  = 3;
    return
} else if( isTokenActive( 2, tk_row ) && l.isSym( true ) ){
    l._type  = 2;
    return
} else if( isTokenActive( 7, tk_row ) && l.isNL(  ) ){
    l._type  = 7;
    return
} else if( isTokenActive( 5, tk_row ) && l.isNum(  ) ){
    l._type  = 5;
    return
}
}

function scan(l, token, skip){
    if( ( ( l._type ) <= 0 ) )scan_core( l, token );;
    if( ( skip  > 0 && isTokenActive( l._type, skip ) ) ){
    while( ( isTokenActive( l._type, skip ) ) ) {
            l.next(  );
            scan_core( l, token )
        }
}
}

const js_parser_pack = {

    init_table: () => {
        const table = new Uint8Array(382976);
        init_table(table);
        return table;
    },

    create_iterator: (data) => {
        return new KernelStateIterator(data);
    },

    recognize: (string, entry_index) => {

        const temp_buffer = new Uint8Array((string.length+1) * 4);

        const actual_length = fillByteBufferWithUTF8FromString(string, temp_buffer, temp_buffer.length);

        const input_buffer = new Uint8Array(temp_buffer.buffer, 0, actual_length);

        let entry_pointer = 0;

        switch(entry_index){

            case 0: default:  entry_pointer = 67110509; break;

            case 1:  entry_pointer = 67111466; break;

            case 2:  entry_pointer = 67120120; break;
        }
        
        return run(
            states_buffer,
            input_buffer,
            input_buffer.length,
            entry_pointer,
            scan,
            false
        );
    }
};


const reduce_functions = [(_,s)=>s[s.length-1], (env, sym, pos)=> ({type:(env.IS_MODULE)?env.typ.Module:env.typ.Script,nodes:sym[0]||[],pos}) /*0*/,
(env, sym, pos)=> ({type:env.typ.Script,nodes:sym[0],pos}) /*1*/,
(env, sym, pos)=> ([sym[0]]) /*2*/,
(env, sym, pos)=> ((sym[0].push(sym[1]),sym[0])) /*3*/,
(env, sym, pos)=> (env.IS_MODULE=true,sym[0]) /*4*/,
(env, sym, pos)=> ({type:env.typ.ImportDeclaration,nodes:[sym[1],sym[2]],pos}) /*5*/,
(env, sym, pos)=> ({type:env.typ.ImportDeclaration,nodes:[sym[1]],pos}) /*6*/,
(env, sym, pos)=> ({type:env.typ.ImportClause,nodes:[sym[0]],pos}) /*7*/,
(env, sym, pos)=> ({type:env.typ.ImportClause,nodes:[sym[0],sym[2]],pos}) /*8*/,
(env, sym, pos)=> (sym[0].type=env.typ.IdentifierDefault,sym[0]) /*9*/,
(env, sym, pos)=> ({type:env.typ.ExportDeclaration,nodes:[sym[1],sym[2]],DEFAULT:false,pos}) /*10*/,
(env, sym, pos)=> ({type:env.typ.ExportDeclaration,nodes:[sym[1]],DEFAULT:false,pos}) /*11*/,
(env, sym, pos)=> ({type:env.typ.ExportDeclaration,nodes:[sym[2]],DEFAULT:true,pos}) /*12*/,
(env, sym, pos)=> (null) /*13*/,
(env, sym, pos)=> ({type:env.typ.NameSpace,nodes:[sym[2]],pos}) /*14*/,
(env, sym, pos)=> ({type:env.typ.Specifiers,nodes:sym[1]||[],pos}) /*15*/,
(env, sym, pos)=> ({type:env.typ.Specifiers,nodes:null||[],pos}) /*16*/,
(env, sym, pos)=> ({type:env.typ.FromClause,nodes:[sym[1]],pos}) /*17*/,
(env, sym, pos)=> ({type:env.typ.Specifier,nodes:[sym[0]],pos}) /*18*/,
(env, sym, pos)=> ({type:env.typ.Specifier,nodes:[sym[0],sym[2]],pos}) /*19*/,
(env, sym, pos)=> (sym[0].type=env.typ.IdentifierModule,sym[0]) /*20*/,
(env, sym, pos)=> ([...sym[0],sym[1]]) /*21*/,
(env, sym, pos)=> ({type:env.typ.BlockStatement,nodes:sym[1]||[],pos}) /*22*/,
(env, sym, pos)=> ({type:env.typ.BlockStatement,nodes:null||[],pos}) /*23*/,
(env, sym, pos)=> ({type:env.typ.EmptyStatement,pos}) /*24*/,
(env, sym, pos)=> ({type:env.typ.ExpressionStatement,nodes:[sym[0]],pos}) /*25*/,
(env, sym, pos)=> ({type:env.typ.IfStatement,nodes:[sym[2],sym[4],sym[6]],pos}) /*26*/,
(env, sym, pos)=> ({type:env.typ.IfStatement,nodes:[sym[2],sym[4],null],pos}) /*27*/,
(env, sym, pos)=> ({type:env.typ.DoStatement,nodes:[sym[1],sym[4]],pos}) /*28*/,
(env, sym, pos)=> ({type:env.typ.WhileStatement,nodes:[sym[2],sym[4]],pos}) /*29*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],sym[4],sym[6],sym[8]],LEX:false,pos}) /*30*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],sym[3],sym[5],sym[7]],LEX:true,pos}) /*31*/,
(env, sym, pos)=> ({type:env.typ.ForInStatement,nodes:[sym[2],sym[4],sym[6]],pos}) /*32*/,
(env, sym, pos)=> ({type:env.typ.ForOfStatement,nodes:[sym[3],sym[5],sym[7]],pos,AWAIT:!!sym[1]}) /*33*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[null,sym[3],sym[5],sym[7]],LEX:false,pos}) /*34*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],null,sym[5],sym[7]],LEX:false,pos}) /*35*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],sym[4],null,sym[7]],LEX:false,pos}) /*36*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],null,sym[4],sym[6]],LEX:true,pos}) /*37*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],sym[3],null,sym[6]],LEX:true,pos}) /*38*/,
(env, sym, pos)=> ({type:env.typ.ForOfStatement,nodes:[sym[2],sym[4],sym[6]],pos,AWAIT:!!null}) /*39*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[null,null,sym[4],sym[6]],LEX:false,pos}) /*40*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[null,sym[3],null,sym[6]],LEX:false,pos}) /*41*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],null,null,sym[6]],LEX:false,pos}) /*42*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[sym[2],null,null,sym[5]],LEX:true,pos}) /*43*/,
(env, sym, pos)=> ({type:env.typ.ForStatement,nodes:[null,null,null,sym[5]],LEX:false,pos}) /*44*/,
(env, sym, pos)=> ({type:env.typ.LexicalBinding,nodes:[sym[1]],symbol:sym[0],pos}) /*45*/,
(env, sym, pos)=> ({type:env.typ.ContinueStatement,nodes:sym[1]?[sym[1]]:[],pos}) /*46*/,
(env, sym, pos)=> ({type:env.typ.ContinueStatement,nodes:null?[null]:[],pos}) /*47*/,
(env, sym, pos)=> ({type:env.typ.BreakStatement,nodes:[sym[1]],pos}) /*48*/,
(env, sym, pos)=> ({type:env.typ.BreakStatement,nodes:[null],pos}) /*49*/,
(env, sym, pos)=> ({type:env.typ.ReturnStatement,nodes:[sym[1]],pos}) /*50*/,
(env, sym, pos)=> ({type:env.typ.ReturnStatement,nodes:[],pos}) /*51*/,
(env, sym, pos)=> ({type:env.typ.ThrowStatement,nodes:[sym[1]],pos}) /*52*/,
(env, sym, pos)=> ({type:env.typ.WithStatement,nodes:[sym[2],sym[4]],pos}) /*53*/,
(env, sym, pos)=> ({type:env.typ.SwitchStatement,nodes:[sym[2],sym[4]],pos}) /*54*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[...sym[1],sym[2],...sym[3]],pos}) /*55*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[sym[1],...sym[2]],pos}) /*56*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[...sym[1],...sym[2]],pos}) /*57*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[...sym[1],sym[2]],pos}) /*58*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[...sym[1]],pos}) /*59*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[sym[1]],pos}) /*60*/,
(env, sym, pos)=> ({type:env.typ.CaseBlock,nodes:[],pos}) /*61*/,
(env, sym, pos)=> ({type:env.typ.CaseClause,nodes:[sym[1],...sym[3]],pos}) /*62*/,
(env, sym, pos)=> ({type:env.typ.CaseClause,nodes:[sym[1]],pos}) /*63*/,
(env, sym, pos)=> ({type:env.typ.DefaultClause,nodes:[...sym[2]],pos}) /*64*/,
(env, sym, pos)=> ({type:env.typ.DefaultClause,nodes:[],pos}) /*65*/,
(env, sym, pos)=> ({type:env.typ.LabeledStatement,nodes:[sym[0],sym[2]],pos}) /*66*/,
(env, sym, pos)=> ({type:env.typ.TryStatement,nodes:[sym[1],sym[2],null],pos}) /*67*/,
(env, sym, pos)=> ({type:env.typ.TryStatement,nodes:[sym[1],null,sym[2]],pos}) /*68*/,
(env, sym, pos)=> ({type:env.typ.TryStatement,nodes:[sym[1],sym[2],sym[3]],pos}) /*69*/,
(env, sym, pos)=> ({type:env.typ.CatchClause,nodes:[sym[2],sym[4]],pos}) /*70*/,
(env, sym, pos)=> ({type:env.typ.FinallyClause,nodes:[sym[1]],pos}) /*71*/,
(env, sym, pos)=> ({type:env.typ.DebuggerStatement,pos}) /*72*/,
(env, sym, pos)=> ({type:env.typ.VariableStatement,nodes:sym[1],pos}) /*73*/,
(env, sym, pos)=> ((sym[0].push(sym[2]),sym[0])) /*74*/,
(env, sym, pos)=> ({type:env.typ.BindingExpression,symbol:"=",nodes:[sym[0],sym[1]],pos}) /*75*/,
(env, sym, pos)=> ({type:env.typ.LexicalDeclaration,symbol:sym[0],nodes:sym[1],pos}) /*76*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],sym[5],sym[8]],pos}) /*77*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],sym[4],sym[7]],pos}) /*78*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],sym[4],sym[7]],pos}) /*79*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],null,sym[7]],pos}) /*80*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],sym[5],null],pos}) /*81*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],sym[3],sym[6]],pos}) /*82*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],null,sym[6]],pos}) /*83*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],sym[4],null],pos}) /*84*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],null,sym[6]],pos}) /*85*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],sym[4],null],pos}) /*86*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],null,null],pos}) /*87*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],null,sym[5]],pos}) /*88*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],sym[3],null],pos}) /*89*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],null,null],pos}) /*90*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],null,null],pos}) /*91*/,
(env, sym, pos)=> ({type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],null,null],pos}) /*92*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],sym[5],sym[8]],pos}) /*93*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],sym[4],sym[7]],pos}) /*94*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],sym[4],sym[7]],pos}) /*95*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[null,sym[4],sym[7]],pos}) /*96*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],null,sym[7]],pos}) /*97*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],sym[5],null],pos}) /*98*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],sym[3],sym[6]],pos}) /*99*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[null,sym[3],sym[6]],pos}) /*100*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],null,sym[6]],pos}) /*101*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],sym[4],null],pos}) /*102*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[null,sym[3],sym[6]],pos}) /*103*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],null,sym[6]],pos}) /*104*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],sym[4],null],pos}) /*105*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[null,null,sym[6]],pos}) /*106*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[null,sym[4],null],pos}) /*107*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],null,null],pos}) /*108*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!null,nodes:[null,sym[2],sym[5]],pos}) /*109*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],null,sym[5]],pos}) /*110*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],sym[3],null],pos}) /*111*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[null,null,sym[5]],pos}) /*112*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[null,sym[3],null],pos}) /*113*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],null,null],pos}) /*114*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[null,null,sym[5]],pos}) /*115*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[null,sym[3],null],pos}) /*116*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],null,null],pos}) /*117*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[null,null,null],pos}) /*118*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!null,nodes:[null,null,sym[4]],pos}) /*119*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!null,nodes:[null,sym[2],null],pos}) /*120*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],null,null],pos}) /*121*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[null,null,null],pos}) /*122*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[null,null,null],pos}) /*123*/,
(env, sym, pos)=> ({type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!null,nodes:[null,null,null],pos}) /*124*/,
(env, sym, pos)=> ({type:env.typ.FormalParameters,nodes:[sym[0]],pos}) /*125*/,
(env, sym, pos)=> ({type:env.typ.FormalParameters,nodes:sym[0],pos}) /*126*/,
(env, sym, pos)=> ({type:env.typ.FormalParameters,nodes:[...sym[0],sym[2]],pos}) /*127*/,
(env, sym, pos)=> ({type:env.typ.FunctionBody,nodes:sym[0]||[],pos}) /*128*/,
(env, sym, pos)=> ({type:env.typ.YieldExpression,nodes:[],pos}) /*129*/,
(env, sym, pos)=> ({type:env.typ.YieldExpression,nodes:[sym[2]],pos,GENERATOR:!!sym[1]}) /*130*/,
(env, sym, pos)=> ({type:env.typ.YieldExpression,nodes:[sym[1]],pos,GENERATOR:!!null}) /*131*/,
(env, sym, pos)=> ({type:env.typ.ArrowFunction,ASYNC:!!sym[0],nodes:[sym[1],sym[3]],pos}) /*132*/,
(env, sym, pos)=> ({type:env.typ.ArrowFunction,ASYNC:!!null,nodes:[sym[0],sym[2]],pos}) /*133*/,
(env, sym, pos)=> (sym[0].type=env.typ.IdentifierBinding,sym[0]) /*134*/,
(env, sym, pos)=> env.functions.reinterpretArrowParameters (env, sym, pos)/*135*/,
(env, sym, pos)=> ({type:env.typ.BlockStatement,nodes:[],pos}) /*136*/,
(env, sym, pos)=> ({type:env.typ.CallExpression,nodes:[sym[0],sym[1]],pos}) /*137*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[sym[1],sym[2],...sym[4]],pos}) /*138*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[sym[1],null,...sym[3]],pos}) /*139*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[sym[1],sym[2]],pos}) /*140*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[sym[1],null],pos}) /*141*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[null,sym[1],...sym[3]],pos}) /*142*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[null,null,...sym[2]],pos}) /*143*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[null,sym[1]],pos}) /*144*/,
(env, sym, pos)=> ({type:env.typ.Class,nodes:[null,null],pos}) /*145*/,
(env, sym, pos)=> (sym[0].concat(sym[1])) /*146*/,
(env, sym, pos)=> (sym[0]) /*147*/,
(env, sym, pos)=> ([]) /*148*/,
(env, sym, pos)=> ((sym[1].STATIC=!!sym[0],sym[1])) /*149*/,
(env, sym, pos)=> ((sym[2].STATIC=!!sym[0],sym[2])) /*150*/,
(env, sym, pos)=> ((sym[0])) /*151*/,
(env, sym, pos)=> ((sym[1])) /*152*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!sym[1],nodes:[sym[2],sym[4],sym[7]],pos}) /*153*/,
(env, sym, pos)=> ({type:env.typ.GetterMethod,nodes:[sym[1],sym[5]],pos}) /*154*/,
(env, sym, pos)=> ({type:env.typ.SetterMethod,nodes:[sym[1],sym[3],sym[6]],pos}) /*155*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!sym[0],nodes:[sym[1],sym[3],sym[6]],pos}) /*156*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[1],sym[3],sym[6]],pos}) /*157*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!sym[1],nodes:[sym[2],null,sym[6]],pos}) /*158*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!sym[1],nodes:[sym[2],sym[4],null],pos}) /*159*/,
(env, sym, pos)=> ({type:env.typ.GetterMethod,nodes:[sym[1]],pos}) /*160*/,
(env, sym, pos)=> ({type:env.typ.SetterMethod,nodes:[sym[1],sym[3]],pos}) /*161*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[0],sym[2],sym[5]],pos}) /*162*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!sym[0],nodes:[sym[1],null,sym[5]],pos}) /*163*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!sym[0],nodes:[sym[1],sym[3],null],pos}) /*164*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[1],null,sym[5]],pos}) /*165*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[1],sym[3],null],pos}) /*166*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!sym[1],nodes:[sym[2],null,null],pos}) /*167*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[0],null,sym[4]],pos}) /*168*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[0],sym[2],null],pos}) /*169*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!sym[0],nodes:[sym[1],null,null],pos}) /*170*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[1],null,null],pos}) /*171*/,
(env, sym, pos)=> ({type:env.typ.Method,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[0],null,null],pos}) /*172*/,
(env, sym, pos)=> ((sym[0].type==env.typ.ExpressionList?(sym[0].nodes.push(sym[2]),sym[0]):{type:env.typ.ExpressionList,nodes:[sym[0],sym[2]],pos})) /*173*/,
(env, sym, pos)=> ({type:env.typ.MemberExpression,nodes:[sym[0],sym[2]],pos,COMPUTED:true}) /*174*/,
(env, sym, pos)=> ((sym[2].type|=env.cls.PROPERTY_NAME,{type:env.typ.MemberExpression,nodes:[sym[0],sym[2]],pos,COMPUTED:false})) /*175*/,
(env, sym, pos)=> ({type:env.typ.CallExpression,nodes:[sym[0],sym[1]],pos,TEMPLATE:true}) /*176*/,
(env, sym, pos)=> ({type:env.typ.NewInstanceExpression,nodes:[sym[1],sym[2]],pos}) /*177*/,
(env, sym, pos)=> ({type:env.typ.NewExpression,nodes:[sym[1]],pos}) /*178*/,
(env, sym, pos)=> ((sym[2].type|=env.cls.PROPERTY_NAME,{type:env.typ.SuperExpression,nodes:[sym[2]],pos,COMPUTED:false})) /*179*/,
(env, sym, pos)=> ({type:env.typ.SuperExpression,nodes:[sym[2]],pos,COMPUTED:true}) /*180*/,
(env, sym, pos)=> ({type:env.typ.ImportMeta,pos}) /*181*/,
(env, sym, pos)=> ({type:env.typ.NewTarget,pos}) /*182*/,
(env, sym, pos)=> ({type:env.typ.CallExpression,nodes:[sym[0],sym[1]],pos,TEMPLATE:false}) /*183*/,
(env, sym, pos)=> ({type:env.typ.CallExpression,nodes:[sym[0],sym[2]],pos,TEMPLATE:true}) /*184*/,
(env, sym, pos)=> ({type:env.typ.SuperCall,nodes:[sym[1]],pos}) /*185*/,
(env, sym, pos)=> ({type:env.typ.ImportCall,nodes:[sym[2]],pos}) /*186*/,
(env, sym, pos)=> ({type:env.typ.Arguments,nodes:sym[1]||[],pos}) /*187*/,
(env, sym, pos)=> ({type:env.typ.Arguments,nodes:null||[],pos}) /*188*/,
(env, sym, pos)=> ({type:env.typ.OptionalMemberExpression,nodes:[sym[0],sym[1].type=="computed"?sym[1].val:sym[1]],pos,COMPUTED:sym[1].type=="computed"}) /*189*/,
(env, sym, pos)=> ({type:"computed",val:sym[2]}) /*190*/,
(env, sym, pos)=> ({type:env.typ.ThisLiteral,pos}) /*191*/,
(env, sym, pos)=> env.functions.reinterpretParenthesized (env, sym, pos)/*192*/,
(env, sym, pos)=> ({type:env.typ.AwaitExpression,nodes:[sym[1]],pos}) /*193*/,
(env, sym, pos)=> ({type:env.typ.AssignmentExpression,symbol:"=",nodes:[sym[0],sym[2]],pos}) /*194*/,
(env, sym, pos)=> ({type:env.typ.AssignmentExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*195*/,
(env, sym, pos)=> ({type:env.typ.ConditionalExpression,nodes:[sym[0],sym[2],sym[4]],pos}) /*196*/,
(env, sym, pos)=> ({type:env.typ.LogicalExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*197*/,
(env, sym, pos)=> ({type:env.typ.CoalesceExpression,nodes:[sym[0],sym[2]],pos}) /*198*/,
(env, sym, pos)=> ({type:env.typ.BitwiseExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*199*/,
(env, sym, pos)=> ({type:env.typ.EqualityExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*200*/,
(env, sym, pos)=> ({type:env.typ.RelationalExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*201*/,
(env, sym, pos)=> ({type:env.typ.InstanceOfExpression,nodes:[sym[0],sym[2]],pos}) /*202*/,
(env, sym, pos)=> ({type:env.typ.InExpression,nodes:[sym[0],sym[2]],pos}) /*203*/,
(env, sym, pos)=> ({type:env.typ.ShiftExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*204*/,
(env, sym, pos)=> ({type:env.typ.AdditiveExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*205*/,
(env, sym, pos)=> ({type:env.typ.MultiplicativeExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos}) /*206*/,
(env, sym, pos)=> ({type:env.typ.ExponentiationExpression,nodes:[sym[0],sym[2]],pos}) /*207*/,
(env, sym, pos)=> ({type:env.typ.DeleteExpression,nodes:[sym[1]],pos}) /*208*/,
(env, sym, pos)=> ({type:env.typ.VoidExpression,nodes:[sym[1]],pos}) /*209*/,
(env, sym, pos)=> ({type:env.typ.TypeofExpression,nodes:[sym[1]],pos}) /*210*/,
(env, sym, pos)=> ({type:env.typ.UnaryExpression,symbol:sym[0],nodes:[sym[1]],pos}) /*211*/,
(env, sym, pos)=> ((sym[1].type==env.typ.NumericLiteral||sym[1].type==env.typ.BigIntLiteral)?(sym[1].NEGATIVE=true,sym[1]):({type:env.typ.UnaryExpression,symbol:sym[0],nodes:[sym[1]],pos})) /*212*/,
(env, sym, pos)=> ({type:env.typ.PostExpression,symbol:sym[1],nodes:[sym[0]],pos}) /*213*/,
(env, sym, pos)=> ({type:env.typ.PreExpression,symbol:sym[0],nodes:[sym[1]],pos}) /*214*/,
(env, sym, pos)=> ({type:env.typ.Parenthesized,nodes:[],pos}) /*215*/,
(env, sym, pos)=> ({type:env.typ.Parenthesized,nodes:[sym[1]],pos}) /*216*/,
(env, sym, pos)=> ({type:env.typ.Parenthesized,nodes:[sym[1],sym[3]],pos}) /*217*/,
(env, sym, pos)=> ({type:env.typ.ObjectBinding,nodes:[],pos}) /*218*/,
(env, sym, pos)=> ({type:env.typ.ObjectBinding,nodes:[sym[1]],pos}) /*219*/,
(env, sym, pos)=> ({type:env.typ.ObjectBinding,nodes:[...sym[1]],pos}) /*220*/,
(env, sym, pos)=> ({type:env.typ.ObjectBinding,nodes:[...sym[1],sym[3]],pos}) /*221*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[sym[1],sym[2]],pos}) /*222*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[...sym[1]],pos}) /*223*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[...sym[1],sym[3],sym[4]],pos}) /*224*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[sym[1]],pos}) /*225*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[...sym[1],sym[3]],pos}) /*226*/,
(env, sym, pos)=> ({type:env.typ.ArrayBinding,nodes:[],pos}) /*227*/,
(env, sym, pos)=> ([...sym[0],sym[2]]) /*228*/,
(env, sym, pos)=> ([...sym[0],...sym[2]]) /*229*/,
(env, sym, pos)=> ([sym[0],sym[1]]) /*230*/,
(env, sym, pos)=> ({type:env.typ.PropertyBinding,nodes:[sym[0],sym[2]],pos}) /*231*/,
(env, sym, pos)=> (sym[1]?{type:env.typ.BindingExpression,symbol:"=",nodes:[sym[0],sym[1]],pos}:sym[0]) /*232*/,
(env, sym, pos)=> (null?{type:env.typ.BindingExpression,symbol:"=",nodes:[sym[0]],pos}:sym[0]) /*233*/,
(env, sym, pos)=> ({type:env.typ.Spread,nodes:[sym[1]],pos}) /*234*/,
(env, sym, pos)=> ({type:env.typ.ObjectLiteral,nodes:[],pos}) /*235*/,
(env, sym, pos)=> ({type:env.typ.ObjectLiteral,nodes:sym[1],pos}) /*236*/,
(env, sym, pos)=> (sym[0].push(sym[2]),sym[0]) /*237*/,
(env, sym, pos)=> (sym[0].type|=env.cls.PROPERTY_NAME,sym[0]) /*238*/,
(env, sym, pos)=> ({type:env.typ.ComputedProperty,nodes:[sym[1]],pos}) /*239*/,
(env, sym, pos)=> (sym[0].type|=env.cls.PROPERTY_NAME,{type:env.typ.BindingExpression,symbol:"=",nodes:[sym[0],sym[1]],pos}) /*240*/,
(env, sym, pos)=> (sym[1]) /*241*/,
(env, sym, pos)=> ({type:env.typ.ArrayLiteral,nodes:[sym[1]],pos}) /*242*/,
(env, sym, pos)=> ({type:env.typ.ArrayLiteral,nodes:sym[1],pos}) /*243*/,
(env, sym, pos)=> ({type:env.typ.ArrayLiteral,nodes:[...sym[1],sym[3]],pos}) /*244*/,
(env, sym, pos)=> ({type:env.typ.ArrayLiteral,nodes:[],pos}) /*245*/,
(env, sym, pos)=> ({type:env.typ.ArrayLiteral,nodes:[...sym[1]],pos}) /*246*/,
(env, sym, pos)=> ([...sym[0],sym[2],sym[3]]) /*247*/,
(env, sym, pos)=> ({type:env.typ.Elision,count:0,pos}) /*248*/,
(env, sym, pos)=> ({type:env.typ.Elision,count:sym[0].count+1,pos}) /*249*/,
(env, sym, pos)=> ({type:env.typ.RegexLiteral,value:sym[1],flags:sym[3],pos}) /*250*/,
(env, sym, pos)=> ({type:env.typ.RegexLiteral,flags:sym[2],pos}) /*251*/,
(env, sym, pos)=> ({type:env.typ.RegexLiteral,value:sym[1],pos}) /*252*/,
(env, sym, pos)=> ({type:env.typ.RegexLiteral,pos}) /*253*/,
(env, sym, pos)=> ({type:env.typ.Template,nodes:[{quote_type:"",type:env.typ.StringLiteral,value:sym[1],pos}],NO_SUBSTITUTE:true,pos}) /*254*/,
(env, sym, pos)=> ({type:env.typ.Template,nodes:[{quote_type:"",type:env.typ.StringLiteral,pos}],NO_SUBSTITUTE:true,pos}) /*255*/,
(env, sym, pos)=> (sym[2].unshift(sym[0],sym[1]),{type:env.typ.Template,nodes:sym[2],pos}) /*256*/,
(env, sym, pos)=> (sym[0].push(sym[1]),sym[0]) /*257*/,
(env, sym, pos)=> (sym[0].push(sym[1],sym[2]),sym[0]) /*258*/,
(env, sym, pos)=> ({type:env.typ.TemplateHead,value:sym[1]||"",pos}) /*259*/,
(env, sym, pos)=> ({type:env.typ.TemplateHead,value:"",pos}) /*260*/,
(env, sym, pos)=> ({type:env.typ.TemplateMiddle,value:sym[1]||"",pos}) /*261*/,
(env, sym, pos)=> ({type:env.typ.TemplateMiddle,value:"",pos}) /*262*/,
(env, sym, pos)=> ({type:env.typ.TemplateTail,value:sym[1]||"",pos}) /*263*/,
(env, sym, pos)=> ({type:env.typ.TemplateTail,value:"",pos}) /*264*/,
(env, sym, pos)=> (sym[0]+sym[1]) /*265*/,
(env, sym, pos)=> ({quote_type:sym[0],type:env.typ.StringLiteral,value:sym[1]||"",pos}) /*266*/,
(env, sym, pos)=> ({quote_type:sym[0],type:env.typ.StringLiteral,value:null||"",pos}) /*267*/,
(env, sym, pos)=> ({type:env.typ.NumericLiteral,value:sym[0],computed_value:parseFloat(sym[0].replace(/_/g,"")),pos,NEGATIVE:false}) /*268*/,
(env, sym, pos)=> ({type:env.typ.BigIntLiteral,value:sym[0],computed_value:parseFloat(sym[0].replace(/_/g,"")),pos,NEGATIVE:false}) /*269*/,
(env, sym, pos)=> (sym[0]+sym[1]+sym[2]) /*270*/,
(env, sym, pos)=> ({type:env.typ.NullLiteral,pos}) /*271*/,
(env, sym, pos)=> ({type:env.typ.BooleanLiteral,value:sym[0],pos}) /*272*/,
(env, sym, pos)=> ({type:env.typ.IdentifierLabel,value:sym[0]}) /*273*/,
(env, sym, pos)=> ({type:env.typ.IdentifierReference,value:sym[0]}) /*274*/,
(env, sym, pos)=> ({type:env.typ.IdentifierBinding,value:sym[0]}) /*275*/,
(env, sym, pos)=> ({type:env.typ.Identifier,value:sym[0],pos}) /*276*/,
(env, sym, pos)=> ({type:env.typ.IdentifierName,value:sym[0],pos}) /*277*/,
(env, sym, pos)=> (sym[0]+"") /*278*/,
(env, sym, pos)=> (sym[0]+sym[2]) /*279*/,
(env, sym, pos)=> ({type:env.typ.VariableDeclaration,nodes:sym[1],pos}) /*280*/,
(env, sym, pos)=> ({type:env.typ.VariableDeclaration,nodes:[sym[1]],pos}) /*281*/];

export default ParserFramework(
    reduce_functions,
    {
        js:0,
        stmt:1,
        exp:2,
    },
    js_parser_pack,

);

