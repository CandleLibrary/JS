import {buildParserMemoryBuffer, loadWASM }  from "@candlefw/hydrocarbon";        
import Lexer from "@candlefw/wind"; 

const debug_stack = [];
const { shared_memory, action_array, error_array } = buildParserMemoryBuffer(true, 4194304, 163920);

const  recognizer = 
    ((store_data, debug_stack)=>{
        const data_view = new DataView(store_data);
        function load(offset){
            return data_view.getUint16(offset, true);
        };
        function store(offset, val){
            data_view.setUint32(offset, val, true);
        };
        const action_array_offset = 382976;
const error_array_offset = 4577280;
const TokenSpace = 1;
const TokenNumber = 2;
const TokenIdentifier = 4;
const TokenNewLine = 8;
const TokenSymbol = 16;
const id = 2;
const num = 4;
let action_ptr = 0;
let error_ptr = 0;
let str;
function createState(ENABLE_STACK_OUTPUT){
    const IS_STATE_VALID = 1;
    return IS_STATE_VALID|(ENABLE_STACK_OUTPUT<<1);
}
function hasStateFailed(state){
    const IS_STATE_VALID = 1;
    return 0==(state&IS_STATE_VALID);
}
function isOutputEnabled(state){
    return 0<(state&0x2);
}
function getTypeAt(code_point){
    switch(load(code_point<<1)&255){
        default:
        case 0:
            return TokenSymbol;
        case 1:
            return TokenIdentifier;
        case 2:
            return TokenSpace;
        case 3:
        case 4:
            return TokenNewLine;
        case 5:
            return TokenNumber;
    }
    return 0;
}
class Lexer {
    constructor(){
        this.ty = 0;
        this.tl = 0;
        this.off = 0;
        this.utf = 0;
        this.prev_off = 0;
    }
    copy(destination = new Lexer()){
        destination.utf = this.utf;
        destination.ty = this.ty;
        destination.tl = this.tl;
        destination.off = this.off;
        destination.prev_off = this.prev_off;
        return destination;
    }
    sync(marker = new Lexer()){
        marker.copy(this);
    }
    isSym(){
        return this.ty==TokenSymbol;
    }
    isNL(){
        return this.ty==TokenNewLine;
    }
    isSP(){
        return this.ty==TokenSpace;
    }
    isNum(){
        if(this.ty==TokenNumber){
            this.consumeNumeric();
            return true;
        }
        return false;
    }
    isID(){
        if(this.ty==TokenIdentifier){
            this.consumeIdentifier();
            return true;
        }
        return false;
    }
    typeIs(flag){
        return (this.ty&flag)==this.ty;
    }
    consumeNumeric(){
        const l = str.length;
        let off = this.off;
        this.tl = 1;
        while((++off<l)&&(num&(load(0+(str.codePointAt(off)<<1))>>8))){
            this.tl++;
        }
    }
    consumeIdentifier(){
        const l = str.length;
        let off = this.off;
        this.tl = 1;
        while((++off<l)&&((num|id)&(load(0+(str.codePointAt(off)<<1))>>8))){
            this.tl++;
        }
    }
    getUTF(delta = 0){
        return str.codePointAt(this.off+delta);
    }
    getOffsetRegionDelta(){
        return this.off-this.prev_off;
    }
    advanceOffsetRegion(){
        this.prev_off = this.off+this.tl;
    }
    syncOffsetRegion(){
        this.prev_off = this.off;
    }
    typeAt(offset = 0){
        offset = this.off+offset;
        if(offset>=str.length){
            return 0;
        }
        return getTypeAt(str.codePointAt(offset));
    }
    next(){
        this.off = this.off+this.tl;
        this.tl = 1;
        if(this.off>=str.length){
            this.ty = 0;
            this.tl = 0;
            this.utf = -1;
            this.off = str.length;
        } else {
            this.utf = str.codePointAt(this.off);
            this.ty = getTypeAt(this.utf);
        }
        return this;
    }
    END(){
        return this.off>=str.length;
    }
}
function comments_tok_e92f206c4db1b5da(l){
    if(defined_token_0e9d427e5497a7ad(l)/*[/asterisk] [//]*/){
        let c = l.copy();
        if($comments(c,createState(0))){
            l.tl = c.off-l.off;
            return true;
        }
    }
    return false;
}
function def$binary_token_tok_702c3d4fea5befc5(l){
    if(defined_token_33b1e9553bafe159(l)/*[0b]*/){
        let c = l.copy();
        if($def$binary_token(c,createState(0))){
            l.tl = c.off-l.off;
            return true;
        }
    }
    return false;
}
function def$hex_token_tok_b428bec518edb93d(l){
    if(defined_token_60c8247a60511d72(l)/*[0x]*/){
        let c = l.copy();
        if($def$hex_token(c,createState(0))){
            l.tl = c.off-l.off;
            return true;
        }
    }
    return false;
}
function def$identifier_symbols_tok_cb43c29328476df0(l){
    if(((l.utf==95/*[_]*/)||(l.utf==36/*[$]*/))||l.isID()/*[id]*/){
        let c = l.copy();
        if($def$identifier_symbols(c,createState(0))){
            l.tl = c.off-l.off;
            return true;
        }
    }
    return false;
}
function def$js_id_symbols_tok_b3199095c9facd2b(l){
    if(((l.utf==95/*[_]*/)||(l.utf==36/*[$]*/))||l.isID()/*[id]*/){
        let c = l.copy();
        if($def$js_id_symbols(c,createState(0))){
            l.tl = c.off-l.off;
            return true;
        }
    }
    return false;
}
function def$octal_token_tok_1abc5a9e79c1592d(l){
    if(defined_token_ad665389bc23e01f(l)/*[0o] [0O]*/){
        let c = l.copy();
        if($def$octal_token(c,createState(0))){
            l.tl = c.off-l.off;
            return true;
        }
    }
    return false;
}
function def$scientific_token_tok_55f659f8323305af(l){
    if(l.isNum()/*[num]*/){
        let c = l.copy();
        if($def$scientific_token(c,createState(0))){
            l.tl = c.off-l.off;
            return true;
        }
    }
    return false;
}
function defined_token_02147395f110c9cd(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==60){
        val = l.getUTF(1);
        if(val==60){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        } else if(val==61){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        }
    }
    return ACCEPT;
}
function defined_token_042ea6dc9657ee07(l){
    let ACCEPT = false;
    if((((l.getUTF(3)==100)&&(l.getUTF(2)==105))&&(l.getUTF(1)==111))&&(l.getUTF(0)==118)){
        l.ty = TokenSymbol;
        l.tl = 4;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_04e94f0279c3936b(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==33){
        if(l.getUTF(1)==61){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
            if(l.getUTF(2)==61){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_052b4d0bdbf4fcd7(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==102){
        val = l.getUTF(1);
        if(val==105){
            if(((((l.getUTF(6)==121)&&(l.getUTF(5)==108))&&(l.getUTF(4)==108))&&(l.getUTF(3)==97))&&(l.getUTF(2)==110)){
                l.ty = TokenSymbol;
                l.tl = 7;
                ACCEPT = true;
            }
        } else if(val==111){
            if(l.getUTF(2)==114){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        } else if(val==117){
            if((((((l.getUTF(7)==110)&&(l.getUTF(6)==111))&&(l.getUTF(5)==105))&&(l.getUTF(4)==116))&&(l.getUTF(3)==99))&&(l.getUTF(2)==110)){
                l.ty = TokenSymbol;
                l.tl = 8;
                ACCEPT = true;
            }
        } else if(val==97){
            if(((l.getUTF(4)==101)&&(l.getUTF(3)==115))&&(l.getUTF(2)==108)){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        } else if(val==114){
            if((l.getUTF(3)==109)&&(l.getUTF(2)==111)){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_06a0f520696bd72c(l){
    let ACCEPT = false;
    if((l.getUTF(2)!=NaN)&&((l.getUTF(1)==124)&&(l.getUTF(0)==124))){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_0a34667347bd2a3a(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==115){
        val = l.getUTF(1);
        if(val==117){
            if(((l.getUTF(4)==114)&&(l.getUTF(3)==101))&&(l.getUTF(2)==112)){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        } else if(val==101){
            if(l.getUTF(2)==116){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        } else if(val==119){
            if((((l.getUTF(5)==104)&&(l.getUTF(4)==99))&&(l.getUTF(3)==116))&&(l.getUTF(2)==105)){
                l.ty = TokenSymbol;
                l.tl = 6;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_0aac28246f673fd8(l){
    let ACCEPT = false;
    if((l.typeAt(5)!=TokenIdentifier)&&(((((l.getUTF(4)==119)&&(l.getUTF(3)==111))&&(l.getUTF(2)==114))&&(l.getUTF(1)==104))&&(l.getUTF(0)==116))){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_0b6f38e897a6033b(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==100){
        val = l.getUTF(1);
        if(val==101){
            val = l.getUTF(2);
            if(val==98){
                if(((((l.getUTF(7)==114)&&(l.getUTF(6)==101))&&(l.getUTF(5)==103))&&(l.getUTF(4)==103))&&(l.getUTF(3)==117)){
                    l.ty = TokenSymbol;
                    l.tl = 8;
                    ACCEPT = true;
                }
            } else if(val==102){
                if((((l.getUTF(6)==116)&&(l.getUTF(5)==108))&&(l.getUTF(4)==117))&&(l.getUTF(3)==97)){
                    l.ty = TokenSymbol;
                    l.tl = 7;
                    ACCEPT = true;
                }
            } else if(val==108){
                if(((l.getUTF(5)==101)&&(l.getUTF(4)==116))&&(l.getUTF(3)==101)){
                    l.ty = TokenSymbol;
                    l.tl = 6;
                    ACCEPT = true;
                }
            }
        } else if(val==111){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        }
    }
    return ACCEPT;
}
function defined_token_0ca2cff5a3c99027(l){
    let ACCEPT = false;
    if((l.getUTF(2)!=109)&&((l.getUTF(1)==47)&&(l.getUTF(0)==42))){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_0e8a531b18b35626(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==110){
        val = l.getUTF(1);
        if(val==101){
            if((l.typeAt(3)!=TokenIdentifier)&&(l.getUTF(2)==119)){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        } else if(val==117){
            if((l.typeAt(4)!=TokenIdentifier)&&((l.getUTF(3)==108)&&(l.getUTF(2)==108))){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_0e9d427e5497a7ad(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==47){
        val = l.getUTF(1);
        if(val==42){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        } else if(val==47){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        }
    }
    return ACCEPT;
}
function defined_token_1110717de6c46549(l){
    let ACCEPT = false;
    if((l.getUTF(1)==60)&&(l.getUTF(0)==60)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_139af7e0759e829f(l){
    let ACCEPT = false;
    if((l.typeAt(6)!=TokenIdentifier)&&((((((l.getUTF(5)==101)&&(l.getUTF(4)==116))&&(l.getUTF(3)==101))&&(l.getUTF(2)==108))&&(l.getUTF(1)==101))&&(l.getUTF(0)==100))){
        l.ty = TokenSymbol;
        l.tl = 6;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_14176d5b613b7d00(l){
    let ACCEPT = false;
    if((l.typeAt(5)!=TokenIdentifier)&&(((((l.getUTF(4)==107)&&(l.getUTF(3)==97))&&(l.getUTF(2)==101))&&(l.getUTF(1)==114))&&(l.getUTF(0)==98))){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_14469127dc9c2c1f(l){
    let ACCEPT = false;
    if((((l.getUTF(3)==109)&&(l.getUTF(2)==111))&&(l.getUTF(1)==114))&&(l.getUTF(0)==102)){
        l.ty = TokenSymbol;
        l.tl = 4;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_15518d202137f56e(l){
    let ACCEPT = false;
    if((((((l.getUTF(5)==116)&&(l.getUTF(4)==114))&&(l.getUTF(3)==111))&&(l.getUTF(2)==112))&&(l.getUTF(1)==120))&&(l.getUTF(0)==101)){
        l.ty = TokenSymbol;
        l.tl = 6;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_172adec61d2dc160(l){
    let ACCEPT = false;
    if(((l.typeAt(5)!=TokenIdentifier)&&(l.getUTF(5)!=NaN))&&(((((l.getUTF(4)==99)&&(l.getUTF(3)==110))&&(l.getUTF(2)==121))&&(l.getUTF(1)==115))&&(l.getUTF(0)==97))){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_17331620f5e592a6(l){
    let ACCEPT = false;
    if((l.typeAt(6)!=TokenIdentifier)&&((((((l.getUTF(5)==99)&&(l.getUTF(4)==105))&&(l.getUTF(3)==116))&&(l.getUTF(2)==97))&&(l.getUTF(1)==116))&&(l.getUTF(0)==115))){
        l.ty = TokenSymbol;
        l.tl = 6;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_1ae4fe309b644fa1(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==118){
        val = l.getUTF(1);
        if(val==111){
            if((l.getUTF(3)==100)&&(l.getUTF(2)==105)){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        } else if(val==97){
            if(l.getUTF(2)==114){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_1c4bd208294c1ee4(l){
    let ACCEPT = false;
    if(((l.getUTF(2)==121)&&(l.getUTF(1)==114))&&(l.getUTF(0)==116)){
        l.ty = TokenSymbol;
        l.tl = 3;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_1cb42c7dd41b3a7e(l){
    let ACCEPT = false;
    if((((((l.getUTF(5)==116)&&(l.getUTF(4)==101))&&(l.getUTF(3)==103))&&(l.getUTF(2)==114))&&(l.getUTF(1)==97))&&(l.getUTF(0)==116)){
        l.ty = TokenSymbol;
        l.tl = 6;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_1f80f2e0a149fe3d(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==105){
        val = l.getUTF(1);
        if(val==109){
            if((((l.getUTF(5)==116)&&(l.getUTF(4)==114))&&(l.getUTF(3)==111))&&(l.getUTF(2)==112)){
                l.ty = TokenSymbol;
                l.tl = 6;
                ACCEPT = true;
            }
        } else if(val==102){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        }
    }
    return ACCEPT;
}
function defined_token_1fa4a9b14e1fe8cc(l){
    let ACCEPT = false;
    if((l.getUTF(2)!=NaN)&&((l.getUTF(1)==42)&&(l.getUTF(0)==42))){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_202a14414fc7633f(l){
    let ACCEPT = false;
    if((l.typeAt(5)!=TokenIdentifier)&&(((((l.getUTF(4)==100)&&(l.getUTF(3)==108))&&(l.getUTF(2)==101))&&(l.getUTF(1)==105))&&(l.getUTF(0)==121))){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_22a3e3a7de4e4fb7(l){
    let ACCEPT = false;
    if(((l.getUTF(2)==114)&&(l.getUTF(1)==111))&&(l.getUTF(0)==102)){
        l.ty = TokenSymbol;
        l.tl = 3;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_2408972de31435b0(l){
    let ACCEPT = false;
    if((l.typeAt(6)!=TokenIdentifier)&&((((((l.getUTF(5)==116)&&(l.getUTF(4)==114))&&(l.getUTF(3)==111))&&(l.getUTF(2)==112))&&(l.getUTF(1)==109))&&(l.getUTF(0)==105))){
        l.ty = TokenSymbol;
        l.tl = 6;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_265afb3bd124d12f(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==105){
        if(l.getUTF(1)==110){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
            if(l.getUTF(2)==115){
                if((l.typeAt(10)!=TokenIdentifier)&&(((((((l.getUTF(9)==102)&&(l.getUTF(8)==111))&&(l.getUTF(7)==101))&&(l.getUTF(6)==99))&&(l.getUTF(5)==110))&&(l.getUTF(4)==97))&&(l.getUTF(3)==116))){
                    l.ty = TokenSymbol;
                    l.tl = 10;
                    ACCEPT = true;
                }
            }
        }
    }
    return ACCEPT;
}
function defined_token_27afa3af0568507f(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==102){
        val = l.getUTF(1);
        if(val==97){
            if((l.typeAt(5)!=TokenIdentifier)&&(((l.getUTF(4)==101)&&(l.getUTF(3)==115))&&(l.getUTF(2)==108))){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        } else if(val==117){
            if((l.typeAt(8)!=TokenIdentifier)&&((((((l.getUTF(7)==110)&&(l.getUTF(6)==111))&&(l.getUTF(5)==105))&&(l.getUTF(4)==116))&&(l.getUTF(3)==99))&&(l.getUTF(2)==110))){
                l.ty = TokenSymbol;
                l.tl = 8;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_294408de292fd7e1(l){
    let ACCEPT = false;
    if((l.typeAt(3)!=TokenIdentifier)&&(((l.getUTF(2)==119)&&(l.getUTF(1)==101))&&(l.getUTF(0)==110))){
        l.ty = TokenSymbol;
        l.tl = 3;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_2c342d130718e813(l){
    let ACCEPT = false;
    if((l.getUTF(2)!=NaN)&&((l.getUTF(1)==61)&&(l.getUTF(0)==37))){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_2cf552cd86bb015e(l){
    let ACCEPT = false;
    if((((l.getUTF(3)==104)&&(l.getUTF(2)==116))&&(l.getUTF(1)==105))&&(l.getUTF(0)==119)){
        l.ty = TokenSymbol;
        l.tl = 4;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_2d05a4070a3ebcf4(l){
    let ACCEPT = false;
    if(((((l.getUTF(4)==115)&&(l.getUTF(3)==115))&&(l.getUTF(2)==97))&&(l.getUTF(1)==108))&&(l.getUTF(0)==99)){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_2ed685dc4925cfa4(l){
    let ACCEPT = false;
    if((((((l.getUTF(5)==116)&&(l.getUTF(4)==114))&&(l.getUTF(3)==111))&&(l.getUTF(2)==112))&&(l.getUTF(1)==109))&&(l.getUTF(0)==105)){
        l.ty = TokenSymbol;
        l.tl = 6;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_30bb3358d3f29eb4(l){
    let ACCEPT = false;
    if((l.typeAt(6)!=TokenIdentifier)&&((((((l.getUTF(5)==104)&&(l.getUTF(4)==99))&&(l.getUTF(3)==116))&&(l.getUTF(2)==105))&&(l.getUTF(1)==119))&&(l.getUTF(0)==115))){
        l.ty = TokenSymbol;
        l.tl = 6;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_318c95b1e64de46d(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==60){
        val = l.getUTF(1);
        if(val==60){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
            if(l.getUTF(2)==61){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        } else if(val==61){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        }
    }
    return ACCEPT;
}
function defined_token_31feb5065feb87e5(l){
    let ACCEPT = false;
    if((l.typeAt(6)!=TokenIdentifier)&&((((((l.getUTF(5)==116)&&(l.getUTF(4)==101))&&(l.getUTF(3)==103))&&(l.getUTF(2)==114))&&(l.getUTF(1)==97))&&(l.getUTF(0)==116))){
        l.ty = TokenSymbol;
        l.tl = 6;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_330b5cfc72831f04(l){
    let ACCEPT = false;
    if((l.typeAt(4)!=TokenIdentifier)&&((((l.getUTF(3)==100)&&(l.getUTF(2)==105))&&(l.getUTF(1)==111))&&(l.getUTF(0)==118))){
        l.ty = TokenSymbol;
        l.tl = 4;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_33b1e9553bafe159(l){
    let ACCEPT = false;
    if((l.getUTF(1)==98)&&(l.getUTF(0)==48)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_3592049377da822b(l){
    let ACCEPT = false;
    if((l.typeAt(4)!=TokenIdentifier)&&((((l.getUTF(3)==101)&&(l.getUTF(2)==117))&&(l.getUTF(1)==114))&&(l.getUTF(0)==116))){
        l.ty = TokenSymbol;
        l.tl = 4;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_35cdf6168a8ead76(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==115){
        val = l.getUTF(1);
        if(val==117){
            if(((l.getUTF(4)==114)&&(l.getUTF(3)==101))&&(l.getUTF(2)==112)){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        } else if(val==119){
            if((((l.getUTF(5)==104)&&(l.getUTF(4)==99))&&(l.getUTF(3)==116))&&(l.getUTF(2)==105)){
                l.ty = TokenSymbol;
                l.tl = 6;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_35df72b33b14e143(l){
    let ACCEPT = false;
    if((l.typeAt(3)!=TokenIdentifier)&&(((l.getUTF(2)==116)&&(l.getUTF(1)==101))&&(l.getUTF(0)==108))){
        l.ty = TokenSymbol;
        l.tl = 3;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_37dd03e46b4262d7(l){
    let ACCEPT = false;
    if((l.typeAt(4)!=TokenIdentifier)&&((((l.getUTF(3)==104)&&(l.getUTF(2)==116))&&(l.getUTF(1)==105))&&(l.getUTF(0)==119))){
        l.ty = TokenSymbol;
        l.tl = 4;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_37edf5ebc00dbfe6(l){
    let ACCEPT = false;
    if((l.getUTF(2)!=NaN)&&((l.getUTF(1)==61)&&(l.getUTF(0)==47))){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_38bd1ef252233e12(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==105){
        val = l.getUTF(1);
        if(val==102){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        } else if(val==109){
            if((((l.getUTF(5)==116)&&(l.getUTF(4)==114))&&(l.getUTF(3)==111))&&(l.getUTF(2)==112)){
                l.ty = TokenSymbol;
                l.tl = 6;
                ACCEPT = true;
            }
        } else if(val==110){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
            if(l.getUTF(2)==115){
                if(((((((l.getUTF(9)==102)&&(l.getUTF(8)==111))&&(l.getUTF(7)==101))&&(l.getUTF(6)==99))&&(l.getUTF(5)==110))&&(l.getUTF(4)==97))&&(l.getUTF(3)==116)){
                    l.ty = TokenSymbol;
                    l.tl = 10;
                    ACCEPT = true;
                }
            }
        }
    }
    return ACCEPT;
}
function defined_token_3be2267a053f0395(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==62){
        val = l.getUTF(1);
        if(val==62){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
            val = l.getUTF(2);
            if(val==61){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            } else if(val==62){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
                if(l.getUTF(3)==61){
                    l.ty = TokenSymbol;
                    l.tl = 4;
                    ACCEPT = true;
                }
            }
        } else if(val==61){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        }
    }
    return ACCEPT;
}
function defined_token_3e1cfcd85fb122d2(l){
    let ACCEPT = false;
    if((l.getUTF(3)!=NaN)&&(((l.getUTF(2)==61)&&(l.getUTF(1)==42))&&(l.getUTF(0)==42))){
        l.ty = TokenSymbol;
        l.tl = 3;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_3eff041ba9fc8573(l){
    let ACCEPT = false;
    if((l.getUTF(1)==46)&&(l.getUTF(0)==63)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_3f0cefcc8fe287e4(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==115){
        val = l.getUTF(1);
        if(val==101){
            if(l.getUTF(2)==116){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        } else if(val==117){
            if(((l.getUTF(4)==114)&&(l.getUTF(3)==101))&&(l.getUTF(2)==112)){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        } else if(val==119){
            if((((l.getUTF(5)==104)&&(l.getUTF(4)==99))&&(l.getUTF(3)==116))&&(l.getUTF(2)==105)){
                l.ty = TokenSymbol;
                l.tl = 6;
                ACCEPT = true;
            }
        } else if(val==116){
            if((((l.getUTF(5)==99)&&(l.getUTF(4)==105))&&(l.getUTF(3)==116))&&(l.getUTF(2)==97)){
                l.ty = TokenSymbol;
                l.tl = 6;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_412dc567ff7a9dc1(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==97){
        if(l.getUTF(1)==115){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
            if(l.getUTF(2)==121){
                if((l.typeAt(5)!=TokenIdentifier)&&((l.getUTF(4)==99)&&(l.getUTF(3)==110))){
                    l.ty = TokenSymbol;
                    l.tl = 5;
                    ACCEPT = true;
                }
            }
        }
    }
    return ACCEPT;
}
function defined_token_44aa3f48541f3402(l){
    let ACCEPT = false;
    if((l.typeAt(5)!=TokenIdentifier)&&(((((l.getUTF(4)==116)&&(l.getUTF(3)==105))&&(l.getUTF(2)==97))&&(l.getUTF(1)==119))&&(l.getUTF(0)==97))){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_47107e97ad1f0a55(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==116){
        val = l.getUTF(1);
        if(val==104){
            val = l.getUTF(2);
            if(val==105){
                if((l.typeAt(4)!=TokenIdentifier)&&(l.getUTF(3)==115)){
                    l.ty = TokenSymbol;
                    l.tl = 4;
                    ACCEPT = true;
                }
            } else if(val==114){
                if((l.typeAt(5)!=TokenIdentifier)&&((l.getUTF(4)==119)&&(l.getUTF(3)==111))){
                    l.ty = TokenSymbol;
                    l.tl = 5;
                    ACCEPT = true;
                }
            }
        } else if(val==114){
            val = l.getUTF(2);
            if(val==121){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            } else if(val==117){
                if((l.typeAt(4)!=TokenIdentifier)&&(l.getUTF(3)==101)){
                    l.ty = TokenSymbol;
                    l.tl = 4;
                    ACCEPT = true;
                }
            }
        } else if(val==121){
            if((l.typeAt(6)!=TokenIdentifier)&&((((l.getUTF(5)==102)&&(l.getUTF(4)==111))&&(l.getUTF(3)==101))&&(l.getUTF(2)==112))){
                l.ty = TokenSymbol;
                l.tl = 6;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_4733e5135a271ed8(l){
    let ACCEPT = false;
    if((l.getUTF(1)==61)&&(l.getUTF(0)==37)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_4749150ec48378d0(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==45){
        val = l.getUTF(1);
        if(val==61){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        } else if(val==45){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        }
    }
    return ACCEPT;
}
function defined_token_4755eae578aa37bc(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==110){
        val = l.getUTF(1);
        if(val==117){
            if((l.typeAt(4)!=TokenIdentifier)&&((l.getUTF(3)==108)&&(l.getUTF(2)==108))){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        } else if(val==101){
            if((l.typeAt(3)!=TokenIdentifier)&&(l.getUTF(2)==119)){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_485338d34f29b52a(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==42){
        if(l.getUTF(1)==42){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
            if(l.getUTF(2)==61){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_4b13d558acb940fb(l){
    let ACCEPT = false;
    if((((l.getUTF(3)==101)&&(l.getUTF(2)==115))&&(l.getUTF(1)==97))&&(l.getUTF(0)==99)){
        l.ty = TokenSymbol;
        l.tl = 4;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_4c51ded3b971fa93(l){
    let ACCEPT = false;
    if((l.getUTF(1)==111)&&(l.getUTF(0)==100)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_4da8f1a70aed701d(l){
    let ACCEPT = false;
    if((l.typeAt(2)!=TokenIdentifier)&&((l.getUTF(1)==115)&&(l.getUTF(0)==97))){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_4df9552a310b74e2(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==61){
        if(l.getUTF(1)==61){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
            if(l.getUTF(2)==61){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_5012f964d8a70e70(l){
    let ACCEPT = false;
    if((l.typeAt(3)!=TokenIdentifier)&&(((l.getUTF(2)==114)&&(l.getUTF(1)==97))&&(l.getUTF(0)==118))){
        l.ty = TokenSymbol;
        l.tl = 3;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_518d7661f3b291b8(l){
    let ACCEPT = false;
    if((l.typeAt(2)!=TokenIdentifier)&&((l.getUTF(1)==102)&&(l.getUTF(0)==105))){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_53a6f4c8d1e0fc43(l){
    let ACCEPT = false;
    if((l.typeAt(7)!=TokenIdentifier)&&(((((((l.getUTF(6)==115)&&(l.getUTF(5)==100))&&(l.getUTF(4)==110))&&(l.getUTF(3)==101))&&(l.getUTF(2)==116))&&(l.getUTF(1)==120))&&(l.getUTF(0)==101))){
        l.ty = TokenSymbol;
        l.tl = 7;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_53acc3dc3e0044c1(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==116){
        val = l.getUTF(1);
        if(val==104){
            val = l.getUTF(2);
            if(val==105){
                if(l.getUTF(3)==115){
                    l.ty = TokenSymbol;
                    l.tl = 4;
                    ACCEPT = true;
                }
            } else if(val==114){
                if((l.getUTF(4)==119)&&(l.getUTF(3)==111)){
                    l.ty = TokenSymbol;
                    l.tl = 5;
                    ACCEPT = true;
                }
            }
        } else if(val==114){
            if(l.getUTF(2)==121){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        } else if(val==121){
            if((((l.getUTF(5)==102)&&(l.getUTF(4)==111))&&(l.getUTF(3)==101))&&(l.getUTF(2)==112)){
                l.ty = TokenSymbol;
                l.tl = 6;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_5459ff5932c71df8(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==99){
        val = l.getUTF(1);
        if(val==97){
            val = l.getUTF(2);
            if(val==115){
                if((l.typeAt(4)!=TokenIdentifier)&&(l.getUTF(3)==101)){
                    l.ty = TokenSymbol;
                    l.tl = 4;
                    ACCEPT = true;
                }
            } else if(val==116){
                if((l.typeAt(5)!=TokenIdentifier)&&((l.getUTF(4)==104)&&(l.getUTF(3)==99))){
                    l.ty = TokenSymbol;
                    l.tl = 5;
                    ACCEPT = true;
                }
            }
        } else if(val==108){
            if((l.typeAt(5)!=TokenIdentifier)&&(((l.getUTF(4)==115)&&(l.getUTF(3)==115))&&(l.getUTF(2)==97))){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        } else if(val==111){
            if(l.getUTF(2)==110){
                val = l.getUTF(3);
                if(val==115){
                    if((l.typeAt(5)!=TokenIdentifier)&&(l.getUTF(4)==116)){
                        l.ty = TokenSymbol;
                        l.tl = 5;
                        ACCEPT = true;
                    }
                } else if(val==116){
                    if((l.typeAt(8)!=TokenIdentifier)&&((((l.getUTF(7)==101)&&(l.getUTF(6)==117))&&(l.getUTF(5)==110))&&(l.getUTF(4)==105))){
                        l.ty = TokenSymbol;
                        l.tl = 8;
                        ACCEPT = true;
                    }
                }
            }
        }
    }
    return ACCEPT;
}
function defined_token_57193d8fefd013e4(l){
    let ACCEPT = false;
    if((l.typeAt(5)!=TokenIdentifier)&&(((((l.getUTF(4)==101)&&(l.getUTF(3)==115))&&(l.getUTF(2)==108))&&(l.getUTF(1)==97))&&(l.getUTF(0)==102))){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_57c98daa5c98098c(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==99){
        val = l.getUTF(1);
        if(val==108){
            if(((l.getUTF(4)==115)&&(l.getUTF(3)==115))&&(l.getUTF(2)==97)){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        } else if(val==111){
            if(((l.getUTF(4)==116)&&(l.getUTF(3)==115))&&(l.getUTF(2)==110)){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_57da255105f722f9(l){
    let ACCEPT = false;
    if(((((l.getUTF(4)==101)&&(l.getUTF(3)==115))&&(l.getUTF(2)==108))&&(l.getUTF(1)==97))&&(l.getUTF(0)==102)){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_57e43262d833cfeb(l){
    let ACCEPT = false;
    if((((l.getUTF(3)==115)&&(l.getUTF(2)==105))&&(l.getUTF(1)==104))&&(l.getUTF(0)==116)){
        l.ty = TokenSymbol;
        l.tl = 4;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_5892ddf818179b1b(l){
    let ACCEPT = false;
    if(((l.getUTF(3)!=NaN)&&(l.getUTF(3)!=NaN))&&(((l.getUTF(2)==61)&&(l.getUTF(1)==60))&&(l.getUTF(0)==60))){
        l.ty = TokenSymbol;
        l.tl = 3;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_59eb8ce041e18647(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==102){
        val = l.getUTF(1);
        if(val==105){
            if((l.typeAt(7)!=TokenIdentifier)&&(((((l.getUTF(6)==121)&&(l.getUTF(5)==108))&&(l.getUTF(4)==108))&&(l.getUTF(3)==97))&&(l.getUTF(2)==110))){
                l.ty = TokenSymbol;
                l.tl = 7;
                ACCEPT = true;
            }
        } else if(val==111){
            if((l.typeAt(3)!=TokenIdentifier)&&(l.getUTF(2)==114)){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        } else if(val==117){
            if((l.typeAt(8)!=TokenIdentifier)&&((((((l.getUTF(7)==110)&&(l.getUTF(6)==111))&&(l.getUTF(5)==105))&&(l.getUTF(4)==116))&&(l.getUTF(3)==99))&&(l.getUTF(2)==110))){
                l.ty = TokenSymbol;
                l.tl = 8;
                ACCEPT = true;
            }
        } else if(val==97){
            if((l.typeAt(5)!=TokenIdentifier)&&(((l.getUTF(4)==101)&&(l.getUTF(3)==115))&&(l.getUTF(2)==108))){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_5ae254f69676cbf1(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==102){
        val = l.getUTF(1);
        if(val==105){
            if(((((l.getUTF(6)==121)&&(l.getUTF(5)==108))&&(l.getUTF(4)==108))&&(l.getUTF(3)==97))&&(l.getUTF(2)==110)){
                l.ty = TokenSymbol;
                l.tl = 7;
                ACCEPT = true;
            }
        } else if(val==111){
            if(l.getUTF(2)==114){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        } else if(val==117){
            if((((((l.getUTF(7)==110)&&(l.getUTF(6)==111))&&(l.getUTF(5)==105))&&(l.getUTF(4)==116))&&(l.getUTF(3)==99))&&(l.getUTF(2)==110)){
                l.ty = TokenSymbol;
                l.tl = 8;
                ACCEPT = true;
            }
        } else if(val==97){
            if(((l.getUTF(4)==101)&&(l.getUTF(3)==115))&&(l.getUTF(2)==108)){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_5bca542dce980d9c(l){
    let ACCEPT = false;
    if(((l.getUTF(2)==116)&&(l.getUTF(1)==101))&&(l.getUTF(0)==115)){
        l.ty = TokenSymbol;
        l.tl = 3;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_5c4d3ba94f23ac9d(l){
    let ACCEPT = false;
    if((l.typeAt(8)!=TokenIdentifier)&&((((((((l.getUTF(7)==114)&&(l.getUTF(6)==101))&&(l.getUTF(5)==103))&&(l.getUTF(4)==103))&&(l.getUTF(3)==117))&&(l.getUTF(2)==98))&&(l.getUTF(1)==101))&&(l.getUTF(0)==100))){
        l.ty = TokenSymbol;
        l.tl = 8;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_60c8247a60511d72(l){
    let ACCEPT = false;
    if((l.getUTF(1)==120)&&(l.getUTF(0)==48)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_6135305a1f53a41a(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==105){
        val = l.getUTF(1);
        if(val==109){
            if((((((((l.getUTF(9)==115)&&(l.getUTF(8)==116))&&(l.getUTF(7)==110))&&(l.getUTF(6)==101))&&(l.getUTF(5)==109))&&(l.getUTF(4)==101))&&(l.getUTF(3)==108))&&(l.getUTF(2)==112)){
                l.ty = TokenSymbol;
                l.tl = 10;
                ACCEPT = true;
            }
        } else if(val==110){
            if(((((((l.getUTF(8)==101)&&(l.getUTF(7)==99))&&(l.getUTF(6)==97))&&(l.getUTF(5)==102))&&(l.getUTF(4)==114))&&(l.getUTF(3)==101))&&(l.getUTF(2)==116)){
                l.ty = TokenSymbol;
                l.tl = 9;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_62e66454a337f212(l){
    let ACCEPT = false;
    if((l.getUTF(1)==124)&&(l.getUTF(0)==124)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_663cc31c85f53275(l){
    let ACCEPT = false;
    if((((((((l.getUTF(7)==101)&&(l.getUTF(6)==117))&&(l.getUTF(5)==110))&&(l.getUTF(4)==105))&&(l.getUTF(3)==116))&&(l.getUTF(2)==110))&&(l.getUTF(1)==111))&&(l.getUTF(0)==99)){
        l.ty = TokenSymbol;
        l.tl = 8;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_670f23e41126e00b(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==97){
        val = l.getUTF(1);
        if(val==115){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
            if(l.getUTF(2)==121){
                if((l.getUTF(4)==99)&&(l.getUTF(3)==110)){
                    l.ty = TokenSymbol;
                    l.tl = 5;
                    ACCEPT = true;
                }
            }
        } else if(val==119){
            if(((l.getUTF(4)==116)&&(l.getUTF(3)==105))&&(l.getUTF(2)==97)){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_675b48fc93d1800c(l){
    let ACCEPT = false;
    if((l.getUTF(2)!=NaN)&&((l.getUTF(1)==46)&&(l.getUTF(0)==63))){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_67a732a27c736a2f(l){
    let ACCEPT = false;
    if((l.getUTF(1)==43)&&(l.getUTF(0)==43)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_67da9f7ceaf8e451(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==119){
        val = l.getUTF(1);
        if(val==105){
            if((l.getUTF(3)==104)&&(l.getUTF(2)==116)){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        } else if(val==104){
            if(((l.getUTF(4)==101)&&(l.getUTF(3)==108))&&(l.getUTF(2)==105)){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_67feb3a1937413de(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==100){
        val = l.getUTF(1);
        if(val==101){
            val = l.getUTF(2);
            if(val==98){
                if((l.typeAt(8)!=TokenIdentifier)&&(((((l.getUTF(7)==114)&&(l.getUTF(6)==101))&&(l.getUTF(5)==103))&&(l.getUTF(4)==103))&&(l.getUTF(3)==117))){
                    l.ty = TokenSymbol;
                    l.tl = 8;
                    ACCEPT = true;
                }
            } else if(val==102){
                if((l.typeAt(7)!=TokenIdentifier)&&((((l.getUTF(6)==116)&&(l.getUTF(5)==108))&&(l.getUTF(4)==117))&&(l.getUTF(3)==97))){
                    l.ty = TokenSymbol;
                    l.tl = 7;
                    ACCEPT = true;
                }
            } else if(val==108){
                if((l.typeAt(6)!=TokenIdentifier)&&(((l.getUTF(5)==101)&&(l.getUTF(4)==116))&&(l.getUTF(3)==101))){
                    l.ty = TokenSymbol;
                    l.tl = 6;
                    ACCEPT = true;
                }
            }
        } else if(val==111){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        }
    }
    return ACCEPT;
}
function defined_token_6b20aa97513f1fc7(l){
    let ACCEPT = false;
    if((l.getUTF(1)==47)&&(l.getUTF(0)==47)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_6d4f77707d3e0e5a(l){
    let ACCEPT = false;
    if((l.getUTF(2)!=NaN)&&((l.getUTF(1)==43)&&(l.getUTF(0)==43))){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_6dffa86dec2f0421(l){
    let ACCEPT = false;
    if((l.typeAt(8)!=TokenIdentifier)&&((((((((l.getUTF(7)==101)&&(l.getUTF(6)==117))&&(l.getUTF(5)==110))&&(l.getUTF(4)==105))&&(l.getUTF(3)==116))&&(l.getUTF(2)==110))&&(l.getUTF(1)==111))&&(l.getUTF(0)==99))){
        l.ty = TokenSymbol;
        l.tl = 8;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_6e60e7c20d0b8e21(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==112){
        val = l.getUTF(1);
        if(val==97){
            if((l.typeAt(7)!=TokenIdentifier)&&(((((l.getUTF(6)==101)&&(l.getUTF(5)==103))&&(l.getUTF(4)==97))&&(l.getUTF(3)==107))&&(l.getUTF(2)==99))){
                l.ty = TokenSymbol;
                l.tl = 7;
                ACCEPT = true;
            }
        } else if(val==114){
            val = l.getUTF(2);
            if(val==111){
                if((l.typeAt(9)!=TokenIdentifier)&&((((((l.getUTF(8)==100)&&(l.getUTF(7)==101))&&(l.getUTF(6)==116))&&(l.getUTF(5)==99))&&(l.getUTF(4)==101))&&(l.getUTF(3)==116))){
                    l.ty = TokenSymbol;
                    l.tl = 9;
                    ACCEPT = true;
                }
            } else if(val==105){
                if((l.typeAt(7)!=TokenIdentifier)&&((((l.getUTF(6)==101)&&(l.getUTF(5)==116))&&(l.getUTF(4)==97))&&(l.getUTF(3)==118))){
                    l.ty = TokenSymbol;
                    l.tl = 7;
                    ACCEPT = true;
                }
            }
        } else if(val==117){
            if((l.typeAt(6)!=TokenIdentifier)&&((((l.getUTF(5)==99)&&(l.getUTF(4)==105))&&(l.getUTF(3)==108))&&(l.getUTF(2)==98))){
                l.ty = TokenSymbol;
                l.tl = 6;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_6f721474e5bd80e7(l){
    let ACCEPT = false;
    if((l.typeAt(3)!=TokenIdentifier)&&(((l.getUTF(2)==116)&&(l.getUTF(1)==101))&&(l.getUTF(0)==115))){
        l.ty = TokenSymbol;
        l.tl = 3;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_6fe6f90f8fe15dd0(l){
    let ACCEPT = false;
    if((((l.getUTF(3)==108)&&(l.getUTF(2)==108))&&(l.getUTF(1)==117))&&(l.getUTF(0)==110)){
        l.ty = TokenSymbol;
        l.tl = 4;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_70d91b687222e5ae(l){
    let ACCEPT = false;
    if((l.getUTF(1)!=121)&&(l.getUTF(0)==34)){
        l.ty = TokenSymbol;
        l.tl = 1;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_71a747ad1421d9d3(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==101){
        val = l.getUTF(1);
        if(val==108){
            if((l.typeAt(4)!=TokenIdentifier)&&((l.getUTF(3)==101)&&(l.getUTF(2)==115))){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        } else if(val==120){
            val = l.getUTF(2);
            if(val==112){
                if((l.typeAt(6)!=TokenIdentifier)&&(((l.getUTF(5)==116)&&(l.getUTF(4)==114))&&(l.getUTF(3)==111))){
                    l.ty = TokenSymbol;
                    l.tl = 6;
                    ACCEPT = true;
                }
            } else if(val==116){
                if((l.typeAt(7)!=TokenIdentifier)&&((((l.getUTF(6)==115)&&(l.getUTF(5)==100))&&(l.getUTF(4)==110))&&(l.getUTF(3)==101))){
                    l.ty = TokenSymbol;
                    l.tl = 7;
                    ACCEPT = true;
                }
            }
        }
    }
    return ACCEPT;
}
function defined_token_7330fb2be3dc26eb(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==43){
        val = l.getUTF(1);
        if(val==43){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        } else if(val==61){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        }
    }
    return ACCEPT;
}
function defined_token_7437f7cf2d9c9a71(l){
    let ACCEPT = false;
    if((l.typeAt(4)!=TokenIdentifier)&&((((l.getUTF(3)==109)&&(l.getUTF(2)==111))&&(l.getUTF(1)==114))&&(l.getUTF(0)==102))){
        l.ty = TokenSymbol;
        l.tl = 4;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_74535e89586ef7a1(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==101){
        val = l.getUTF(1);
        if(val==108){
            if((l.getUTF(3)==101)&&(l.getUTF(2)==115)){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        } else if(val==120){
            if((((l.getUTF(5)==116)&&(l.getUTF(4)==114))&&(l.getUTF(3)==111))&&(l.getUTF(2)==112)){
                l.ty = TokenSymbol;
                l.tl = 6;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_75d68ac65a42afc4(l){
    let ACCEPT = false;
    if((l.getUTF(1)==123)&&(l.getUTF(0)==36)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_7865c7b5645d7910(l){
    let ACCEPT = false;
    if((l.typeAt(5)!=TokenIdentifier)&&(((((l.getUTF(4)==115)&&(l.getUTF(3)==115))&&(l.getUTF(2)==97))&&(l.getUTF(1)==108))&&(l.getUTF(0)==99))){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_797102d9c2b797d3(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==102){
        val = l.getUTF(1);
        if(val==114){
            if((l.typeAt(4)!=TokenIdentifier)&&((l.getUTF(3)==109)&&(l.getUTF(2)==111))){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        } else if(val==117){
            if((l.typeAt(8)!=TokenIdentifier)&&((((((l.getUTF(7)==110)&&(l.getUTF(6)==111))&&(l.getUTF(5)==105))&&(l.getUTF(4)==116))&&(l.getUTF(3)==99))&&(l.getUTF(2)==110))){
                l.ty = TokenSymbol;
                l.tl = 8;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_79ab361fc2644f92(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==62){
        val = l.getUTF(1);
        if(val==62){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
            if(l.getUTF(2)==62){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        } else if(val==61){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        }
    }
    return ACCEPT;
}
function defined_token_79b82aa5b55f0605(l){
    let ACCEPT = false;
    if(((l.getUTF(2)==119)&&(l.getUTF(1)==101))&&(l.getUTF(0)==110)){
        l.ty = TokenSymbol;
        l.tl = 3;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_7a48bf3a46a95de4(l){
    let ACCEPT = false;
    if((((l.getUTF(3)==97)&&(l.getUTF(2)==116))&&(l.getUTF(1)==101))&&(l.getUTF(0)==109)){
        l.ty = TokenSymbol;
        l.tl = 4;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_7b465f3c7dd55e63(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==102){
        val = l.getUTF(1);
        if(val==117){
            if((((((l.getUTF(7)==110)&&(l.getUTF(6)==111))&&(l.getUTF(5)==105))&&(l.getUTF(4)==116))&&(l.getUTF(3)==99))&&(l.getUTF(2)==110)){
                l.ty = TokenSymbol;
                l.tl = 8;
                ACCEPT = true;
            }
        } else if(val==114){
            if((l.getUTF(3)==109)&&(l.getUTF(2)==111)){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        } else if(val==97){
            if(((l.getUTF(4)==101)&&(l.getUTF(3)==115))&&(l.getUTF(2)==108)){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_7c714fc2ee65a23e(l){
    let ACCEPT = false;
    if((((l.getUTF(3)==101)&&(l.getUTF(2)==115))&&(l.getUTF(1)==108))&&(l.getUTF(0)==101)){
        l.ty = TokenSymbol;
        l.tl = 4;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_7c7dc8357e27bfc9(l){
    let ACCEPT = false;
    if((l.getUTF(2)!=NaN)&&((l.getUTF(1)==61)&&(l.getUTF(0)==60))){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_83d9c34c073caa4f(l){
    let ACCEPT = false;
    if((l.typeAt(2)!=TokenIdentifier)&&((l.getUTF(1)==102)&&(l.getUTF(0)==111))){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_845a30f46ac258a6(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==97){
        if(l.getUTF(1)==115){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
            if(l.getUTF(2)==121){
                if((l.getUTF(4)==99)&&(l.getUTF(3)==110)){
                    l.ty = TokenSymbol;
                    l.tl = 5;
                    ACCEPT = true;
                }
            }
        }
    }
    return ACCEPT;
}
function defined_token_870ef36bec3a881f(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==43){
        val = l.getUTF(1);
        if(val==61){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        } else if(val==43){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        }
    }
    return ACCEPT;
}
function defined_token_876f036172605c26(l){
    let ACCEPT = false;
    if((((((l.getUTF(5)==110)&&(l.getUTF(4)==114))&&(l.getUTF(3)==117))&&(l.getUTF(2)==116))&&(l.getUTF(1)==101))&&(l.getUTF(0)==114)){
        l.ty = TokenSymbol;
        l.tl = 6;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_87b2bbc4cf92dae2(l){
    let ACCEPT = false;
    if((l.getUTF(1)==63)&&(l.getUTF(0)==63)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_87cd28843f68bc2f(l){
    let ACCEPT = false;
    if((l.getUTF(1)==61)&&(l.getUTF(0)==94)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_88fe0e82e8d7b114(l){
    let ACCEPT = false;
    if((l.getUTF(1)==42)&&(l.getUTF(0)==47)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_8b998ab1c79c37f4(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==100){
        val = l.getUTF(1);
        if(val==101){
            val = l.getUTF(2);
            if(val==102){
                if((((l.getUTF(6)==116)&&(l.getUTF(5)==108))&&(l.getUTF(4)==117))&&(l.getUTF(3)==97)){
                    l.ty = TokenSymbol;
                    l.tl = 7;
                    ACCEPT = true;
                }
            } else if(val==108){
                if(((l.getUTF(5)==101)&&(l.getUTF(4)==116))&&(l.getUTF(3)==101)){
                    l.ty = TokenSymbol;
                    l.tl = 6;
                    ACCEPT = true;
                }
            } else if(val==98){
                if(((((l.getUTF(7)==114)&&(l.getUTF(6)==101))&&(l.getUTF(5)==103))&&(l.getUTF(4)==103))&&(l.getUTF(3)==117)){
                    l.ty = TokenSymbol;
                    l.tl = 8;
                    ACCEPT = true;
                }
            }
        } else if(val==111){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        }
    }
    return ACCEPT;
}
function defined_token_8bbb4e33781aec74(l){
    let ACCEPT = false;
    if((l.getUTF(10)!=NaN)&&((((((((((l.getUTF(9)==102)&&(l.getUTF(8)==111))&&(l.getUTF(7)==101))&&(l.getUTF(6)==99))&&(l.getUTF(5)==110))&&(l.getUTF(4)==97))&&(l.getUTF(3)==116))&&(l.getUTF(2)==115))&&(l.getUTF(1)==110))&&(l.getUTF(0)==105))){
        l.ty = TokenSymbol;
        l.tl = 10;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_8c2d44d7057fe753(l){
    let ACCEPT = false;
    if((l.getUTF(2)!=NaN)&&((l.getUTF(1)==61)&&(l.getUTF(0)==94))){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_8c647931e6bf0c07(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==45){
        val = l.getUTF(1);
        if(val==45){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        } else if(val==61){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        }
    }
    return ACCEPT;
}
function defined_token_8d305de3f9ddde92(l){
    let ACCEPT = false;
    if((l.getUTF(1)==61)&&(l.getUTF(0)==38)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_8e8ee78381c90ca5(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==116){
        val = l.getUTF(1);
        if(val==104){
            val = l.getUTF(2);
            if(val==105){
                if(l.getUTF(3)==115){
                    l.ty = TokenSymbol;
                    l.tl = 4;
                    ACCEPT = true;
                }
            } else if(val==114){
                if((l.getUTF(4)==119)&&(l.getUTF(3)==111)){
                    l.ty = TokenSymbol;
                    l.tl = 5;
                    ACCEPT = true;
                }
            }
        } else if(val==97){
            if((((l.getUTF(5)==116)&&(l.getUTF(4)==101))&&(l.getUTF(3)==103))&&(l.getUTF(2)==114)){
                l.ty = TokenSymbol;
                l.tl = 6;
                ACCEPT = true;
            }
        } else if(val==114){
            val = l.getUTF(2);
            if(val==117){
                if(l.getUTF(3)==101){
                    l.ty = TokenSymbol;
                    l.tl = 4;
                    ACCEPT = true;
                }
            } else if(val==121){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        } else if(val==121){
            if((((l.getUTF(5)==102)&&(l.getUTF(4)==111))&&(l.getUTF(3)==101))&&(l.getUTF(2)==112)){
                l.ty = TokenSymbol;
                l.tl = 6;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_8ed5fb4bce429503(l){
    let ACCEPT = false;
    if((((((l.getUTF(5)==101)&&(l.getUTF(4)==116))&&(l.getUTF(3)==101))&&(l.getUTF(2)==108))&&(l.getUTF(1)==101))&&(l.getUTF(0)==100)){
        l.ty = TokenSymbol;
        l.tl = 6;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_8f5d282f35165648(l){
    let ACCEPT = false;
    if(((l.getUTF(2)==116)&&(l.getUTF(1)==101))&&(l.getUTF(0)==103)){
        l.ty = TokenSymbol;
        l.tl = 3;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_8fdd5a50d81134d2(l){
    let ACCEPT = false;
    if(((((l.getUTF(4)==114)&&(l.getUTF(3)==101))&&(l.getUTF(2)==112))&&(l.getUTF(1)==117))&&(l.getUTF(0)==115)){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_910c81aa02511c5e(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==62){
        if(l.getUTF(1)==62){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
            if(l.getUTF(2)==62){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_911b730840de3b6c(l){
    let ACCEPT = false;
    if((l.getUTF(1)==102)&&(l.getUTF(0)==105)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_912bb2f6b2683177(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==99){
        val = l.getUTF(1);
        if(val==111){
            if(l.getUTF(2)==110){
                val = l.getUTF(3);
                if(val==116){
                    if((((l.getUTF(7)==101)&&(l.getUTF(6)==117))&&(l.getUTF(5)==110))&&(l.getUTF(4)==105)){
                        l.ty = TokenSymbol;
                        l.tl = 8;
                        ACCEPT = true;
                    }
                } else if(val==115){
                    if(l.getUTF(4)==116){
                        l.ty = TokenSymbol;
                        l.tl = 5;
                        ACCEPT = true;
                    }
                }
            }
        } else if(val==108){
            if(((l.getUTF(4)==115)&&(l.getUTF(3)==115))&&(l.getUTF(2)==97)){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_926ab0b5b37a4ddd(l){
    let ACCEPT = false;
    if(((((l.getUTF(4)==101)&&(l.getUTF(3)==108))&&(l.getUTF(2)==105))&&(l.getUTF(1)==104))&&(l.getUTF(0)==119)){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_93b20e8c3e2b885c(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==105){
        val = l.getUTF(1);
        if(val==109){
            if((((((((l.getUTF(9)==115)&&(l.getUTF(8)==116))&&(l.getUTF(7)==110))&&(l.getUTF(6)==101))&&(l.getUTF(5)==109))&&(l.getUTF(4)==101))&&(l.getUTF(3)==108))&&(l.getUTF(2)==112)){
                l.ty = TokenSymbol;
                l.tl = 10;
                ACCEPT = true;
            }
        } else if(val==110){
            if((l.getUTF(9)!=NaN)&&(((((((l.getUTF(8)==101)&&(l.getUTF(7)==99))&&(l.getUTF(6)==97))&&(l.getUTF(5)==102))&&(l.getUTF(4)==114))&&(l.getUTF(3)==101))&&(l.getUTF(2)==116))){
                l.ty = TokenSymbol;
                l.tl = 9;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_9451180aac506098(l){
    let ACCEPT = false;
    if((((((l.getUTF(5)==102)&&(l.getUTF(4)==111))&&(l.getUTF(3)==101))&&(l.getUTF(2)==112))&&(l.getUTF(1)==121))&&(l.getUTF(0)==116)){
        l.ty = TokenSymbol;
        l.tl = 6;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_967ffd9bf1cf840d(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==102){
        val = l.getUTF(1);
        if(val==114){
            if((l.getUTF(3)==109)&&(l.getUTF(2)==111)){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        } else if(val==97){
            if(((l.getUTF(4)==101)&&(l.getUTF(3)==115))&&(l.getUTF(2)==108)){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        } else if(val==111){
            if(l.getUTF(2)==114){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        } else if(val==117){
            if((((((l.getUTF(7)==110)&&(l.getUTF(6)==111))&&(l.getUTF(5)==105))&&(l.getUTF(4)==116))&&(l.getUTF(3)==99))&&(l.getUTF(2)==110)){
                l.ty = TokenSymbol;
                l.tl = 8;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_96ff725e67a4b342(l){
    let ACCEPT = false;
    if((l.typeAt(4)!=TokenIdentifier)&&((((l.getUTF(3)==108)&&(l.getUTF(2)==108))&&(l.getUTF(1)==117))&&(l.getUTF(0)==110))){
        l.ty = TokenSymbol;
        l.tl = 4;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_97485949e321ad2b(l){
    let ACCEPT = false;
    if((l.getUTF(1)!=121)&&(l.getUTF(0)==92)){
        l.ty = TokenSymbol;
        l.tl = 1;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_97755a959607b02c(l){
    let ACCEPT = false;
    if((l.getUTF(2)!=NaN)&&((l.getUTF(1)==61)&&(l.getUTF(0)==43))){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_97774f2b5bfeb250(l){
    let ACCEPT = false;
    if((l.getUTF(1)==61)&&(l.getUTF(0)==47)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_99035833d16742d9(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==110){
        val = l.getUTF(1);
        if(val==101){
            if(l.getUTF(2)==119){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        } else if(val==117){
            if((l.getUTF(3)==108)&&(l.getUTF(2)==108)){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_99376be254728810(l){
    let ACCEPT = false;
    if((((l.getUTF(3)==101)&&(l.getUTF(2)==117))&&(l.getUTF(1)==114))&&(l.getUTF(0)==116)){
        l.ty = TokenSymbol;
        l.tl = 4;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_9b4384e3c50814ee(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==105){
        val = l.getUTF(1);
        if(val==102){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        } else if(val==109){
            if(l.getUTF(2)==112){
                val = l.getUTF(3);
                if(val==111){
                    if((l.typeAt(6)!=TokenIdentifier)&&((l.getUTF(5)==116)&&(l.getUTF(4)==114))){
                        l.ty = TokenSymbol;
                        l.tl = 6;
                        ACCEPT = true;
                    }
                } else if(val==108){
                    if((l.typeAt(10)!=TokenIdentifier)&&((((((l.getUTF(9)==115)&&(l.getUTF(8)==116))&&(l.getUTF(7)==110))&&(l.getUTF(6)==101))&&(l.getUTF(5)==109))&&(l.getUTF(4)==101))){
                        l.ty = TokenSymbol;
                        l.tl = 10;
                        ACCEPT = true;
                    }
                }
            }
        } else if(val==110){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
            val = l.getUTF(2);
            if(val==115){
                if((l.typeAt(10)!=TokenIdentifier)&&(((((((l.getUTF(9)==102)&&(l.getUTF(8)==111))&&(l.getUTF(7)==101))&&(l.getUTF(6)==99))&&(l.getUTF(5)==110))&&(l.getUTF(4)==97))&&(l.getUTF(3)==116))){
                    l.ty = TokenSymbol;
                    l.tl = 10;
                    ACCEPT = true;
                }
            } else if(val==116){
                if((l.typeAt(9)!=TokenIdentifier)&&((((((l.getUTF(8)==101)&&(l.getUTF(7)==99))&&(l.getUTF(6)==97))&&(l.getUTF(5)==102))&&(l.getUTF(4)==114))&&(l.getUTF(3)==101))){
                    l.ty = TokenSymbol;
                    l.tl = 9;
                    ACCEPT = true;
                }
            }
        }
    }
    return ACCEPT;
}
function defined_token_9c56be6039102106(l){
    let ACCEPT = false;
    if((l.typeAt(4)!=TokenIdentifier)&&((((l.getUTF(3)==115)&&(l.getUTF(2)==105))&&(l.getUTF(1)==104))&&(l.getUTF(0)==116))){
        l.ty = TokenSymbol;
        l.tl = 4;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_9d56a2003e2b2110(l){
    let ACCEPT = false;
    if((l.getUTF(1)==61)&&(l.getUTF(0)==45)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_9ece5224cf88b53d(l){
    let ACCEPT = false;
    if((l.typeAt(6)!=TokenIdentifier)&&((((((l.getUTF(5)==116)&&(l.getUTF(4)==114))&&(l.getUTF(3)==111))&&(l.getUTF(2)==112))&&(l.getUTF(1)==120))&&(l.getUTF(0)==101))){
        l.ty = TokenSymbol;
        l.tl = 6;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_9f5e0fa0456f67cf(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==116){
        val = l.getUTF(1);
        if(val==104){
            val = l.getUTF(2);
            if(val==105){
                if(l.getUTF(3)==115){
                    l.ty = TokenSymbol;
                    l.tl = 4;
                    ACCEPT = true;
                }
            } else if(val==114){
                if((l.getUTF(4)==119)&&(l.getUTF(3)==111)){
                    l.ty = TokenSymbol;
                    l.tl = 5;
                    ACCEPT = true;
                }
            }
        } else if(val==114){
            val = l.getUTF(2);
            if(val==121){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            } else if(val==117){
                if(l.getUTF(3)==101){
                    l.ty = TokenSymbol;
                    l.tl = 4;
                    ACCEPT = true;
                }
            }
        } else if(val==121){
            if((((l.getUTF(5)==102)&&(l.getUTF(4)==111))&&(l.getUTF(3)==101))&&(l.getUTF(2)==112)){
                l.ty = TokenSymbol;
                l.tl = 6;
                ACCEPT = true;
            }
        } else if(val==97){
            if((((l.getUTF(5)==116)&&(l.getUTF(4)==101))&&(l.getUTF(3)==103))&&(l.getUTF(2)==114)){
                l.ty = TokenSymbol;
                l.tl = 6;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_a3300687f6beda2f(l){
    let ACCEPT = false;
    if(((((l.getUTF(4)==116)&&(l.getUTF(3)==115))&&(l.getUTF(2)==110))&&(l.getUTF(1)==111))&&(l.getUTF(0)==99)){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_a7b718719b23bb48(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==99){
        val = l.getUTF(1);
        if(val==111){
            if(l.getUTF(2)==110){
                val = l.getUTF(3);
                if(val==116){
                    if((((l.getUTF(7)==101)&&(l.getUTF(6)==117))&&(l.getUTF(5)==110))&&(l.getUTF(4)==105)){
                        l.ty = TokenSymbol;
                        l.tl = 8;
                        ACCEPT = true;
                    }
                } else if(val==115){
                    if(l.getUTF(4)==116){
                        l.ty = TokenSymbol;
                        l.tl = 5;
                        ACCEPT = true;
                    }
                }
            }
        } else if(val==108){
            if(((l.getUTF(4)==115)&&(l.getUTF(3)==115))&&(l.getUTF(2)==97)){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        } else if(val==97){
            if((l.getUTF(3)==101)&&(l.getUTF(2)==115)){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_aa9a90ddc84fac92(l){
    let ACCEPT = false;
    if((l.typeAt(8)!=TokenIdentifier)&&((((((((l.getUTF(7)==110)&&(l.getUTF(6)==111))&&(l.getUTF(5)==105))&&(l.getUTF(4)==116))&&(l.getUTF(3)==99))&&(l.getUTF(2)==110))&&(l.getUTF(1)==117))&&(l.getUTF(0)==102))){
        l.ty = TokenSymbol;
        l.tl = 8;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_aaa75300a4a9f79d(l){
    let ACCEPT = false;
    if(((l.getUTF(3)!=NaN)&&(l.getUTF(3)!=NaN))&&(((l.getUTF(2)==61)&&(l.getUTF(1)==42))&&(l.getUTF(0)==42))){
        l.ty = TokenSymbol;
        l.tl = 3;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_aac16ca323764d7a(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==119){
        val = l.getUTF(1);
        if(val==104){
            if(((l.getUTF(4)==101)&&(l.getUTF(3)==108))&&(l.getUTF(2)==105)){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        } else if(val==105){
            if((l.getUTF(3)==104)&&(l.getUTF(2)==116)){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_ac4e40d39583f370(l){
    let ACCEPT = false;
    if(((((((l.getUTF(6)==121)&&(l.getUTF(5)==108))&&(l.getUTF(4)==108))&&(l.getUTF(3)==97))&&(l.getUTF(2)==110))&&(l.getUTF(1)==105))&&(l.getUTF(0)==102)){
        l.ty = TokenSymbol;
        l.tl = 7;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_ad665389bc23e01f(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==48){
        val = l.getUTF(1);
        if(val==111){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        } else if(val==79){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        }
    }
    return ACCEPT;
}
function defined_token_ae2088ea4af8ad53(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==119){
        val = l.getUTF(1);
        if(val==104){
            if((l.typeAt(5)!=TokenIdentifier)&&(((l.getUTF(4)==101)&&(l.getUTF(3)==108))&&(l.getUTF(2)==105))){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        } else if(val==105){
            if((l.typeAt(4)!=TokenIdentifier)&&((l.getUTF(3)==104)&&(l.getUTF(2)==116))){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_af69c622b99813ca(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==105){
        if(l.getUTF(1)==110){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
            if(l.getUTF(2)==115){
                if(((((((l.getUTF(9)==102)&&(l.getUTF(8)==111))&&(l.getUTF(7)==101))&&(l.getUTF(6)==99))&&(l.getUTF(5)==110))&&(l.getUTF(4)==97))&&(l.getUTF(3)==116)){
                    l.ty = TokenSymbol;
                    l.tl = 10;
                    ACCEPT = true;
                }
            }
        }
    }
    return ACCEPT;
}
function defined_token_b0c9e74960406db7(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==115){
        val = l.getUTF(1);
        if(val==117){
            if((l.typeAt(5)!=TokenIdentifier)&&(((l.getUTF(4)==114)&&(l.getUTF(3)==101))&&(l.getUTF(2)==112))){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        } else if(val==119){
            if((l.typeAt(6)!=TokenIdentifier)&&((((l.getUTF(5)==104)&&(l.getUTF(4)==99))&&(l.getUTF(3)==116))&&(l.getUTF(2)==105))){
                l.ty = TokenSymbol;
                l.tl = 6;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_b13b6a49957e832f(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==99){
        val = l.getUTF(1);
        if(val==108){
            if((l.typeAt(5)!=TokenIdentifier)&&(((l.getUTF(4)==115)&&(l.getUTF(3)==115))&&(l.getUTF(2)==97))){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        } else if(val==111){
            if((l.typeAt(5)!=TokenIdentifier)&&(((l.getUTF(4)==116)&&(l.getUTF(3)==115))&&(l.getUTF(2)==110))){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_b2d596d8d856b425(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==116){
        val = l.getUTF(1);
        if(val==104){
            if((l.typeAt(4)!=TokenIdentifier)&&((l.getUTF(3)==115)&&(l.getUTF(2)==105))){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        } else if(val==114){
            if((l.typeAt(4)!=TokenIdentifier)&&((l.getUTF(3)==101)&&(l.getUTF(2)==117))){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        } else if(val==121){
            if((l.typeAt(6)!=TokenIdentifier)&&((((l.getUTF(5)==102)&&(l.getUTF(4)==111))&&(l.getUTF(3)==101))&&(l.getUTF(2)==112))){
                l.ty = TokenSymbol;
                l.tl = 6;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_b3658faeba5b21ae(l){
    let ACCEPT = false;
    if((l.typeAt(3)!=TokenIdentifier)&&(((l.getUTF(2)==116)&&(l.getUTF(1)==101))&&(l.getUTF(0)==103))){
        l.ty = TokenSymbol;
        l.tl = 3;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_b4440dba03e6daa2(l){
    let ACCEPT = false;
    if(((l.getUTF(2)==61)&&(l.getUTF(1)==60))&&(l.getUTF(0)==60)){
        l.ty = TokenSymbol;
        l.tl = 3;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_b64c7c58a10dcef3(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==118){
        val = l.getUTF(1);
        if(val==97){
            if(l.getUTF(2)==114){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        } else if(val==111){
            if((l.getUTF(3)==100)&&(l.getUTF(2)==105)){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_b6bc2531754746f6(l){
    let ACCEPT = false;
    if(((((l.getUTF(4)==104)&&(l.getUTF(3)==99))&&(l.getUTF(2)==116))&&(l.getUTF(1)==97))&&(l.getUTF(0)==99)){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_b7730e2b48fe68f8(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==105){
        val = l.getUTF(1);
        if(val==102){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        } else if(val==109){
            if(l.getUTF(2)==112){
                val = l.getUTF(3);
                if(val==111){
                    if((l.getUTF(5)==116)&&(l.getUTF(4)==114)){
                        l.ty = TokenSymbol;
                        l.tl = 6;
                        ACCEPT = true;
                    }
                } else if(val==108){
                    if((((((l.getUTF(9)==115)&&(l.getUTF(8)==116))&&(l.getUTF(7)==110))&&(l.getUTF(6)==101))&&(l.getUTF(5)==109))&&(l.getUTF(4)==101)){
                        l.ty = TokenSymbol;
                        l.tl = 10;
                        ACCEPT = true;
                    }
                }
            }
        } else if(val==110){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
            val = l.getUTF(2);
            if(val==115){
                if(((((((l.getUTF(9)==102)&&(l.getUTF(8)==111))&&(l.getUTF(7)==101))&&(l.getUTF(6)==99))&&(l.getUTF(5)==110))&&(l.getUTF(4)==97))&&(l.getUTF(3)==116)){
                    l.ty = TokenSymbol;
                    l.tl = 10;
                    ACCEPT = true;
                }
            } else if(val==116){
                if((((((l.getUTF(8)==101)&&(l.getUTF(7)==99))&&(l.getUTF(6)==97))&&(l.getUTF(5)==102))&&(l.getUTF(4)==114))&&(l.getUTF(3)==101)){
                    l.ty = TokenSymbol;
                    l.tl = 9;
                    ACCEPT = true;
                }
            }
        }
    }
    return ACCEPT;
}
function defined_token_b821a301e2038a49(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==62){
        if(l.getUTF(1)==62){
            val = l.getUTF(2);
            if(val==61){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            } else if(val==62){
                if(l.getUTF(3)==61){
                    l.ty = TokenSymbol;
                    l.tl = 4;
                    ACCEPT = true;
                }
            }
        }
    }
    return ACCEPT;
}
function defined_token_b910302f4210711c(l){
    let ACCEPT = false;
    if((l.getUTF(1)==110)&&(l.getUTF(0)==105)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_bab67a61f0334bce(l){
    let ACCEPT = false;
    if((((((((l.getUTF(7)==114)&&(l.getUTF(6)==101))&&(l.getUTF(5)==103))&&(l.getUTF(4)==103))&&(l.getUTF(3)==117))&&(l.getUTF(2)==98))&&(l.getUTF(1)==101))&&(l.getUTF(0)==100)){
        l.ty = TokenSymbol;
        l.tl = 8;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_bc9f32cdea34416c(l){
    let ACCEPT = false;
    if((l.getUTF(2)!=NaN)&&((l.getUTF(1)==60)&&(l.getUTF(0)==60))){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_bd24781757667c87(l){
    let ACCEPT = false;
    if((l.typeAt(2)!=TokenIdentifier)&&((l.getUTF(1)==111)&&(l.getUTF(0)==100))){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_bfaf50116b98d6b4(l){
    let ACCEPT = false;
    if((l.getUTF(2)!=NaN)&&((l.getUTF(1)==63)&&(l.getUTF(0)==63))){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_c1fd3ef6c0b69274(l){
    let ACCEPT = false;
    if((l.getUTF(1)==47)&&(l.getUTF(0)==42)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_c24c5cb9b7913dbc(l){
    let ACCEPT = false;
    if((l.getUTF(1)==61)&&(l.getUTF(0)==43)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_c3524ff0dce64492(l){
    let ACCEPT = false;
    if(((((l.getUTF(4)==107)&&(l.getUTF(3)==97))&&(l.getUTF(2)==101))&&(l.getUTF(1)==114))&&(l.getUTF(0)==98)){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_c3b14b29a9dcf48e(l){
    let ACCEPT = false;
    if((l.typeAt(6)!=TokenIdentifier)&&((((((l.getUTF(5)==102)&&(l.getUTF(4)==111))&&(l.getUTF(3)==101))&&(l.getUTF(2)==112))&&(l.getUTF(1)==121))&&(l.getUTF(0)==116))){
        l.ty = TokenSymbol;
        l.tl = 6;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_c460df0c19b30757(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==99){
        val = l.getUTF(1);
        if(val==97){
            val = l.getUTF(2);
            if(val==115){
                if(l.getUTF(3)==101){
                    l.ty = TokenSymbol;
                    l.tl = 4;
                    ACCEPT = true;
                }
            } else if(val==116){
                if((l.getUTF(4)==104)&&(l.getUTF(3)==99)){
                    l.ty = TokenSymbol;
                    l.tl = 5;
                    ACCEPT = true;
                }
            }
        } else if(val==108){
            if(((l.getUTF(4)==115)&&(l.getUTF(3)==115))&&(l.getUTF(2)==97)){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        } else if(val==111){
            if(l.getUTF(2)==110){
                val = l.getUTF(3);
                if(val==115){
                    if(l.getUTF(4)==116){
                        l.ty = TokenSymbol;
                        l.tl = 5;
                        ACCEPT = true;
                    }
                } else if(val==116){
                    if((((l.getUTF(7)==101)&&(l.getUTF(6)==117))&&(l.getUTF(5)==110))&&(l.getUTF(4)==105)){
                        l.ty = TokenSymbol;
                        l.tl = 8;
                        ACCEPT = true;
                    }
                }
            }
        }
    }
    return ACCEPT;
}
function defined_token_c4d5aeb40acb5412(l){
    let ACCEPT = false;
    if((((((l.getUTF(5)==104)&&(l.getUTF(4)==99))&&(l.getUTF(3)==116))&&(l.getUTF(2)==105))&&(l.getUTF(1)==119))&&(l.getUTF(0)==115)){
        l.ty = TokenSymbol;
        l.tl = 6;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_c69f04f3bf4a100f(l){
    let ACCEPT = false;
    if((l.typeAt(3)!=TokenIdentifier)&&(((l.getUTF(2)==121)&&(l.getUTF(1)==114))&&(l.getUTF(0)==116))){
        l.ty = TokenSymbol;
        l.tl = 3;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_c6b5fbb944702d5a(l){
    let ACCEPT = false;
    if((l.getUTF(1)==102)&&(l.getUTF(0)==111)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_c7d7983a743dfb89(l){
    let ACCEPT = false;
    if((l.getUTF(2)!=NaN)&&((l.getUTF(1)==61)&&(l.getUTF(0)==38))){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_c99da5803908ca28(l){
    let ACCEPT = false;
    if((l.typeAt(5)!=TokenIdentifier)&&(((((l.getUTF(4)==101)&&(l.getUTF(3)==108))&&(l.getUTF(2)==105))&&(l.getUTF(1)==104))&&(l.getUTF(0)==119))){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_ca53d8e93addfaf5(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==116){
        val = l.getUTF(1);
        if(val==104){
            if((l.getUTF(3)==115)&&(l.getUTF(2)==105)){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        } else if(val==97){
            if((((l.getUTF(5)==116)&&(l.getUTF(4)==101))&&(l.getUTF(3)==103))&&(l.getUTF(2)==114)){
                l.ty = TokenSymbol;
                l.tl = 6;
                ACCEPT = true;
            }
        } else if(val==114){
            if((l.getUTF(3)==101)&&(l.getUTF(2)==117)){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        } else if(val==121){
            if((((l.getUTF(5)==102)&&(l.getUTF(4)==111))&&(l.getUTF(3)==101))&&(l.getUTF(2)==112)){
                l.ty = TokenSymbol;
                l.tl = 6;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_ca5929fc31557c51(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==99){
        val = l.getUTF(1);
        if(val==97){
            if((l.getUTF(3)==101)&&(l.getUTF(2)==115)){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        } else if(val==111){
            if(l.getUTF(2)==110){
                val = l.getUTF(3);
                if(val==116){
                    if((((l.getUTF(7)==101)&&(l.getUTF(6)==117))&&(l.getUTF(5)==110))&&(l.getUTF(4)==105)){
                        l.ty = TokenSymbol;
                        l.tl = 8;
                        ACCEPT = true;
                    }
                } else if(val==115){
                    if(l.getUTF(4)==116){
                        l.ty = TokenSymbol;
                        l.tl = 5;
                        ACCEPT = true;
                    }
                }
            }
        } else if(val==108){
            if(((l.getUTF(4)==115)&&(l.getUTF(3)==115))&&(l.getUTF(2)==97)){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_cb1a40816016c1ec(l){
    let ACCEPT = false;
    if((l.typeAt(5)!=TokenIdentifier)&&(((((l.getUTF(4)==114)&&(l.getUTF(3)==101))&&(l.getUTF(2)==112))&&(l.getUTF(1)==117))&&(l.getUTF(0)==115))){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_cbaaba63eba9e5c4(l){
    let ACCEPT = false;
    if((l.typeAt(6)!=TokenIdentifier)&&((((((l.getUTF(5)==110)&&(l.getUTF(4)==114))&&(l.getUTF(3)==117))&&(l.getUTF(2)==116))&&(l.getUTF(1)==101))&&(l.getUTF(0)==114))){
        l.ty = TokenSymbol;
        l.tl = 6;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_cf0f887595c20618(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==102){
        val = l.getUTF(1);
        if(val==105){
            if(((((l.getUTF(6)==121)&&(l.getUTF(5)==108))&&(l.getUTF(4)==108))&&(l.getUTF(3)==97))&&(l.getUTF(2)==110)){
                l.ty = TokenSymbol;
                l.tl = 7;
                ACCEPT = true;
            }
        } else if(val==111){
            if(l.getUTF(2)==114){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        } else if(val==117){
            if((((((l.getUTF(7)==110)&&(l.getUTF(6)==111))&&(l.getUTF(5)==105))&&(l.getUTF(4)==116))&&(l.getUTF(3)==99))&&(l.getUTF(2)==110)){
                l.ty = TokenSymbol;
                l.tl = 8;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_cf21971e32338a79(l){
    let ACCEPT = false;
    if((l.getUTF(2)!=NaN)&&((l.getUTF(1)==61)&&(l.getUTF(0)==124))){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_d1de557e71993f67(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==124){
        val = l.getUTF(1);
        if(val==61){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        } else if(val==124){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        }
    }
    return ACCEPT;
}
function defined_token_d2484e28b4e85b35(l){
    let ACCEPT = false;
    if(((l.getUTF(5)!=NaN)&&(l.typeAt(5)!=TokenIdentifier))&&(((((l.getUTF(4)==99)&&(l.getUTF(3)==110))&&(l.getUTF(2)==121))&&(l.getUTF(1)==115))&&(l.getUTF(0)==97))){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_d38e0913b811b457(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==115){
        val = l.getUTF(1);
        if(val==117){
            if(((l.getUTF(4)==114)&&(l.getUTF(3)==101))&&(l.getUTF(2)==112)){
                l.ty = TokenSymbol;
                l.tl = 5;
                ACCEPT = true;
            }
        } else if(val==101){
            if(l.getUTF(2)==116){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_d4a7e22f69f4ee35(l){
    let ACCEPT = false;
    if(((((l.getUTF(4)==99)&&(l.getUTF(3)==110))&&(l.getUTF(2)==121))&&(l.getUTF(1)==115))&&(l.getUTF(0)==97)){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_d4bc8ae8e31ef3aa(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==116){
        val = l.getUTF(1);
        if(val==104){
            val = l.getUTF(2);
            if(val==105){
                if(l.getUTF(3)==115){
                    l.ty = TokenSymbol;
                    l.tl = 4;
                    ACCEPT = true;
                }
            } else if(val==114){
                if((l.getUTF(4)==119)&&(l.getUTF(3)==111)){
                    l.ty = TokenSymbol;
                    l.tl = 5;
                    ACCEPT = true;
                }
            }
        } else if(val==114){
            val = l.getUTF(2);
            if(val==121){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            } else if(val==117){
                if(l.getUTF(3)==101){
                    l.ty = TokenSymbol;
                    l.tl = 4;
                    ACCEPT = true;
                }
            }
        } else if(val==121){
            if((((l.getUTF(5)==102)&&(l.getUTF(4)==111))&&(l.getUTF(3)==101))&&(l.getUTF(2)==112)){
                l.ty = TokenSymbol;
                l.tl = 6;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_d6409f9036f4b773(l){
    let ACCEPT = false;
    if((l.typeAt(3)!=TokenIdentifier)&&(((l.getUTF(2)==114)&&(l.getUTF(1)==111))&&(l.getUTF(0)==102))){
        l.ty = TokenSymbol;
        l.tl = 3;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_d8f9d336d83ac87c(l){
    let ACCEPT = false;
    if(((((l.getUTF(4)==100)&&(l.getUTF(3)==108))&&(l.getUTF(2)==101))&&(l.getUTF(1)==105))&&(l.getUTF(0)==121)){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_da195cd7e0c0b959(l){
    let ACCEPT = false;
    if(((((l.getUTF(4)==119)&&(l.getUTF(3)==111))&&(l.getUTF(2)==114))&&(l.getUTF(1)==104))&&(l.getUTF(0)==116)){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_dad2c38b0a2035e1(l){
    let ACCEPT = false;
    if((l.getUTF(2)!=NaN)&&((l.getUTF(1)==61)&&(l.getUTF(0)==62))){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_dc17de0546cfa0c9(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==112){
        val = l.getUTF(1);
        if(val==97){
            if(((((l.getUTF(6)==101)&&(l.getUTF(5)==103))&&(l.getUTF(4)==97))&&(l.getUTF(3)==107))&&(l.getUTF(2)==99)){
                l.ty = TokenSymbol;
                l.tl = 7;
                ACCEPT = true;
            }
        } else if(val==114){
            val = l.getUTF(2);
            if(val==111){
                if((((((l.getUTF(8)==100)&&(l.getUTF(7)==101))&&(l.getUTF(6)==116))&&(l.getUTF(5)==99))&&(l.getUTF(4)==101))&&(l.getUTF(3)==116)){
                    l.ty = TokenSymbol;
                    l.tl = 9;
                    ACCEPT = true;
                }
            } else if(val==105){
                if((((l.getUTF(6)==101)&&(l.getUTF(5)==116))&&(l.getUTF(4)==97))&&(l.getUTF(3)==118)){
                    l.ty = TokenSymbol;
                    l.tl = 7;
                    ACCEPT = true;
                }
            }
        } else if(val==117){
            if((((l.getUTF(5)==99)&&(l.getUTF(4)==105))&&(l.getUTF(3)==108))&&(l.getUTF(2)==98)){
                l.ty = TokenSymbol;
                l.tl = 6;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_dcd094f052938e12(l){
    let ACCEPT = false;
    if((l.getUTF(1)!=121)&&(l.getUTF(0)==39)){
        l.ty = TokenSymbol;
        l.tl = 1;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_ddd8f7298284e05e(l){
    let ACCEPT = false;
    if((l.typeAt(5)!=TokenIdentifier)&&(((((l.getUTF(4)==116)&&(l.getUTF(3)==115))&&(l.getUTF(2)==110))&&(l.getUTF(1)==111))&&(l.getUTF(0)==99))){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_ded0f96a7228c7c5(l){
    let ACCEPT = false;
    if(((((l.getUTF(4)==116)&&(l.getUTF(3)==105))&&(l.getUTF(2)==97))&&(l.getUTF(1)==119))&&(l.getUTF(0)==97)){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_e01a6bec7226ccc7(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==118){
        val = l.getUTF(1);
        if(val==97){
            if((l.typeAt(3)!=TokenIdentifier)&&(l.getUTF(2)==114)){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            }
        } else if(val==111){
            if((l.typeAt(4)!=TokenIdentifier)&&((l.getUTF(3)==100)&&(l.getUTF(2)==105))){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function defined_token_e021d8532f9147fd(l){
    let ACCEPT = false;
    if(((((((l.getUTF(6)==115)&&(l.getUTF(5)==100))&&(l.getUTF(4)==110))&&(l.getUTF(3)==101))&&(l.getUTF(2)==116))&&(l.getUTF(1)==120))&&(l.getUTF(0)==101)){
        l.ty = TokenSymbol;
        l.tl = 7;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_e043e2118bdadad0(l){
    let ACCEPT = false;
    if((((((((l.getUTF(7)==110)&&(l.getUTF(6)==111))&&(l.getUTF(5)==105))&&(l.getUTF(4)==116))&&(l.getUTF(3)==99))&&(l.getUTF(2)==110))&&(l.getUTF(1)==117))&&(l.getUTF(0)==102)){
        l.ty = TokenSymbol;
        l.tl = 8;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_e1e77579dc125345(l){
    let ACCEPT = false;
    if((l.getUTF(5)!=NaN)&&(((((l.getUTF(4)==99)&&(l.getUTF(3)==110))&&(l.getUTF(2)==121))&&(l.getUTF(1)==115))&&(l.getUTF(0)==97))){
        l.ty = TokenSymbol;
        l.tl = 5;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_e8ddfc9b5a509a6c(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==100){
        val = l.getUTF(1);
        if(val==101){
            val = l.getUTF(2);
            if(val==108){
                if(((l.getUTF(5)==101)&&(l.getUTF(4)==116))&&(l.getUTF(3)==101)){
                    l.ty = TokenSymbol;
                    l.tl = 6;
                    ACCEPT = true;
                }
            } else if(val==98){
                if(((((l.getUTF(7)==114)&&(l.getUTF(6)==101))&&(l.getUTF(5)==103))&&(l.getUTF(4)==103))&&(l.getUTF(3)==117)){
                    l.ty = TokenSymbol;
                    l.tl = 8;
                    ACCEPT = true;
                }
            }
        } else if(val==111){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        }
    }
    return ACCEPT;
}
function defined_token_e98e2785cdca6f7a(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==100){
        val = l.getUTF(1);
        if(val==101){
            val = l.getUTF(2);
            if(val==108){
                if(((l.getUTF(5)==101)&&(l.getUTF(4)==116))&&(l.getUTF(3)==101)){
                    l.ty = TokenSymbol;
                    l.tl = 6;
                    ACCEPT = true;
                }
            } else if(val==98){
                if(((((l.getUTF(7)==114)&&(l.getUTF(6)==101))&&(l.getUTF(5)==103))&&(l.getUTF(4)==103))&&(l.getUTF(3)==117)){
                    l.ty = TokenSymbol;
                    l.tl = 8;
                    ACCEPT = true;
                }
            } else if(val==102){
                if((((l.getUTF(6)==116)&&(l.getUTF(5)==108))&&(l.getUTF(4)==117))&&(l.getUTF(3)==97)){
                    l.ty = TokenSymbol;
                    l.tl = 7;
                    ACCEPT = true;
                }
            }
        } else if(val==111){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        }
    }
    return ACCEPT;
}
function defined_token_eaad0114272c4ffc(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==62){
        if(l.getUTF(1)==62){
            val = l.getUTF(2);
            if(val==61){
                l.ty = TokenSymbol;
                l.tl = 3;
                ACCEPT = true;
            } else if(val==62){
                if((l.getUTF(4)!=NaN)&&(l.getUTF(3)==61)){
                    l.ty = TokenSymbol;
                    l.tl = 4;
                    ACCEPT = true;
                }
            }
        }
    }
    return ACCEPT;
}
function defined_token_eac5c307c1a80303(l){
    let ACCEPT = false;
    if((l.getUTF(2)!=NaN)&&((l.getUTF(1)==61)&&(l.getUTF(0)==45))){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_eb7f69039a78f607(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==101){
        val = l.getUTF(1);
        if(val==108){
            if((l.getUTF(3)==101)&&(l.getUTF(2)==115)){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        } else if(val==120){
            val = l.getUTF(2);
            if(val==112){
                if(((l.getUTF(5)==116)&&(l.getUTF(4)==114))&&(l.getUTF(3)==111)){
                    l.ty = TokenSymbol;
                    l.tl = 6;
                    ACCEPT = true;
                }
            } else if(val==116){
                if((((l.getUTF(6)==115)&&(l.getUTF(5)==100))&&(l.getUTF(4)==110))&&(l.getUTF(3)==101)){
                    l.ty = TokenSymbol;
                    l.tl = 7;
                    ACCEPT = true;
                }
            }
        }
    }
    return ACCEPT;
}
function defined_token_f188f6806e50797b(l){
    let ACCEPT = false;
    if(((l.getUTF(2)==116)&&(l.getUTF(1)==101))&&(l.getUTF(0)==108)){
        l.ty = TokenSymbol;
        l.tl = 3;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_f2ef34011f64cef0(l){
    let ACCEPT = false;
    if((l.getUTF(2)!=NaN)&&((l.getUTF(1)==45)&&(l.getUTF(0)==45))){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_f47f6de2d28c24e5(l){
    let ACCEPT = false;
    if(((l.getUTF(2)==46)&&(l.getUTF(1)==46))&&(l.getUTF(0)==46)){
        l.ty = TokenSymbol;
        l.tl = 3;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_f5b15d408b6280ad(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==63){
        val = l.getUTF(1);
        if(val==46){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        } else if(val==63){
            l.ty = TokenSymbol;
            l.tl = 2;
            ACCEPT = true;
        }
    }
    return ACCEPT;
}
function defined_token_f9bb6ce14e19288e(l){
    let ACCEPT = false;
    if(((l.getUTF(2)==114)&&(l.getUTF(1)==97))&&(l.getUTF(0)==118)){
        l.ty = TokenSymbol;
        l.tl = 3;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_fa8b90636881e66b(l){
    let ACCEPT = false;
    if((l.getUTF(1)==61)&&(l.getUTF(0)==124)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_fcc8b8fe09802878(l){
    let ACCEPT = false;
    if((l.getUTF(1)==115)&&(l.getUTF(0)==97)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_fdb42ce5868e4404(l){
    let ACCEPT = false;
    if(((((((l.getUTF(6)==116)&&(l.getUTF(5)==108))&&(l.getUTF(4)==117))&&(l.getUTF(3)==97))&&(l.getUTF(2)==102))&&(l.getUTF(1)==101))&&(l.getUTF(0)==100)){
        l.ty = TokenSymbol;
        l.tl = 7;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_fe70b6f5a727a201(l){
    let ACCEPT = false;
    if((l.getUTF(1)==45)&&(l.getUTF(0)==45)){
        l.ty = TokenSymbol;
        l.tl = 2;
        ACCEPT = true;
    }
    return ACCEPT;
}
function defined_token_febda2dce7bfd219(l){
    let ACCEPT = false;
    let val = 0;
    if(l.getUTF(0)==116){
        val = l.getUTF(1);
        if(val==104){
            if((l.typeAt(4)!=TokenIdentifier)&&((l.getUTF(3)==115)&&(l.getUTF(2)==105))){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        } else if(val==114){
            if((l.typeAt(4)!=TokenIdentifier)&&((l.getUTF(3)==101)&&(l.getUTF(2)==117))){
                l.ty = TokenSymbol;
                l.tl = 4;
                ACCEPT = true;
            }
        }
    }
    return ACCEPT;
}
function non_capture_5730bfe813b6b040(l){
    if(((l.utf==123/*[{]*/)||l.END())||l.isNL()/*[nl]*/){
        l.tl = 0;
        return true;
    }
    return false;
}
function non_capture_bde7550a3d6b8d46(l){
    if(l.isNL()/*[nl]*/){
        l.tl = 0;
        return true;
    }
    return false;
}
function sk_0496d836f85249a7(l){
    while(1){
        if(!((comments_tok_e92f206c4db1b5da(l)||l.isNL()/*[nl]*/)||l.isSP()/*[ws]*/)){
            break;
        }
        l.next();
    }
    return l;
}
function sk_1eb87aeb7f96e2bc(l){
    while(1){
        if(!(comments_tok_e92f206c4db1b5da(l)||l.isNL()/*[nl]*/)){
            break;
        }
        l.next();
    }
    return l;
}
function sk_2c33967dd3fbc823(l){
    while(1){
        if(!((comments_tok_e92f206c4db1b5da(l)||l.isNL()/*[nl]*/)||l.isSP()/*[ws]*/)){
            break;
        }
        l.next();
    }
    return l;
}
function sk_4f4880b4f72c035c(l){
    while(1){
        if(!(l.isSP()/*[ws]*/)){
            break;
        }
        l.next();
    }
    return l;
}
function sk_532e3acfd819c8d6(l){
    while(1){
        if(!(comments_tok_e92f206c4db1b5da(l)||l.isSP()/*[ws]*/)){
            break;
        }
        l.next();
    }
    return l;
}
function sk_65e591bca2634fa4(l){
    while(1){
        if(!(l.isNL()/*[nl]*/)){
            break;
        }
        l.next();
    }
    return l;
}
function sk_78c208d4d792ec90(l){
    while(1){
        if(!(comments_tok_e92f206c4db1b5da(l))){
            break;
        }
        l.next();
    }
    return l;
}
function sk_89d9202df84dae08(l){
    while(1){
        if(!((comments_tok_e92f206c4db1b5da(l)||l.isNL()/*[nl]*/)||l.isSP()/*[ws]*/)){
            break;
        }
        l.next();
    }
    return l;
}
function sk_8b3beafb7f007517(l){
    while(1){
        if(!(l.isNL()/*[nl]*/||l.isSP()/*[ws]*/)){
            break;
        }
        l.next();
    }
    return l;
}
function sk_bf1f87d90db7c93b(l){
    while(1){
        if(!(comments_tok_e92f206c4db1b5da(l)||l.isNL()/*[nl]*/)){
            break;
        }
        l.next();
    }
    return l;
}
function sk_d9819c16e680c950(l){
    while(1){
        if(!(comments_tok_e92f206c4db1b5da(l)||l.isSP()/*[ws]*/)){
            break;
        }
        l.next();
    }
    return l;
}
function set_error(val){
    if(error_ptr>=40980){
        return;
    }
    store((error_ptr++<<2)+error_array_offset,val);
}
function set_action(val){
    store((action_ptr++<<2)+action_array_offset,val);
}
function mark(){
    return action_ptr;
}
function assert_table(l,a,b,c,d){
    const utf = l.utf;
    if(utf<32){
        return (a&(1<<utf))!=0;
    } else if(utf<64){
        return (b&(1<<(utf-32)))!=0;
    } else if(utf<96){
        return (c&(1<<(utf-64)))!=0;
    } else if(utf<128){
        return (d&(1<<(utf-96)))!=0;
    }
    return false;
}
function reset(mark,origin,advanced,state){
    action_ptr = mark;
    advanced.sync(origin);
    return state;
}
function add_shift(l,char_len){
    const skip_delta = l.getOffsetRegionDelta();
    let has_skip = skip_delta>0;
    let has_len = char_len>0;
    let val = 1;
    val|=(skip_delta<<3);
    if(has_skip&&((skip_delta>36863)||(char_len>36863))){
        add_shift(l,0);
        has_skip = 0;
        val = 1;
    }
    val|=(((has_skip<<2)|(has_len<<1))|(char_len<<(3+(15*has_skip))));
    set_action(val);
    l.advanceOffsetRegion();
}
function add_reduce(state,sym_len,body,DNP = false){
    if(isOutputEnabled(state)){
        set_action(((DNP<<1)|((sym_len&16383)<<2))|(body<<16));
    }
}
function fail(l,state){
    if(!hasStateFailed(state)&&isOutputEnabled(state)){
        soft_fail(l,state);
    }
    return 0;
}
function soft_fail(l,state){
    set_error(l.off);
}
function assertSuccess(l,state,condition){
    if(!condition||hasStateFailed(state)){
        return fail(l,state);
    }
    return state;
}
function consume(l,state){
    if(isOutputEnabled(state)){
        add_shift(l,l.tl);
    }
    l.next();
}
function consume_empty(l){
    add_shift(l,0);
}
function assert_consume(l,state,accept){
    if(hasStateFailed(state)){
        return 0;
    }
    if(accept){
        consume(l,state);
        return state;
    } else {
        return 0;
    }
}
function reset_counters_and_pointers(){
    error_ptr = 0;
    action_ptr = 0;
}
/*production name: javascript
            grammar index: 0
            bodies:
	0:0 javascript=>• start - 
            compile time: 10.054ms*/;
function $javascript(l,state){
    debug_stack.push({ name:"javascript RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$module_body(l,state)){
        /*--unique-id--0--DO-NOT-REPLACE*/
        add_reduce(state,1,2);
        add_reduce(state,1,1);
        debug_stack.push({ name:"javascript RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"javascript RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: comments_group_07_100
            grammar index: 2
            bodies:
	2:2 comments_group_07_100=>• θws - 
		2:3 comments_group_07_100=>• θnl - 
		2:4 comments_group_07_100=>• θid - 
		2:5 comments_group_07_100=>• θnum - 
		2:6 comments_group_07_100=>• θsym - 
            compile time: 12.423ms*/;
function $comments_group_07_100(l,state){
    debug_stack.push({ name:"comments_group_07_100 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,(((l.isID()/*[id]*/||l.isNL()/*[nl]*/)||l.isNum()/*[num]*/)||l.isSym()/*[sym]*/)||l.isSP()/*[ws]*/)){
        /*consume*/
        /*
           2:2 comments_group_07_100=>θws •
           2:3 comments_group_07_100=>θnl •
           2:4 comments_group_07_100=>θid •
           2:5 comments_group_07_100=>θnum •
           2:6 comments_group_07_100=>θsym •
        */
        /*--unique-id--2--DO-NOT-REPLACE*/
        debug_stack.push({ name:"comments_group_07_100 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"comments_group_07_100 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: comments_HC_listbody1_101
            grammar index: 3
            bodies:
	3:7 comments_HC_listbody1_101=>• comments_HC_listbody1_101 comments_group_07_100 - 
		3:8 comments_HC_listbody1_101=>• comments_group_07_100 - 
            compile time: 22.435ms*/;
function $comments_HC_listbody1_101(l,state){
    debug_stack.push({ name:"comments_HC_listbody1_101 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$comments_group_07_100(l,state)){
        /*--unique-id--3--DO-NOT-REPLACE*/
        add_reduce(state,1,4);
        return $comments_HC_listbody1_101_goto(l,state,3);
    }
    debug_stack.push({ name:"comments_HC_listbody1_101 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $comments_HC_listbody1_101_goto(l,state,prod){
    debug_stack.push({ name:"comments_HC_listbody1_101 GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        if(defined_token_0ca2cff5a3c99027(l)/*[asterisk/]*/){
            return state;
        }
        if((((l.isID()/*[id]*/||l.isNL()/*[nl]*/)||l.isNum()/*[num]*/)||l.isSym()/*[sym]*/)||l.isSP()/*[ws]*/){
            /*peek-production-closure*/
            /*
               3:7 comments_HC_listbody1_101=>comments_HC_listbody1_101 • comments_group_07_100
            */
            if(state=$comments_group_07_100(l,state)){
                /*--unique-id--3--DO-NOT-REPLACE*/
                add_reduce(state,2,3);
                prod = 3;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"comments_HC_listbody1_101 GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==3);
}
/*production name: comments_group_012_102
            grammar index: 4
            bodies:
	4:9 comments_group_012_102=>• θws - 
		4:10 comments_group_012_102=>• θid - 
		4:11 comments_group_012_102=>• θnum - 
		4:12 comments_group_012_102=>• θsym - 
            compile time: 12.235ms*/;
function $comments_group_012_102(l,state){
    debug_stack.push({ name:"comments_group_012_102 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,((l.isID()/*[id]*/||l.isNum()/*[num]*/)||l.isSym()/*[sym]*/)||l.isSP()/*[ws]*/)){
        /*consume*/
        /*
           4:9 comments_group_012_102=>θws •
           4:10 comments_group_012_102=>θid •
           4:11 comments_group_012_102=>θnum •
           4:12 comments_group_012_102=>θsym •
        */
        /*--unique-id--4--DO-NOT-REPLACE*/
        debug_stack.push({ name:"comments_group_012_102 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"comments_group_012_102 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: comments_HC_listbody1_103
            grammar index: 5
            bodies:
	5:13 comments_HC_listbody1_103=>• comments_HC_listbody1_103 comments_group_012_102 - 
		5:14 comments_HC_listbody1_103=>• comments_group_012_102 - 
            compile time: 14.196ms*/;
function $comments_HC_listbody1_103(l,state){
    debug_stack.push({ name:"comments_HC_listbody1_103 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$comments_group_012_102(l,state)){
        /*--unique-id--5--DO-NOT-REPLACE*/
        add_reduce(state,1,4);
        return $comments_HC_listbody1_103_goto(l,state,5);
    }
    debug_stack.push({ name:"comments_HC_listbody1_103 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $comments_HC_listbody1_103_goto(l,state,prod){
    debug_stack.push({ name:"comments_HC_listbody1_103 GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        if(l.isNL()/*[nl]*/){
            return state;
        }
        if(((l.isID()/*[id]*/||l.isNum()/*[num]*/)||l.isSym()/*[sym]*/)||l.isSP()/*[ws]*/){
            /*peek-production-closure*/
            /*
               5:13 comments_HC_listbody1_103=>comments_HC_listbody1_103 • comments_group_012_102
            */
            if(state=$comments_group_012_102(l,state)){
                /*--unique-id--5--DO-NOT-REPLACE*/
                add_reduce(state,2,3);
                prod = 5;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"comments_HC_listbody1_103 GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==5);
}
/*production name: comments
            grammar index: 6
            bodies:
	6:15 comments=>• /* comments_HC_listbody1_101 * / - 
		6:16 comments=>• // comments_HC_listbody1_103 θnl - 
		6:17 comments=>• /* * / - 
		6:18 comments=>• // θnl - 
            compile time: 26.927ms*/;
function $comments(l,state){
    debug_stack.push({ name:"comments RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(defined_token_88fe0e82e8d7b114(l)/*[/asterisk]*/){
        /*peek*/
        /*
           6:15 comments=>• /* comments_HC_listbody1_101 * /
           6:17 comments=>• /* * /
        */
        let pk = l.copy();
        if(defined_token_0ca2cff5a3c99027(pk)/*[asterisk/]*/){
            /*peek-production-closure*/
            /*
               6:17 comments=>• /* * /
            */
            if(consume(l,state,tl)){ pk -2
                //sk_8b3beafb7f007517(l/*[ ws ][ nl ]*/);
                if(consume(l,state,tl)){ pk -1
                    /*--unique-id--6--DO-NOT-REPLACE*/
                    add_reduce(state,2,0);
                    debug_stack.push({ name:"comments RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        } else {
            /*peek-production-closure*/
            /*
               6:15 comments=>• /* comments_HC_listbody1_101 * /
            */
            if(assert_consume(l,state,defined_token_88fe0e82e8d7b114(l)/*[/asterisk]*/)){
                if(state=$comments_HC_listbody1_101(l,state)){
                    sk_8b3beafb7f007517(l/*[ ws ][ nl ]*/);
                    if(assert_consume(l,state,defined_token_c1fd3ef6c0b69274(l)/*[asterisk/]*/)){
                        /*--unique-id--6--DO-NOT-REPLACE*/
                        add_reduce(state,3,0);
                        debug_stack.push({ name:"comments RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                }
            }
        }
    } else if(defined_token_6b20aa97513f1fc7(l)/*[//]*/){
        /*peek*/
        /*
           6:16 comments=>• // comments_HC_listbody1_103 θnl
           6:18 comments=>• // θnl
        */
        let pk = l.copy();
        if(pk.isNL()/*[nl]*/){
            /*peek-production-closure*/
            /*
               6:18 comments=>• // θnl
            */
            if(assert_consume(l,state,defined_token_6b20aa97513f1fc7(l)/*[//]*/)){
                sk_4f4880b4f72c035c(l/*[ ws ]*/);
                if(assert_consume(l,state,l.isNL()/*[nl]*/)){
                    /*--unique-id--6--DO-NOT-REPLACE*/
                    add_reduce(state,2,0);
                    debug_stack.push({ name:"comments RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        } else {
            /*peek-production-closure*/
            /*
               6:16 comments=>• // comments_HC_listbody1_103 θnl
            */
            if(assert_consume(l,state,defined_token_6b20aa97513f1fc7(l)/*[//]*/)){
                sk_65e591bca2634fa4(l/*[ nl ]*/);
                if(state=$comments_HC_listbody1_103(l,state)){
                    sk_4f4880b4f72c035c(l/*[ ws ]*/);
                    if(assert_consume(l,state,l.isNL()/*[nl]*/)){
                        /*--unique-id--6--DO-NOT-REPLACE*/
                        add_reduce(state,3,0);
                        debug_stack.push({ name:"comments RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                }
            }
        }
    }
    debug_stack.push({ name:"comments RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: asi_group_017_104
            grammar index: 7
            bodies:
	7:19 asi_group_017_104=>• ; - 
		7:20 asi_group_017_104=>• { - 
		7:21 asi_group_017_104=>• θnl - 
		7:22 asi_group_017_104=>• END_OF_FILE - 
            compile time: 11.619ms*/;
function $asi_group_017_104(l,state){
    debug_stack.push({ name:"asi_group_017_104 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,non_capture_5730bfe813b6b040(l)/*[{] [nl] [END_OF_FILE]*/||(l.utf==59/*[;]*/))){
        /*consume*/
        /*
           7:19 asi_group_017_104=>; •
           7:20 asi_group_017_104=>{ •
           7:21 asi_group_017_104=>θnl •
           7:22 asi_group_017_104=>END_OF_FILE •
        */
        /*--unique-id--7--DO-NOT-REPLACE*/
        debug_stack.push({ name:"asi_group_017_104 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"asi_group_017_104 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: module_body
            grammar index: 11
            bodies:
	11:27 module_body=>• module_body module_item - 
		11:28 module_body=>• module_item - 
            compile time: 53.04ms*/;
function $module_body(l,state){
    debug_stack.push({ name:"module_body RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$module_item(l,state)){
        /*--unique-id--11--DO-NOT-REPLACE*/
        add_reduce(state,1,4);
        return $module_body_goto(l,state,11);
    }
    debug_stack.push({ name:"module_body RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $module_body_goto(l,state,prod){
    debug_stack.push({ name:"module_body GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
        if((((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(l)||defined_token_1f80f2e0a149fe3d(l)/*[import] [if]*/)||defined_token_15518d202137f56e(l)/*[export]*/)||defined_token_d8f9d336d83ac87c(l)/*[yield]*/)||defined_token_670f23e41126e00b(l)/*[async] [as] [await]*/)||defined_token_99035833d16742d9(l)/*[new] [null]*/)||defined_token_0a34667347bd2a3a(l)/*[super] [set] [switch]*/)||defined_token_8e8ee78381c90ca5(l)/*[this] [target] [true] [typeof] [throw] [try]*/)||defined_token_8f5d282f35165648(l)/*[get]*/)||defined_token_967ffd9bf1cf840d(l)/*[from] [false] [for] [function]*/)||defined_token_e8ddfc9b5a509a6c(l)/*[delete] [do] [debugger]*/)||defined_token_1ae4fe309b644fa1(l)/*[void] [var]*/)||defined_token_6d4f77707d3e0e5a(l)/*[++]*/)||defined_token_f2ef34011f64cef0(l)/*[--]*/)||defined_token_aac16ca323764d7a(l)/*[while] [with]*/)||defined_token_912bb2f6b2683177(l)/*[continue] [class] [const]*/)||defined_token_c3524ff0dce64492(l)/*[break]*/)||defined_token_876f036172605c26(l)/*[return]*/)||defined_token_f188f6806e50797b(l)/*[let]*/)||assert_table(l,0x0,0x800a986,0x8000000,0x48000001)/*tbl:[ { ] [ ( ] [ [ ] [ / ] [ " ] [ ' ] [ ` ] [ + ] [ - ] [ ~ ] [ ! ] [ ; ]*/)||l.isNum()/*[num]*/){
            /*assert-production-closure*/
            /*
               11:27 module_body=>module_body • module_item
            */
            if(state=$module_item(l,state)){
                /*--unique-id--11--DO-NOT-REPLACE*/
                add_reduce(state,2,3);
                prod = 11;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"module_body GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==11);
}

/*production name: module_item
            grammar index: 12
            bodies:
	12:29 module_item=>• import_declaration - 
		12:30 module_item=>• export_declaration - 
		12:31 module_item=>• statement_list_item - 
            compile time: 40.004ms*/;
function $module_item(l,state){
    debug_stack.push({ name:"module_item RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(defined_token_2408972de31435b0(l)/*[import]*/){
        /*peek*/
        /*
           12:29 module_item=>• import_declaration
           12:31 module_item=>• statement_list_item
        */
        let pk = l.copy();
        sk_0496d836f85249a7(pk.next()/*[ ws ][ nl ][ 6 ]*/);
        if((pk.utf==40/*[(]*/)||(pk.utf==46/*[.]*/)){
            /*peek-production-closure*/
            /*
               12:31 module_item=>• statement_list_item
            */
            if(state=$statement_list_item(l,state)){
                /*--unique-id--12--DO-NOT-REPLACE*/
                debug_stack.push({ name:"module_item RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else {
            /*peek-production-closure*/
            /*
               12:29 module_item=>• import_declaration
            */
            if(state=$import_declaration(l,state)){
                /*--unique-id--12--DO-NOT-REPLACE*/
                debug_stack.push({ name:"module_item RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    } else if(defined_token_9ece5224cf88b53d(l)/*[export]*/){
        /*peek-production-closure*/
        /*
           12:30 module_item=>• export_declaration
        */
        if(state=$export_declaration(l,state)){
            /*--unique-id--12--DO-NOT-REPLACE*/
            debug_stack.push({ name:"module_item RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           12:31 module_item=>• statement_list_item
        */
        if(state=$statement_list_item(l,state)){
            /*--unique-id--12--DO-NOT-REPLACE*/
            debug_stack.push({ name:"module_item RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"module_item RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: import_declaration
            grammar index: 13
            bodies:
	13:32 import_declaration=>• τimport import_clause from_clause asi - 
		13:33 import_declaration=>• τimport module_specifier asi - 
            compile time: 11.66ms*/;
function $import_declaration(l,state){
    debug_stack.push({ name:"import_declaration RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_2ed685dc4925cfa4(l)/*[import]*/)){
        /*consume*/
        /*
           13:32 import_declaration=>τimport • import_clause from_clause asi
           13:33 import_declaration=>τimport • module_specifier asi
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if((l.utf==34/*["]*/)||(l.utf==39/*[']*/)){
            /*peek-production-closure*/
            /*
               13:33 import_declaration=>τimport • module_specifier asi
            */
            if(state=$string_literal(l,state)){
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(state=$asi_group_017_104(l,state)){
                    /*--unique-id--13--DO-NOT-REPLACE*/
                    add_reduce(state,3,6);
                    debug_stack.push({ name:"import_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        } else {
            /*peek-production-closure*/
            /*
               13:32 import_declaration=>τimport • import_clause from_clause asi
            */
            if(state=$import_clause(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(state=$from_clause(l,state)){
                    sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                    if(state=$asi_group_017_104(l,state)){
                        /*--unique-id--13--DO-NOT-REPLACE*/
                        add_reduce(state,4,5);
                        debug_stack.push({ name:"import_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                }
            }
        }
    }
    debug_stack.push({ name:"import_declaration RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: import_clause
            grammar index: 14
            bodies:
	14:34 import_clause=>• imported_default_binding - 
		14:35 import_clause=>• name_space_import - 
		14:36 import_clause=>• named_imports - 
		14:37 import_clause=>• imported_default_binding , name_space_import - 
		14:38 import_clause=>• imported_default_binding , named_imports - 
            compile time: 25.867ms*/;
function $import_clause(l,state){
    debug_stack.push({ name:"import_clause RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(l.utf==42/*[*]*/){
        /*peek-production-closure*/
        /*
           14:35 import_clause=>• name_space_import
        */
        if(state=$name_space_import(l,state)){
            /*--unique-id--14--DO-NOT-REPLACE*/
            add_reduce(state,1,7);
            debug_stack.push({ name:"import_clause RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else if(l.utf==123/*[{]*/){
        /*peek-production-closure*/
        /*
           14:36 import_clause=>• named_imports
        */
        if(state=$named_imports(l,state)){
            /*--unique-id--14--DO-NOT-REPLACE*/
            add_reduce(state,1,7);
            debug_stack.push({ name:"import_clause RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           14:34 import_clause=>• imported_default_binding
           14:37 import_clause=>• imported_default_binding , name_space_import
           14:38 import_clause=>• imported_default_binding , named_imports
        */
        sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$imported_default_binding(l,state)){
            /*assert*/
            /*
               14:34 import_clause=>• imported_default_binding
               14:37 import_clause=>• imported_default_binding , name_space_import
               14:38 import_clause=>• imported_default_binding , named_imports
            */
            sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,l.utf==44/*[,]*/)){
                /*consume*/
                /*
                   14:37 import_clause=>imported_default_binding , • name_space_import
                   14:38 import_clause=>imported_default_binding , • named_imports
                */
                sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
                if(l.utf==42/*[*]*/){
                    /*peek-production-closure*/
                    /*
                       14:37 import_clause=>imported_default_binding , • name_space_import
                    */
                    if(state=$name_space_import(l,state)){
                        /*--unique-id--14--DO-NOT-REPLACE*/
                        add_reduce(state,3,8);
                        debug_stack.push({ name:"import_clause RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                } else {
                    /*peek-production-closure*/
                    /*
                       14:38 import_clause=>imported_default_binding , • named_imports
                    */
                    if(state=$named_imports(l,state)){
                        /*--unique-id--14--DO-NOT-REPLACE*/
                        add_reduce(state,3,8);
                        debug_stack.push({ name:"import_clause RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                }
            } else {
                /*assert-end*/
                /*
                   14:34 import_clause=>imported_default_binding •
                */
                /*--unique-id--14--DO-NOT-REPLACE*/
                add_reduce(state,1,7);
                debug_stack.push({ name:"import_clause RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    }
    debug_stack.push({ name:"import_clause RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: imported_default_binding
            grammar index: 15
            bodies:
	15:39 imported_default_binding=>• imported_binding - 
            compile time: 1.485ms*/;
function $imported_default_binding(l,state){
    debug_stack.push({ name:"imported_default_binding RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$identifier(l,state)){
        /*--unique-id--15--DO-NOT-REPLACE*/
        add_reduce(state,1,17);
        add_reduce(state,1,9);
        debug_stack.push({ name:"imported_default_binding RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"imported_default_binding RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: name_space_import
            grammar index: 16
            bodies:
	16:40 name_space_import=>• * τas imported_binding - 
            compile time: 8.441ms*/;
function $name_space_import(l,state){
    debug_stack.push({ name:"name_space_import RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==42/*[*]*/)){
        /*consume*/
        /*
           16:40 name_space_import=>* • τas imported_binding
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,defined_token_fcc8b8fe09802878(l)/*[as]*/)){
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$identifier(l,state)){
                /*--unique-id--16--DO-NOT-REPLACE*/
                add_reduce(state,1,17);
                add_reduce(state,3,10);
                debug_stack.push({ name:"name_space_import RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    }
    debug_stack.push({ name:"name_space_import RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: named_imports_HC_listbody1_106
            grammar index: 17
            bodies:
	17:41 named_imports_HC_listbody1_106=>• named_imports_HC_listbody1_106 , import_specifier - 
		17:42 named_imports_HC_listbody1_106=>• import_specifier - 
            compile time: 19.973ms*/;
function $named_imports_HC_listbody1_106(l,state){
    debug_stack.push({ name:"named_imports_HC_listbody1_106 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$import_specifier(l,state)){
        /*--unique-id--17--DO-NOT-REPLACE*/
        add_reduce(state,1,4);
        return $named_imports_HC_listbody1_106_goto(l,state,17);
    }
    debug_stack.push({ name:"named_imports_HC_listbody1_106 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $named_imports_HC_listbody1_106_goto(l,state,prod){
    debug_stack.push({ name:"named_imports_HC_listbody1_106 GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(l.utf==44/*[,]*/){
            /*peek*/
            /*
               17:41 named_imports_HC_listbody1_106=>named_imports_HC_listbody1_106 • , import_specifier
               18:43 named_imports=>{ named_imports_HC_listbody1_106 • , }
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(((pk.utf==95/*[_]*/)||(pk.utf==36/*[$]*/))||pk.isID()/*[id]*/){
                /*peek*/
                /*
                   17:41 named_imports_HC_listbody1_106=>named_imports_HC_listbody1_106 • , import_specifier
                */
                if(assert_consume(l,state,l.utf==44/*[,]*/)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$import_specifier(l,state)){
                        /*--unique-id--17--DO-NOT-REPLACE*/
                        add_reduce(state,3,11);
                        prod = 17;
                        continue;
                    }
                }
            }
        }
        break;
    }
    debug_stack.push({ name:"named_imports_HC_listbody1_106 GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==17);
}
/*production name: named_imports
            grammar index: 18
            bodies:
	18:43 named_imports=>• { named_imports_HC_listbody1_106 , } - 
		18:44 named_imports=>• { , } - 
		18:45 named_imports=>• { named_imports_HC_listbody1_106 } - 
		18:46 named_imports=>• { } - 
            compile time: 39.479ms*/;
function $named_imports(l,state){
    debug_stack.push({ name:"named_imports RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==123/*[{]*/)){
        /*consume*/
        /*
           18:43 named_imports=>{ • named_imports_HC_listbody1_106 , }
           18:44 named_imports=>{ • , }
           18:45 named_imports=>{ • named_imports_HC_listbody1_106 }
           18:46 named_imports=>{ • }
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==44/*[,]*/)){
            /*consume*/
            /*
               18:44 named_imports=>{ , • }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                /*--unique-id--18--DO-NOT-REPLACE*/
                add_reduce(state,3,13);
                debug_stack.push({ name:"named_imports RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else if(assert_consume(l,state,l.utf==125/*[}]*/)){
            /*consume*/
            /*
               18:46 named_imports=>{ } •
            */
            /*--unique-id--18--DO-NOT-REPLACE*/
            add_reduce(state,2,13);
            debug_stack.push({ name:"named_imports RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        } else {
            /*peek-production-closure*/
            /*
               18:43 named_imports=>{ • named_imports_HC_listbody1_106 , }
               18:45 named_imports=>{ • named_imports_HC_listbody1_106 }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$named_imports_HC_listbody1_106(l,state)){
                /*assert*/
                /*
                   18:43 named_imports=>{ • named_imports_HC_listbody1_106 , }
                   18:45 named_imports=>{ • named_imports_HC_listbody1_106 }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==44/*[,]*/)){
                    /*consume*/
                    /*
                       18:43 named_imports=>{ named_imports_HC_listbody1_106 , • }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==125/*[}]*/)){
                        /*--unique-id--18--DO-NOT-REPLACE*/
                        add_reduce(state,4,12);
                        debug_stack.push({ name:"named_imports RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                } else if(assert_consume(l,state,l.utf==125/*[}]*/)){
                    /*consume*/
                    /*
                       18:45 named_imports=>{ named_imports_HC_listbody1_106 } •
                    */
                    /*--unique-id--18--DO-NOT-REPLACE*/
                    add_reduce(state,3,12);
                    debug_stack.push({ name:"named_imports RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        }
    }
    debug_stack.push({ name:"named_imports RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: from_clause
            grammar index: 19
            bodies:
	19:47 from_clause=>• τfrom module_specifier - 
            compile time: 6.698ms*/;
function $from_clause(l,state){
    debug_stack.push({ name:"from_clause RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_14469127dc9c2c1f(l)/*[from]*/)){
        /*consume*/
        /*
           19:47 from_clause=>τfrom • module_specifier
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$string_literal(l,state)){
            /*--unique-id--19--DO-NOT-REPLACE*/
            add_reduce(state,2,14);
            debug_stack.push({ name:"from_clause RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"from_clause RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: import_specifier
            grammar index: 20
            bodies:
	20:48 import_specifier=>• imported_binding - 
		20:49 import_specifier=>• identifier τas imported_binding - 
            compile time: 34.191ms*/;
function $import_specifier(l,state){
    debug_stack.push({ name:"import_specifier RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(((l.utf==95/*[_]*/)||(l.utf==36/*[$]*/))||l.isID()/*[id]*/){
        /*peek*/
        /*
           20:48 import_specifier=>• imported_binding
           20:49 import_specifier=>• identifier τas imported_binding
        */
        sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,((((def$js_id_symbols_tok_b3199095c9facd2b(l)||defined_token_845a30f46ac258a6(l)/*[async] [as]*/)||defined_token_8f5d282f35165648(l)/*[get]*/)||defined_token_5bca542dce980d9c(l)/*[set]*/)||defined_token_1cb42c7dd41b3a7e(l)/*[target]*/)||defined_token_14469127dc9c2c1f(l)/*[from]*/)){
            /*consume*/
            /*
               225:688 def$js_identifier=>tk:def$js_id_symbols •
               189:545 unreserved_word=>τasync •
               189:546 unreserved_word=>τget •
               189:547 unreserved_word=>τset •
               189:548 unreserved_word=>τtarget •
               189:549 unreserved_word=>τas •
               189:550 unreserved_word=>τfrom •
            */
            /*--unique-id--187--DO-NOT-REPLACE*/
            add_reduce(state,1,255);
            return $import_specifier_goto(l,state,187);
        }
    }
    debug_stack.push({ name:"import_specifier RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $import_specifier_goto(l,state,prod){
    debug_stack.push({ name:"import_specifier GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_d9819c16e680c950(l/*[ ws ][ 6 ]*/);
        if(assert_consume(l,state,defined_token_fcc8b8fe09802878(l)/*[as]*/)){
            /*consume*/
            /*
               20:49 import_specifier=>identifier τas • imported_binding
            */
            sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$identifier(l,state)){
                /*--unique-id--20--DO-NOT-REPLACE*/
                add_reduce(state,1,17);
                add_reduce(state,3,16);
                prod = 20;
                continue;
            }
        } else {
            /*assert-end*/
            /*
               22:51 imported_binding=>identifier •
            */
            /*--unique-id--20--DO-NOT-REPLACE*/
            add_reduce(state,1,17);
            add_reduce(state,1,15);
            prod = 20;
            continue;
        }
        break;
    }
    debug_stack.push({ name:"import_specifier GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==20);
}
/*production name: export_declaration
            grammar index: 23
            bodies:
	23:52 export_declaration=>• τexport * from_clause asi - 
		23:53 export_declaration=>• τexport export_clause from_clause asi - 
		23:54 export_declaration=>• τexport variable_statement - 
		23:55 export_declaration=>• τexport declaration - 
		23:56 export_declaration=>• τexport τdefault hoistable_declaration - 
		23:57 export_declaration=>• τexport τdefault class_declaration - 
		23:58 export_declaration=>• τexport τdefault assignment_expression asi - 
		23:59 export_declaration=>• τexport export_clause asi - 
            compile time: 86.715ms*/;
function $export_declaration(l,state){
    debug_stack.push({ name:"export_declaration RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_15518d202137f56e(l)/*[export]*/)){
        /*consume*/
        /*
           23:52 export_declaration=>τexport • * from_clause asi
           23:53 export_declaration=>τexport • export_clause from_clause asi
           23:54 export_declaration=>τexport • variable_statement
           23:55 export_declaration=>τexport • declaration
           23:56 export_declaration=>τexport • τdefault hoistable_declaration
           23:57 export_declaration=>τexport • τdefault class_declaration
           23:58 export_declaration=>τexport • τdefault assignment_expression asi
           23:59 export_declaration=>τexport • export_clause asi
        */
        sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==42/*[*]*/)){
            /*consume*/
            /*
               23:52 export_declaration=>τexport * • from_clause asi
            */
            sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$from_clause(l,state)){
                sk_d9819c16e680c950(l/*[ ws ][ 6 ]*/);
                if(state=$asi_group_017_104(l,state)){
                    /*--unique-id--23--DO-NOT-REPLACE*/
                    add_reduce(state,4,18);
                    debug_stack.push({ name:"export_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        } else if(l.utf==123/*[{]*/){
            /*peek-production-closure*/
            /*
               23:53 export_declaration=>τexport • export_clause from_clause asi
               23:59 export_declaration=>τexport • export_clause asi
            */
            sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$export_clause(l,state)){
                /*assert*/
                /*
                   23:53 export_declaration=>τexport • export_clause from_clause asi
                   23:59 export_declaration=>τexport • export_clause asi
                */
                sk_d9819c16e680c950(l/*[ ws ][ 6 ]*/);
                if(defined_token_14469127dc9c2c1f(l)/*[from]*/){
                    /*peek-production-closure*/
                    /*
                       23:53 export_declaration=>τexport export_clause • from_clause asi
                    */
                    if(state=$from_clause(l,state)){
                        sk_d9819c16e680c950(l/*[ ws ][ 6 ]*/);
                        if(state=$asi_group_017_104(l,state)){
                            /*--unique-id--23--DO-NOT-REPLACE*/
                            add_reduce(state,4,19);
                            debug_stack.push({ name:"export_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                            return state;
                        }
                    }
                } else {
                    /*peek-production-closure*/
                    /*
                       23:59 export_declaration=>τexport export_clause • asi
                    */
                    if(state=$asi_group_017_104(l,state)){
                        /*--unique-id--23--DO-NOT-REPLACE*/
                        add_reduce(state,3,22);
                        debug_stack.push({ name:"export_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                }
            }
        } else if(defined_token_f9bb6ce14e19288e(l)/*[var]*/){
            /*peek-production-closure*/
            /*
               23:54 export_declaration=>τexport • variable_statement
            */
            if(state=$variable_statement(l,state)){
                /*--unique-id--23--DO-NOT-REPLACE*/
                add_reduce(state,2,20);
                debug_stack.push({ name:"export_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else if(defined_token_fdb42ce5868e4404(l)/*[default]*/){
            /*peek*/
            /*
               23:56 export_declaration=>τexport • τdefault hoistable_declaration
               23:57 export_declaration=>τexport • τdefault class_declaration
               23:58 export_declaration=>τexport • τdefault assignment_expression asi
            */
            let pk = l.copy();
            sk_0496d836f85249a7(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(defined_token_172adec61d2dc160(pk)/*[async]*/){
                /*peek*/
                /*
                   23:56 export_declaration=>τexport • τdefault hoistable_declaration
                   23:58 export_declaration=>τexport • τdefault assignment_expression asi
                */
                sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_fdb42ce5868e4404(l)/*[default]*/)){
                    /*consume*/
                    /*
                       23:56 export_declaration=>τexport τdefault • hoistable_declaration
                       23:58 export_declaration=>τexport τdefault • assignment_expression asi
                    */
                    sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
                    if(defined_token_172adec61d2dc160(l)/*[async]*/){
                        /*peek*/
                        /*
                           23:56 export_declaration=>τexport τdefault • hoistable_declaration
                           23:58 export_declaration=>τexport τdefault • assignment_expression asi
                        */
                        let pk = l.copy();
                        sk_d9819c16e680c950(pk.next()/*[ ws ][ 6 ]*/);
                        if(defined_token_aa9a90ddc84fac92(pk)/*[function]*/){
                            /*peek-production-closure*/
                            /*
                               23:56 export_declaration=>τexport τdefault • hoistable_declaration
                            */
                            if(state=$function_declaration(l,state)){
                                /*--unique-id--23--DO-NOT-REPLACE*/
                                add_reduce(state,3,21);
                                debug_stack.push({ name:"export_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                return state;
                            }
                        } else {
                            /*peek-production-closure*/
                            /*
                               23:58 export_declaration=>τexport τdefault • assignment_expression asi
                            */
                            if(state=$assignment_expression(l,state)){
                                sk_d9819c16e680c950(l/*[ ws ][ 6 ]*/);
                                if(state=$asi_group_017_104(l,state)){
                                    /*--unique-id--23--DO-NOT-REPLACE*/
                                    add_reduce(state,4,21);
                                    debug_stack.push({ name:"export_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                    return state;
                                }
                            }
                        }
                    } else if(defined_token_aa9a90ddc84fac92(l)/*[function]*/){
                        /*peek-production-closure*/
                        /*
                           23:56 export_declaration=>τexport τdefault • hoistable_declaration
                        */
                        if(state=$function_declaration(l,state)){
                            /*--unique-id--23--DO-NOT-REPLACE*/
                            add_reduce(state,3,21);
                            debug_stack.push({ name:"export_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                            return state;
                        }
                    } else {
                        /*peek-production-closure*/
                        /*
                           23:58 export_declaration=>τexport τdefault • assignment_expression asi
                        */
                        if(state=$assignment_expression(l,state)){
                            sk_d9819c16e680c950(l/*[ ws ][ 6 ]*/);
                            if(state=$asi_group_017_104(l,state)){
                                /*--unique-id--23--DO-NOT-REPLACE*/
                                add_reduce(state,4,21);
                                debug_stack.push({ name:"export_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                return state;
                            }
                        }
                    }
                }
            } else if(defined_token_aa9a90ddc84fac92(pk)/*[function]*/){
                /*peek*/
                /*
                   23:56 export_declaration=>τexport • τdefault hoistable_declaration
                */
                if(assert_consume(l,state,defined_token_fdb42ce5868e4404(l)/*[default]*/)){
                    sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$function_declaration(l,state)){
                        /*--unique-id--23--DO-NOT-REPLACE*/
                        add_reduce(state,3,21);
                        debug_stack.push({ name:"export_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                }
            } else if(defined_token_7865c7b5645d7910(pk)/*[class]*/){
                /*peek*/
                /*
                   23:57 export_declaration=>τexport • τdefault class_declaration
                */
                if(assert_consume(l,state,defined_token_fdb42ce5868e4404(l)/*[default]*/)){
                    sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$class_declaration(l,state)){
                        /*--unique-id--23--DO-NOT-REPLACE*/
                        add_reduce(state,3,21);
                        debug_stack.push({ name:"export_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                }
            } else if((((defined_token_6d4f77707d3e0e5a(pk)/*[++]*/||defined_token_f2ef34011f64cef0(pk)/*[--]*/)||assert_table(pk,0x0,0xa996,0x88000000,0x48000001)/*tbl:[ + ] [ - ] [ ~ ] [ ! ] [ _ ] [ $ ] [ ( ] [ " ] [ ' ] [ [ ] [ { ] [ / ] [ ` ]*/)||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
                /*peek*/
                /*
                   23:58 export_declaration=>τexport • τdefault assignment_expression asi
                */
                if(assert_consume(l,state,defined_token_fdb42ce5868e4404(l)/*[default]*/)){
                    sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$assignment_expression(l,state)){
                        sk_d9819c16e680c950(l/*[ ws ][ 6 ]*/);
                        if(state=$asi_group_017_104(l,state)){
                            /*--unique-id--23--DO-NOT-REPLACE*/
                            add_reduce(state,4,21);
                            debug_stack.push({ name:"export_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                            return state;
                        }
                    }
                }
            }
        } else {
            /*peek-production-closure*/
            /*
               23:55 export_declaration=>τexport • declaration
            */
            if(state=$declaration(l,state)){
                /*--unique-id--23--DO-NOT-REPLACE*/
                add_reduce(state,2,20);
                debug_stack.push({ name:"export_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    }
    debug_stack.push({ name:"export_declaration RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: export_clause_HC_listbody1_107
            grammar index: 24
            bodies:
	24:60 export_clause_HC_listbody1_107=>• export_clause_HC_listbody1_107 , export_specifier - 
		24:61 export_clause_HC_listbody1_107=>• export_specifier - 
            compile time: 27.658ms*/;
function $export_clause_HC_listbody1_107(l,state){
    debug_stack.push({ name:"export_clause_HC_listbody1_107 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$export_specifier(l,state)){
        /*--unique-id--24--DO-NOT-REPLACE*/
        add_reduce(state,1,4);
        return $export_clause_HC_listbody1_107_goto(l,state,24);
    }
    debug_stack.push({ name:"export_clause_HC_listbody1_107 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $export_clause_HC_listbody1_107_goto(l,state,prod){
    debug_stack.push({ name:"export_clause_HC_listbody1_107 GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
        if(l.utf==44/*[,]*/){
            /*peek*/
            /*
               24:60 export_clause_HC_listbody1_107=>export_clause_HC_listbody1_107 • , export_specifier
               25:62 export_clause=>{ export_clause_HC_listbody1_107 • , }
            */
            let pk = l.copy();
            sk_0496d836f85249a7(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(((pk.utf==95/*[_]*/)||(pk.utf==36/*[$]*/))||pk.isID()/*[id]*/){
                /*peek*/
                /*
                   24:60 export_clause_HC_listbody1_107=>export_clause_HC_listbody1_107 • , export_specifier
                */
                if(assert_consume(l,state,l.utf==44/*[,]*/)){
                    sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$export_specifier(l,state)){
                        /*--unique-id--24--DO-NOT-REPLACE*/
                        add_reduce(state,3,11);
                        prod = 24;
                        continue;
                    }
                }
            }
        }
        break;
    }
    debug_stack.push({ name:"export_clause_HC_listbody1_107 GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==24);
}
/*production name: export_clause
            grammar index: 25
            bodies:
	25:62 export_clause=>• { export_clause_HC_listbody1_107 , } - 
		25:63 export_clause=>• { , } - 
		25:64 export_clause=>• { export_clause_HC_listbody1_107 } - 
		25:65 export_clause=>• { } - 
            compile time: 43.439ms*/;
function $export_clause(l,state){
    debug_stack.push({ name:"export_clause RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==123/*[{]*/)){
        /*consume*/
        /*
           25:62 export_clause=>{ • export_clause_HC_listbody1_107 , }
           25:63 export_clause=>{ • , }
           25:64 export_clause=>{ • export_clause_HC_listbody1_107 }
           25:65 export_clause=>{ • }
        */
        sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==44/*[,]*/)){
            /*consume*/
            /*
               25:63 export_clause=>{ , • }
            */
            sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                /*--unique-id--25--DO-NOT-REPLACE*/
                add_reduce(state,3,24);
                debug_stack.push({ name:"export_clause RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else if(assert_consume(l,state,l.utf==125/*[}]*/)){
            /*consume*/
            /*
               25:65 export_clause=>{ } •
            */
            /*--unique-id--25--DO-NOT-REPLACE*/
            add_reduce(state,2,24);
            debug_stack.push({ name:"export_clause RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        } else {
            /*peek-production-closure*/
            /*
               25:62 export_clause=>{ • export_clause_HC_listbody1_107 , }
               25:64 export_clause=>{ • export_clause_HC_listbody1_107 }
            */
            sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$export_clause_HC_listbody1_107(l,state)){
                /*assert*/
                /*
                   25:62 export_clause=>{ • export_clause_HC_listbody1_107 , }
                   25:64 export_clause=>{ • export_clause_HC_listbody1_107 }
                */
                sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==44/*[,]*/)){
                    /*consume*/
                    /*
                       25:62 export_clause=>{ export_clause_HC_listbody1_107 , • }
                    */
                    sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==125/*[}]*/)){
                        /*--unique-id--25--DO-NOT-REPLACE*/
                        add_reduce(state,4,23);
                        debug_stack.push({ name:"export_clause RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                } else if(assert_consume(l,state,l.utf==125/*[}]*/)){
                    /*consume*/
                    /*
                       25:64 export_clause=>{ export_clause_HC_listbody1_107 } •
                    */
                    /*--unique-id--25--DO-NOT-REPLACE*/
                    add_reduce(state,3,23);
                    debug_stack.push({ name:"export_clause RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        }
    }
    debug_stack.push({ name:"export_clause RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: export_specifier
            grammar index: 26
            bodies:
	26:66 export_specifier=>• identifier - 
		26:67 export_specifier=>• identifier τas identifier - 
            compile time: 9.317ms*/;
function $export_specifier(l,state){
    debug_stack.push({ name:"export_specifier RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$identifier(l,state)){
        /*assert*/
        /*
           26:66 export_specifier=>• identifier
           26:67 export_specifier=>• identifier τas identifier
        */
        sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,defined_token_fcc8b8fe09802878(l)/*[as]*/)){
            /*consume*/
            /*
               26:67 export_specifier=>identifier τas • identifier
            */
            sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$identifier(l,state)){
                /*--unique-id--26--DO-NOT-REPLACE*/
                add_reduce(state,3,16);
                debug_stack.push({ name:"export_specifier RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else {
            /*assert-end*/
            /*
               26:66 export_specifier=>identifier •
            */
            /*--unique-id--26--DO-NOT-REPLACE*/
            add_reduce(state,1,15);
            debug_stack.push({ name:"export_specifier RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"export_specifier RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: statement_list
            grammar index: 29
            bodies:
	29:70 statement_list=>• statement_list_item - 
		29:71 statement_list=>• statement_list statement_list_item - 
            compile time: 42.996ms*/;
function $statement_list(l,state){
    debug_stack.push({ name:"statement_list RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$statement_list_item(l,state)){
        /*--unique-id--29--DO-NOT-REPLACE*/
        add_reduce(state,1,4);
        return $statement_list_goto(l,state,29);
    }
    debug_stack.push({ name:"statement_list RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $statement_list_goto(l,state,prod){
    debug_stack.push({ name:"statement_list GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
        if((((defined_token_6d4f77707d3e0e5a(l)/*[++]*/||defined_token_f2ef34011f64cef0(l)/*[--]*/)||assert_table(l,0x0,0x800a996,0x88000000,0x48000001)/*tbl:[ { ] [ ( ] [ [ ] [ / ] [ " ] [ ' ] [ ` ] [ _ ] [ $ ] [ + ] [ - ] [ ~ ] [ ! ] [ ; ]*/)||l.isID()/*[id]*/)||l.isNum()/*[num]*/){
            /*peek-production-closure*/
            /*
               29:71 statement_list=>statement_list • statement_list_item
            */
            if(state=$statement_list_item(l,state)){
                /*--unique-id--29--DO-NOT-REPLACE*/
                add_reduce(state,2,26);
                prod = 29;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"statement_list GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==29);
}
/*production name: statement_list_item
            grammar index: 30
            bodies:
	30:72 statement_list_item=>• statement - 
		30:73 statement_list_item=>• declaration - 
            compile time: 60.822ms*/;
function $statement_list_item(l,state){
    debug_stack.push({ name:"statement_list_item RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(defined_token_d2484e28b4e85b35(l)/*[async]*/){
        /*peek*/
        /*
           30:72 statement_list_item=>• statement
           30:73 statement_list_item=>• declaration
        */
        let pk = l.copy();
        sk_532e3acfd819c8d6(pk.next()/*[ ws ][ 6 ]*/);
        if(defined_token_aa9a90ddc84fac92(pk)/*[function]*/){
            /*peek-production-closure*/
            /*
               30:73 statement_list_item=>• declaration
            */
            if(state=$declaration(l,state)){
                /*--unique-id--30--DO-NOT-REPLACE*/
                debug_stack.push({ name:"statement_list_item RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else {
            /*peek-production-closure*/
            /*
               30:72 statement_list_item=>• statement
            */
            if(state=$statement(l,state)){
                /*--unique-id--30--DO-NOT-REPLACE*/
                debug_stack.push({ name:"statement_list_item RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    } else if((defined_token_b13b6a49957e832f(l)/*[class] [const]*/||defined_token_aa9a90ddc84fac92(l)/*[function]*/)||defined_token_35df72b33b14e143(l)/*[let]*/){
        /*peek-production-closure*/
        /*
           30:73 statement_list_item=>• declaration
        */
        if(state=$declaration(l,state)){
            /*--unique-id--30--DO-NOT-REPLACE*/
            debug_stack.push({ name:"statement_list_item RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           30:72 statement_list_item=>• statement
        */
        if(state=$statement(l,state)){
            /*--unique-id--30--DO-NOT-REPLACE*/
            debug_stack.push({ name:"statement_list_item RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"statement_list_item RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: statement
            grammar index: 31
            bodies:
	31:74 statement=>• block_statement - 
		31:75 statement=>• expression_statement - 
		31:76 statement=>• labeled_statement - 
		31:77 statement=>• variable_statement - 
		31:78 statement=>• empty_statement - 
		31:79 statement=>• if_statement - 
		31:80 statement=>• breakable_statement - 
		31:81 statement=>• continue_statement - 
		31:82 statement=>• break_statement - 
		31:83 statement=>• return_statement - 
		31:84 statement=>• with_statement - 
		31:85 statement=>• throw_statement - 
		31:86 statement=>• try_statement - 
		31:87 statement=>• debugger_statement - 
            compile time: 356.998ms*/;
function $statement(l,state){
    debug_stack.push({ name:"statement RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(l.utf==123/*[{]*/){
        /*peek-production-closure*/
        /*
           31:74 statement=>• block_statement
        */
        if(state=$block(l,state)){
            /*--unique-id--31--DO-NOT-REPLACE*/
            return $statement_goto(l,state,31);
        }
    } else if(defined_token_d2484e28b4e85b35(l)/*[async]*/){
        /*peek*/
        /*
           31:75 statement=>• expression_statement
           31:76 statement=>• labeled_statement
        */
        let pk = l.copy();
        sk_532e3acfd819c8d6(pk.next()/*[ ws ][ 6 ]*/);
        if(((((((((((((((non_capture_5730bfe813b6b040(pk)/*[{] [nl] [END_OF_FILE]*/||defined_token_f5b15d408b6280ad(pk)/*[?.] [??]*/)||defined_token_8c647931e6bf0c07(pk)/*[--] [-=]*/)||defined_token_7330fb2be3dc26eb(pk)/*[++] [+=]*/)||defined_token_37edf5ebc00dbfe6(pk)/*[/=]*/)||defined_token_2c342d130718e813(pk)/*[%=]*/)||defined_token_318c95b1e64de46d(pk)/*[<<=] [<<] [<=]*/)||defined_token_3be2267a053f0395(pk)/*[>>=] [>>>=] [>>>] [>>] [>=]*/)||defined_token_c7d7983a743dfb89(pk)/*[&=]*/)||defined_token_8c2d44d7057fe753(pk)/*[^=]*/)||defined_token_d1de557e71993f67(pk)/*[|=] [||]*/)||defined_token_485338d34f29b52a(pk)/*[asteriskasterisk=] [asteriskasterisk]*/)||defined_token_265afb3bd124d12f(pk)/*[instanceof] [in]*/)||defined_token_04e94f0279c3936b(pk)/*[!==] [!=]*/)||defined_token_4df9552a310b74e2(pk)/*[===] [==]*/)||assert_table(pk,0x0,0xfc00fd60,0x48000000,0x10000001)/*tbl:[ ( ] [ ` ] [ . ] [ [ ] [ * ] [ = ] [ % ] [ / ] [ + ] [ - ] [ < ] [ > ] [ & ] [ ^ ] [ | ] [ ? ] [ ; ] [ , ] [ : ]*/){
            /*peek*/
            /*
               31:75 statement=>• expression_statement
               31:76 statement=>• labeled_statement
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,defined_token_d4a7e22f69f4ee35(l)/*[async]*/)){
                /*consume*/
                /*
                   85:230 arrow_function=>τasync • arrow_parameters = > concise_body
                   189:545 unreserved_word=>τasync •
                */
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if((((((def$js_id_symbols_tok_b3199095c9facd2b(l)||defined_token_845a30f46ac258a6(l)/*[async] [as]*/)||defined_token_8f5d282f35165648(l)/*[get]*/)||defined_token_5bca542dce980d9c(l)/*[set]*/)||defined_token_1cb42c7dd41b3a7e(l)/*[target]*/)||defined_token_14469127dc9c2c1f(l)/*[from]*/)||(l.utf==40/*[(]*/)){
                    /*assert-production-closure*/
                    /*
                       85:230 arrow_function=>τasync • arrow_parameters = > concise_body
                    */
                    if(state=$arrow_parameters(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==61/*[=]*/)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==62/*[>]*/)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(state=$concise_body(l,state)){
                                    /*--unique-id--96--DO-NOT-REPLACE*/
                                    add_reduce(state,5,124);
                                    return $statement_goto(l,state,96);
                                }
                            }
                        }
                    }
                } else {
                    /*assert-end*/
                    /*
                       189:545 unreserved_word=>τasync •
                    */
                    /*--unique-id--187--DO-NOT-REPLACE*/
                    add_reduce(state,1,255);
                    return $statement_goto(l,state,187);
                }
            }
        } else {
            /*peek-production-closure*/
            /*
               31:75 statement=>• expression_statement
            */
            if(state=$expression_statement(l,state)){
                /*--unique-id--31--DO-NOT-REPLACE*/
                return $statement_goto(l,state,31);
            }
        }
    } else if(defined_token_5012f964d8a70e70(l)/*[var]*/){
        /*peek-production-closure*/
        /*
           31:77 statement=>• variable_statement
        */
        if(state=$variable_statement(l,state)){
            /*--unique-id--31--DO-NOT-REPLACE*/
            return $statement_goto(l,state,31);
        }
    } else if(l.utf==59/*[;]*/){
        /*peek-production-closure*/
        /*
           31:78 statement=>• empty_statement
        */
        if(state=$empty_statement(l,state)){
            /*--unique-id--31--DO-NOT-REPLACE*/
            return $statement_goto(l,state,31);
        }
    } else if(defined_token_518d7661f3b291b8(l)/*[if]*/){
        /*peek-production-closure*/
        /*
           31:79 statement=>• if_statement
        */
        if(state=$if_statement(l,state)){
            /*--unique-id--31--DO-NOT-REPLACE*/
            return $statement_goto(l,state,31);
        }
    } else if(defined_token_6dffa86dec2f0421(l)/*[continue]*/){
        /*peek-production-closure*/
        /*
           31:81 statement=>• continue_statement
        */
        if(state=$continue_statement(l,state)){
            /*--unique-id--31--DO-NOT-REPLACE*/
            return $statement_goto(l,state,31);
        }
    } else if(defined_token_14176d5b613b7d00(l)/*[break]*/){
        /*peek-production-closure*/
        /*
           31:82 statement=>• break_statement
        */
        if(state=$break_statement(l,state)){
            /*--unique-id--31--DO-NOT-REPLACE*/
            return $statement_goto(l,state,31);
        }
    } else if(defined_token_cbaaba63eba9e5c4(l)/*[return]*/){
        /*peek-production-closure*/
        /*
           31:83 statement=>• return_statement
        */
        if(state=$return_statement(l,state)){
            /*--unique-id--31--DO-NOT-REPLACE*/
            return $statement_goto(l,state,31);
        }
    } else if(defined_token_37dd03e46b4262d7(l)/*[with]*/){
        /*peek-production-closure*/
        /*
           31:84 statement=>• with_statement
        */
        if(state=$with_statement(l,state)){
            /*--unique-id--31--DO-NOT-REPLACE*/
            return $statement_goto(l,state,31);
        }
    } else if(defined_token_0aac28246f673fd8(l)/*[throw]*/){
        /*peek-production-closure*/
        /*
           31:85 statement=>• throw_statement
        */
        if(state=$throw_statement(l,state)){
            /*--unique-id--31--DO-NOT-REPLACE*/
            return $statement_goto(l,state,31);
        }
    } else if(defined_token_c69f04f3bf4a100f(l)/*[try]*/){
        /*peek-production-closure*/
        /*
           31:86 statement=>• try_statement
        */
        if(state=$try_statement(l,state)){
            /*--unique-id--31--DO-NOT-REPLACE*/
            return $statement_goto(l,state,31);
        }
    } else if(defined_token_5c4d3ba94f23ac9d(l)/*[debugger]*/){
        /*peek-production-closure*/
        /*
           31:87 statement=>• debugger_statement
        */
        if(state=$debugger_statement(l,state)){
            /*--unique-id--31--DO-NOT-REPLACE*/
            return $statement_goto(l,state,31);
        }
    } else if(((defined_token_bd24781757667c87(l)/*[do]*/||defined_token_c99da5803908ca28(l)/*[while]*/)||defined_token_d6409f9036f4b773(l)/*[for]*/)||defined_token_30bb3358d3f29eb4(l)/*[switch]*/){
        /*peek-production-closure*/
        /*
           31:80 statement=>• breakable_statement
        */
        if(state=$breakable_statement(l,state)){
            /*--unique-id--31--DO-NOT-REPLACE*/
            return $statement_goto(l,state,31);
        }
    } else if((((((((((((defined_token_202a14414fc7633f(l)/*[yield]*/||defined_token_0e8a531b18b35626(l)/*[new] [null]*/)||defined_token_cb1a40816016c1ec(l)/*[super]*/)||defined_token_2408972de31435b0(l)/*[import]*/)||defined_token_b2d596d8d856b425(l)/*[this] [true] [typeof]*/)||defined_token_57193d8fefd013e4(l)/*[false]*/)||defined_token_139af7e0759e829f(l)/*[delete]*/)||defined_token_330b5cfc72831f04(l)/*[void]*/)||defined_token_44aa3f48541f3402(l)/*[await]*/)||defined_token_6d4f77707d3e0e5a(l)/*[++]*/)||defined_token_f2ef34011f64cef0(l)/*[--]*/)||assert_table(l,0x0,0xa986,0x8000000,0x40000001)/*tbl:[ ( ] [ [ ] [ / ] [ " ] [ ' ] [ ` ] [ + ] [ - ] [ ~ ] [ ! ]*/)||l.isNum()/*[num]*/){
        /*peek-production-closure*/
        /*
           31:75 statement=>• expression_statement
        */
        if(state=$expression_statement(l,state)){
            /*--unique-id--31--DO-NOT-REPLACE*/
            return $statement_goto(l,state,31);
        }
    } else if(((l.utf==95/*[_]*/)||(l.utf==36/*[$]*/))||l.isID()/*[id]*/){
        /*peek*/
        /*
           31:75 statement=>• expression_statement
           31:76 statement=>• labeled_statement
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,((((def$js_id_symbols_tok_b3199095c9facd2b(l)||defined_token_8f5d282f35165648(l)/*[get]*/)||defined_token_5bca542dce980d9c(l)/*[set]*/)||defined_token_1cb42c7dd41b3a7e(l)/*[target]*/)||defined_token_fcc8b8fe09802878(l)/*[as]*/)||defined_token_14469127dc9c2c1f(l)/*[from]*/)){
            /*consume*/
            /*
               189:546 unreserved_word=>τget •
               189:547 unreserved_word=>τset •
               189:548 unreserved_word=>τtarget •
               189:549 unreserved_word=>τas •
               189:550 unreserved_word=>τfrom •
               225:688 def$js_identifier=>tk:def$js_id_symbols •
            */
            /*--unique-id--187--DO-NOT-REPLACE*/
            add_reduce(state,1,255);
            return $statement_goto(l,state,187);
        }
    }
    debug_stack.push({ name:"statement RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $statement_goto(l,state,prod){
    debug_stack.push({ name:"statement GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        switch(prod){
            case 86:
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==61/*[=]*/)){
                    /*consume*/
                    /*
                       85:231 arrow_function=>arrow_parameters = • > concise_body
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==62/*[>]*/)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$concise_body(l,state)){
                            /*--unique-id--96--DO-NOT-REPLACE*/
                            add_reduce(state,4,125);
                            prod = 96;
                            continue;
                        }
                    }
                }
                break;
            case 96:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==44/*[,]*/)){
                    /*consume*/
                    /*
                       96:281 expression=>expression , • assignment_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$assignment_expression(l,state)){
                        /*--unique-id--96--DO-NOT-REPLACE*/
                        add_reduce(state,3,162);
                        prod = 96;
                        continue;
                    }
                } else if(non_capture_5730bfe813b6b040(l)/*[{] [nl] [END_OF_FILE]*/||(l.utf==59/*[;]*/)){
                    /*peek-production-closure*/
                    /*
                       38:98 expression_statement=>expression • asi
                    */
                    if(state=$asi_group_017_104(l,state)){
                        /*--unique-id--31--DO-NOT-REPLACE*/
                        add_reduce(state,2,30);
                        prod = 31;
                        continue;
                    }
                }
                break;
            case 97:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==61/*[=]*/)){
                    /*consume*/
                    /*
                       115:345 assignment_expression=>left_hand_side_expression = • assignment_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$assignment_expression(l,state)){
                        /*--unique-id--96--DO-NOT-REPLACE*/
                        add_reduce(state,3,183);
                        prod = 96;
                        continue;
                    }
                } else if(assert_consume(l,state,defined_token_6d4f77707d3e0e5a(l)/*[++]*/||defined_token_f2ef34011f64cef0(l)/*[--]*/)){
                    /*consume*/
                    /*
                       134:412 update_expression=>left_hand_side_expression ++ •
                       134:413 update_expression=>left_hand_side_expression -- •
                    */
                    /*--unique-id--133--DO-NOT-REPLACE*/
                    add_reduce(state,2,201);
                    prod = 133;
                    continue;
                } else if((((((((((defined_token_37edf5ebc00dbfe6(l)/*[/=]*/||defined_token_2c342d130718e813(l)/*[%=]*/)||defined_token_97755a959607b02c(l)/*[+=]*/)||defined_token_eac5c307c1a80303(l)/*[-=]*/)||defined_token_5892ddf818179b1b(l)/*[<<=]*/)||defined_token_eaad0114272c4ffc(l)/*[>>=] [>>>=]*/)||defined_token_c7d7983a743dfb89(l)/*[&=]*/)||defined_token_8c2d44d7057fe753(l)/*[^=]*/)||defined_token_cf21971e32338a79(l)/*[|=]*/)||defined_token_aaa75300a4a9f79d(l)/*[asteriskasterisk=]*/)||(l.utf==42/*[*]*/)){
                    /*peek-production-closure*/
                    /*
                       115:346 assignment_expression=>left_hand_side_expression • assignment_operator assignment_expression
                    */
                    if(state=$assignment_operator(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$assignment_expression(l,state)){
                            /*--unique-id--96--DO-NOT-REPLACE*/
                            add_reduce(state,3,184);
                            prod = 96;
                            continue;
                        }
                    }
                } else {
                    /*assert-end*/
                    /*
                       134:411 update_expression=>left_hand_side_expression •
                    */
                    /*--unique-id--133--DO-NOT-REPLACE*/
                    prod = 133;
                    continue;
                }
                break;
            case 99:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(l.utf==40/*[(]*/){
                    /*peek-production-closure*/
                    /*
                       88:236 cover_call_expression_and_async_arrow_head=>member_expression • arguments
                    */
                    if(state=$arguments(l,state)){
                        /*--unique-id--104--DO-NOT-REPLACE*/
                        add_reduce(state,2,129);
                        prod = 104;
                        continue;
                    }
                } else if(defined_token_675b48fc93d1800c(l)/*[?.]*/){
                    /*peek-production-closure*/
                    /*
                       111:320 optional_expression=>member_expression • optional_chain
                    */
                    if(state=$optional_chain(l,state)){
                        /*--unique-id--111--DO-NOT-REPLACE*/
                        add_reduce(state,2,179);
                        prod = 111;
                        continue;
                    }
                } else if(assert_consume(l,state,l.utf==91/*[[]*/)){
                    /*consume*/
                    /*
                       99:289 member_expression=>member_expression [ • expression ]
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$expression(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==93/*[]]*/)){
                            /*--unique-id--99--DO-NOT-REPLACE*/
                            add_reduce(state,4,164);
                            prod = 99;
                            continue;
                        }
                    }
                } else if(assert_consume(l,state,l.utf==46/*[.]*/)){
                    /*consume*/
                    /*
                       99:290 member_expression=>member_expression . • identifier_name
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$identifier_name(l,state)){
                        /*--unique-id--99--DO-NOT-REPLACE*/
                        add_reduce(state,3,165);
                        prod = 99;
                        continue;
                    }
                } else if(l.utf==96/*[`]*/){
                    /*peek-production-closure*/
                    /*
                       99:291 member_expression=>member_expression • template_literal
                    */
                    if(state=$template_literal(l,state)){
                        /*--unique-id--99--DO-NOT-REPLACE*/
                        add_reduce(state,2,166);
                        prod = 99;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       98:286 new_expression=>member_expression •
                    */
                    /*--unique-id--97--DO-NOT-REPLACE*/
                    prod = 97;
                    continue;
                }
                break;
            case 104:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==46/*[.]*/)){
                    /*consume*/
                    /*
                       104:301 call_expression=>call_expression . • identifier_name
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$identifier_name(l,state)){
                        /*--unique-id--104--DO-NOT-REPLACE*/
                        add_reduce(state,3,165);
                        prod = 104;
                        continue;
                    }
                } else if(l.utf==40/*[(]*/){
                    /*peek-production-closure*/
                    /*
                       104:304 call_expression=>call_expression • arguments
                    */
                    if(state=$arguments(l,state)){
                        /*--unique-id--104--DO-NOT-REPLACE*/
                        add_reduce(state,2,172);
                        prod = 104;
                        continue;
                    }
                } else if(assert_consume(l,state,l.utf==91/*[[]*/)){
                    /*consume*/
                    /*
                       104:305 call_expression=>call_expression [ • expression ]
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$expression(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==93/*[]]*/)){
                            /*--unique-id--104--DO-NOT-REPLACE*/
                            add_reduce(state,4,164);
                            prod = 104;
                            continue;
                        }
                    }
                } else if(l.utf==96/*[`]*/){
                    /*peek-production-closure*/
                    /*
                       104:307 call_expression=>call_expression • template_literal
                    */
                    if(state=$template_literal(l,state)){
                        /*--unique-id--104--DO-NOT-REPLACE*/
                        add_reduce(state,2,173);
                        prod = 104;
                        continue;
                    }
                } else if(defined_token_675b48fc93d1800c(l)/*[?.]*/){
                    /*peek-production-closure*/
                    /*
                       111:321 optional_expression=>call_expression • optional_chain
                    */
                    if(state=$optional_chain(l,state)){
                        /*--unique-id--111--DO-NOT-REPLACE*/
                        add_reduce(state,2,179);
                        prod = 111;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       97:284 left_hand_side_expression=>call_expression •
                    */
                    /*--unique-id--97--DO-NOT-REPLACE*/
                    prod = 97;
                    continue;
                }
                break;
            case 111:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(defined_token_675b48fc93d1800c(l)/*[?.]*/){
                    /*assert-production-closure*/
                    /*
                       111:322 optional_expression=>optional_expression • optional_chain
                    */
                    if(state=$optional_chain(l,state)){
                        /*--unique-id--111--DO-NOT-REPLACE*/
                        add_reduce(state,2,179);
                        prod = 111;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       97:285 left_hand_side_expression=>optional_expression •
                    */
                    /*--unique-id--97--DO-NOT-REPLACE*/
                    prod = 97;
                    continue;
                }
                break;
            case 118:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==63/*[?]*/)){
                    /*consume*/
                    /*
                       117:360 conditional_expression=>short_circuit_expression ? • assignment_expression : assignment_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$assignment_expression(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==58/*[:]*/)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$assignment_expression(l,state)){
                                /*--unique-id--96--DO-NOT-REPLACE*/
                                add_reduce(state,5,185);
                                prod = 96;
                                continue;
                            }
                        }
                    }
                } else {
                    /*assert-end*/
                    /*
                       117:359 conditional_expression=>short_circuit_expression •
                    */
                    /*--unique-id--96--DO-NOT-REPLACE*/
                    prod = 96;
                    continue;
                }
                break;
            case 119:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_62e66454a337f212(l)/*[||]*/)){
                    /*consume*/
                    /*
                       119:364 logical_or_expression=>logical_or_expression || • logical_and_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$logical_and_expression(l,state)){
                        /*--unique-id--119--DO-NOT-REPLACE*/
                        add_reduce(state,3,186);
                        prod = 119;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       118:361 short_circuit_expression=>logical_or_expression •
                    */
                    /*--unique-id--118--DO-NOT-REPLACE*/
                    prod = 118;
                    continue;
                }
                break;
            case 120:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==38/*[&]*/)){
                    /*consume*/
                    /*
                       120:366 logical_and_expression=>logical_and_expression & • & bitwise_or_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==38/*[&]*/)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$bitwise_or_expression(l,state)){
                            /*--unique-id--120--DO-NOT-REPLACE*/
                            add_reduce(state,4,186);
                            prod = 120;
                            continue;
                        }
                    }
                } else {
                    /*assert-end*/
                    /*
                       119:363 logical_or_expression=>logical_and_expression •
                    */
                    /*--unique-id--119--DO-NOT-REPLACE*/
                    prod = 119;
                    continue;
                }
                break;
            case 121:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(defined_token_bfaf50116b98d6b4(l)/*[??]*/){
                    /*assert-end*/
                    /*
                       122:368 coalesce_expression_head_group_0247_118=>coalesce_expression •
                    */
                    /*--unique-id--123--DO-NOT-REPLACE*/
                    prod = 123;
                    continue;
                } else {
                    /*assert-end*/
                    /*
                       118:362 short_circuit_expression=>coalesce_expression •
                    */
                    /*--unique-id--118--DO-NOT-REPLACE*/
                    prod = 118;
                    continue;
                }
                break;
            case 123:
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_87b2bbc4cf92dae2(l)/*[??]*/)){
                    /*consume*/
                    /*
                       121:367 coalesce_expression=>coalesce_expression_head ?? • bitwise_or_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$bitwise_or_expression(l,state)){
                        /*--unique-id--121--DO-NOT-REPLACE*/
                        add_reduce(state,3,187);
                        prod = 121;
                        continue;
                    }
                }
                break;
            case 124:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==124/*[|]*/)){
                    /*consume*/
                    /*
                       124:372 bitwise_or_expression=>bitwise_or_expression | • bitwise_xor_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$bitwise_xor_expression(l,state)){
                        /*--unique-id--124--DO-NOT-REPLACE*/
                        add_reduce(state,3,188);
                        prod = 124;
                        continue;
                    }
                } else if(defined_token_bfaf50116b98d6b4(l)/*[??]*/){
                    /*assert-end*/
                    /*
                       122:369 coalesce_expression_head_group_0247_118=>bitwise_or_expression •
                    */
                    /*--unique-id--123--DO-NOT-REPLACE*/
                    prod = 123;
                    continue;
                } else {
                    /*assert-end*/
                    /*
                       120:365 logical_and_expression=>bitwise_or_expression •
                    */
                    /*--unique-id--120--DO-NOT-REPLACE*/
                    prod = 120;
                    continue;
                }
                break;
            case 125:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==94/*[^]*/)){
                    /*consume*/
                    /*
                       125:374 bitwise_xor_expression=>bitwise_xor_expression ^ • bitwise_and_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$bitwise_and_expression(l,state)){
                        /*--unique-id--125--DO-NOT-REPLACE*/
                        add_reduce(state,3,188);
                        prod = 125;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       124:371 bitwise_or_expression=>bitwise_xor_expression •
                    */
                    /*--unique-id--124--DO-NOT-REPLACE*/
                    prod = 124;
                    continue;
                }
                break;
            case 126:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==38/*[&]*/)){
                    /*consume*/
                    /*
                       126:376 bitwise_and_expression=>bitwise_and_expression & • equality_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$equality_expression(l,state)){
                        /*--unique-id--126--DO-NOT-REPLACE*/
                        add_reduce(state,3,188);
                        prod = 126;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       125:373 bitwise_xor_expression=>bitwise_and_expression •
                    */
                    /*--unique-id--125--DO-NOT-REPLACE*/
                    prod = 125;
                    continue;
                }
                break;
            case 127:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_4df9552a310b74e2(l)/*[==] [===]*/||defined_token_04e94f0279c3936b(l)/*[!=] [!==]*/)){
                    /*consume*/
                    /*
                       127:378 equality_expression=>equality_expression == • relational_expression
                       127:379 equality_expression=>equality_expression != • relational_expression
                       127:380 equality_expression=>equality_expression === • relational_expression
                       127:381 equality_expression=>equality_expression !== • relational_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$relational_expression(l,state)){
                        /*--unique-id--127--DO-NOT-REPLACE*/
                        add_reduce(state,3,189);
                        prod = 127;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       126:375 bitwise_and_expression=>equality_expression •
                    */
                    /*--unique-id--126--DO-NOT-REPLACE*/
                    prod = 126;
                    continue;
                }
                break;
            case 128:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_8bbb4e33781aec74(l)/*[instanceof]*/)){
                    /*consume*/
                    /*
                       128:387 relational_expression=>relational_expression τinstanceof • shift_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$shift_expression(l,state)){
                        /*--unique-id--128--DO-NOT-REPLACE*/
                        add_reduce(state,3,191);
                        prod = 128;
                        continue;
                    }
                } else if(assert_consume(l,state,defined_token_b910302f4210711c(l)/*[in]*/)){
                    /*consume*/
                    /*
                       128:388 relational_expression=>relational_expression τin • shift_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$shift_expression(l,state)){
                        /*--unique-id--128--DO-NOT-REPLACE*/
                        add_reduce(state,3,192);
                        prod = 128;
                        continue;
                    }
                } else if(assert_consume(l,state,((defined_token_7c7dc8357e27bfc9(l)/*[<=]*/||defined_token_dad2c38b0a2035e1(l)/*[>=]*/)||(l.utf==60/*[<]*/))||(l.utf==62/*[>]*/))){
                    /*consume*/
                    /*
                       128:383 relational_expression=>relational_expression < • shift_expression
                       128:384 relational_expression=>relational_expression > • shift_expression
                       128:385 relational_expression=>relational_expression <= • shift_expression
                       128:386 relational_expression=>relational_expression >= • shift_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$shift_expression(l,state)){
                        /*--unique-id--128--DO-NOT-REPLACE*/
                        add_reduce(state,3,190);
                        prod = 128;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       127:377 equality_expression=>relational_expression •
                    */
                    /*--unique-id--127--DO-NOT-REPLACE*/
                    prod = 127;
                    continue;
                }
                break;
            case 129:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_bc9f32cdea34416c(l)/*[<<]*/||defined_token_910c81aa02511c5e(l)/*[>>] [>>>]*/)){
                    /*consume*/
                    /*
                       129:390 shift_expression=>shift_expression << • additive_expression
                       129:391 shift_expression=>shift_expression >> • additive_expression
                       129:392 shift_expression=>shift_expression >>> • additive_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$additive_expression(l,state)){
                        /*--unique-id--129--DO-NOT-REPLACE*/
                        add_reduce(state,3,193);
                        prod = 129;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       128:382 relational_expression=>shift_expression •
                    */
                    /*--unique-id--128--DO-NOT-REPLACE*/
                    prod = 128;
                    continue;
                }
                break;
            case 130:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,(l.utf==43/*[+]*/)||(l.utf==45/*[-]*/))){
                    /*consume*/
                    /*
                       130:394 additive_expression=>additive_expression + • multiplicative_expression
                       130:395 additive_expression=>additive_expression - • multiplicative_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$multiplicative_expression(l,state)){
                        /*--unique-id--130--DO-NOT-REPLACE*/
                        add_reduce(state,3,194);
                        prod = 130;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       129:389 shift_expression=>additive_expression •
                    */
                    /*--unique-id--129--DO-NOT-REPLACE*/
                    prod = 129;
                    continue;
                }
                break;
            case 131:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,assert_table(l,0x0,0x8420,0x0,0x0)/*tbl:[ * ] [ / ] [ % ]*/)){
                    /*consume*/
                    /*
                       131:397 multiplicative_expression=>multiplicative_expression * • exponentiation_expression
                       131:398 multiplicative_expression=>multiplicative_expression / • exponentiation_expression
                       131:399 multiplicative_expression=>multiplicative_expression % • exponentiation_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$exponentiation_expression(l,state)){
                        /*--unique-id--131--DO-NOT-REPLACE*/
                        add_reduce(state,3,195);
                        prod = 131;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       130:393 additive_expression=>multiplicative_expression •
                    */
                    /*--unique-id--130--DO-NOT-REPLACE*/
                    prod = 130;
                    continue;
                }
                break;
            case 133:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_1fa4a9b14e1fe8cc(l)/*[asteriskasterisk]*/)){
                    /*consume*/
                    /*
                       132:401 exponentiation_expression=>unary_expression ** • exponentiation_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$exponentiation_expression(l,state)){
                        /*--unique-id--131--DO-NOT-REPLACE*/
                        add_reduce(state,3,196);
                        prod = 131;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       132:400 exponentiation_expression=>unary_expression •
                    */
                    /*--unique-id--131--DO-NOT-REPLACE*/
                    prod = 131;
                    continue;
                }
                break;
            case 184:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==58/*[:]*/)){
                    /*consume*/
                    /*
                       57:151 labeled_statement=>label_identifier : • labeled_item
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$labeled_item(l,state)){
                        /*--unique-id--31--DO-NOT-REPLACE*/
                        add_reduce(state,3,73);
                        prod = 31;
                        continue;
                    }
                }
                break;
            case 185:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(l.utf==61/*[=]*/){
                    /*peek*/
                    /*
                       86:232 arrow_parameters=>identifier_reference •
                       113:332 primary_expression=>identifier_reference •
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(l.utf==62/*[>]*/){
                        /*assert-end*/
                        /*
                           86:232 arrow_parameters=>identifier_reference •
                        */
                        /*--unique-id--86--DO-NOT-REPLACE*/
                        add_reduce(state,1,126);
                        prod = 86;
                        continue;
                    } else {
                        /*assert-end*/
                        /*
                           113:332 primary_expression=>identifier_reference •
                        */
                        /*--unique-id--99--DO-NOT-REPLACE*/
                        prod = 99;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       113:332 primary_expression=>identifier_reference •
                    */
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    prod = 99;
                    continue;
                }
                break;
            case 187:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(l.utf==58/*[:]*/){
                    /*assert-end*/
                    /*
                       184:537 label_identifier=>identifier •
                    */
                    /*--unique-id--184--DO-NOT-REPLACE*/
                    add_reduce(state,1,253);
                    prod = 184;
                    continue;
                } else {
                    /*assert-end*/
                    /*
                       185:538 identifier_reference=>identifier •
                    */
                    /*--unique-id--185--DO-NOT-REPLACE*/
                    add_reduce(state,1,254);
                    prod = 185;
                    continue;
                }
                break;
        }
        break;
    }
    debug_stack.push({ name:"statement GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==31);
}
/*production name: declaration
            grammar index: 32
            bodies:
	32:88 declaration=>• class_declaration - 
		32:89 declaration=>• hoistable_declaration - 
		32:90 declaration=>• lexical_declaration - 
            compile time: 6.769ms*/;
function $declaration(l,state){
    debug_stack.push({ name:"declaration RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(defined_token_2d05a4070a3ebcf4(l)/*[class]*/){
        /*peek-production-closure*/
        /*
           32:88 declaration=>• class_declaration
        */
        if(state=$class_declaration(l,state)){
            /*--unique-id--32--DO-NOT-REPLACE*/
            debug_stack.push({ name:"declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else if(defined_token_d4a7e22f69f4ee35(l)/*[async]*/||defined_token_e043e2118bdadad0(l)/*[function]*/){
        /*peek-production-closure*/
        /*
           32:89 declaration=>• hoistable_declaration
        */
        if(state=$function_declaration(l,state)){
            /*--unique-id--32--DO-NOT-REPLACE*/
            debug_stack.push({ name:"declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           32:90 declaration=>• lexical_declaration
        */
        if(state=$lexical_declaration(l,state)){
            /*--unique-id--32--DO-NOT-REPLACE*/
            debug_stack.push({ name:"declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"declaration RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: breakable_statement
            grammar index: 34
            bodies:
	34:92 breakable_statement=>• iteration_statement - 
		34:93 breakable_statement=>• switch_statement - 
            compile time: 6.562ms*/;
function $breakable_statement(l,state){
    debug_stack.push({ name:"breakable_statement RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(defined_token_c4d5aeb40acb5412(l)/*[switch]*/){
        /*peek-production-closure*/
        /*
           34:93 breakable_statement=>• switch_statement
        */
        if(state=$switch_statement(l,state)){
            /*--unique-id--34--DO-NOT-REPLACE*/
            debug_stack.push({ name:"breakable_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           34:92 breakable_statement=>• iteration_statement
        */
        if(state=$iteration_statement(l,state)){
            /*--unique-id--34--DO-NOT-REPLACE*/
            debug_stack.push({ name:"breakable_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"breakable_statement RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: block
            grammar index: 36
            bodies:
	36:95 block=>• { statement_list } - 
		36:96 block=>• { } - 
            compile time: 20.004ms*/;
function $block(l,state){
    debug_stack.push({ name:"block RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==123/*[{]*/)){
        /*consume*/
        /*
           36:95 block=>{ • statement_list }
           36:96 block=>{ • }
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==125/*[}]*/)){
            /*consume*/
            /*
               36:96 block=>{ } •
            */
            /*--unique-id--36--DO-NOT-REPLACE*/
            add_reduce(state,2,28);
            debug_stack.push({ name:"block RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        } else {
            /*peek-production-closure*/
            /*
               36:95 block=>{ • statement_list }
            */
            if(state=$statement_list(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==125/*[}]*/)){
                    /*--unique-id--36--DO-NOT-REPLACE*/
                    add_reduce(state,3,27);
                    debug_stack.push({ name:"block RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        }
    }
    debug_stack.push({ name:"block RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: empty_statement
            grammar index: 37
            bodies:
	37:97 empty_statement=>• ; - 
            compile time: 0.702ms*/;
function $empty_statement(l,state){
    debug_stack.push({ name:"empty_statement RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==59/*[;]*/)){
        /*consume*/
        /*
           37:97 empty_statement=>; •
        */
        /*--unique-id--37--DO-NOT-REPLACE*/
        add_reduce(state,1,29);
        debug_stack.push({ name:"empty_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"empty_statement RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: expression_statement
            grammar index: 38
            bodies:
	38:98 expression_statement=>• expression asi - 
            compile time: 3.834ms*/;
function $expression_statement(l,state){
    debug_stack.push({ name:"expression_statement RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$expression(l,state)){
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(state=$asi_group_017_104(l,state)){
            /*--unique-id--38--DO-NOT-REPLACE*/
            add_reduce(state,2,30);
            debug_stack.push({ name:"expression_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"expression_statement RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: if_statement_group_179_108
            grammar index: 39
            bodies:
	39:99 if_statement_group_179_108=>• τelse statement - 
            compile time: 3.773ms*/;
function $if_statement_group_179_108(l,state){
    debug_stack.push({ name:"if_statement_group_179_108 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_7c714fc2ee65a23e(l)/*[else]*/)){
        /*consume*/
        /*
           39:99 if_statement_group_179_108=>τelse • statement
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$statement(l,state)){
            /*--unique-id--39--DO-NOT-REPLACE*/
            add_reduce(state,2,0);
            debug_stack.push({ name:"if_statement_group_179_108 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"if_statement_group_179_108 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: if_statement
            grammar index: 40
            bodies:
	40:100 if_statement=>• τif ( expression ) statement if_statement_group_179_108 - 
		40:101 if_statement=>• τif ( expression ) statement - 
            compile time: 37.096ms*/;
function $if_statement(l,state){
    debug_stack.push({ name:"if_statement RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_911b730840de3b6c(l)/*[if]*/)){
        /*consume*/
        /*
           40:100 if_statement=>τif • ( expression ) statement if_statement_group_179_108
           40:101 if_statement=>τif • ( expression ) statement
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==40/*[(]*/)){
            /*consume*/
            /*
               40:100 if_statement=>τif ( • expression ) statement if_statement_group_179_108
               40:101 if_statement=>τif ( • expression ) statement
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$expression(l,state)){
                /*assert*/
                /*
                   40:100 if_statement=>τif ( • expression ) statement if_statement_group_179_108
                   40:101 if_statement=>τif ( • expression ) statement
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                    /*consume*/
                    /*
                       40:100 if_statement=>τif ( expression ) • statement if_statement_group_179_108
                       40:101 if_statement=>τif ( expression ) • statement
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$statement(l,state)){
                        /*assert*/
                        /*
                           40:100 if_statement=>τif ( expression ) • statement if_statement_group_179_108
                           40:101 if_statement=>τif ( expression ) • statement
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(defined_token_7c714fc2ee65a23e(l)/*[else]*/){
                            /*assert-production-closure*/
                            /*
                               40:100 if_statement=>τif ( expression ) statement • if_statement_group_179_108
                            */
                            if(state=$if_statement_group_179_108(l,state)){
                                /*--unique-id--40--DO-NOT-REPLACE*/
                                add_reduce(state,6,31);
                                debug_stack.push({ name:"if_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                return state;
                            }
                        } else {
                            /*assert-end*/
                            /*
                               40:101 if_statement=>τif ( expression ) statement •
                            */
                            /*--unique-id--40--DO-NOT-REPLACE*/
                            add_reduce(state,5,32);
                            debug_stack.push({ name:"if_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                            return state;
                        }
                    }
                }
            }
        }
    }
    debug_stack.push({ name:"if_statement RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: iteration_statement_group_184_109
            grammar index: 41
            bodies:
	41:102 iteration_statement_group_184_109=>• expression - 
		41:103 iteration_statement_group_184_109=>• τvar variable_declaration_list - 
            compile time: 15.008ms*/;
function $iteration_statement_group_184_109(l,state){
    debug_stack.push({ name:"iteration_statement_group_184_109 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_5012f964d8a70e70(l)/*[var]*/)){
        /*consume*/
        /*
           41:103 iteration_statement_group_184_109=>τvar • variable_declaration_list
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$variable_declaration_list(l,state)){
            /*--unique-id--41--DO-NOT-REPLACE*/
            add_reduce(state,2,33);
            debug_stack.push({ name:"iteration_statement_group_184_109 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           41:102 iteration_statement_group_184_109=>• expression
        */
        if(state=$expression(l,state)){
            /*--unique-id--41--DO-NOT-REPLACE*/
            debug_stack.push({ name:"iteration_statement_group_184_109 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"iteration_statement_group_184_109 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: iteration_statement_group_089_110
            grammar index: 42
            bodies:
	42:104 iteration_statement_group_089_110=>• left_hand_side_expression - 
		42:105 iteration_statement_group_089_110=>• τvar for_binding - 
		42:106 iteration_statement_group_089_110=>• for_declaration - 
            compile time: 15.058ms*/;
function $iteration_statement_group_089_110(l,state){
    debug_stack.push({ name:"iteration_statement_group_089_110 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_5012f964d8a70e70(l)/*[var]*/)){
        /*consume*/
        /*
           42:105 iteration_statement_group_089_110=>τvar • for_binding
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$for_binding(l,state)){
            /*--unique-id--42--DO-NOT-REPLACE*/
            add_reduce(state,2,34);
            debug_stack.push({ name:"iteration_statement_group_089_110 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else if(defined_token_35df72b33b14e143(l)/*[let]*/||defined_token_ddd8f7298284e05e(l)/*[const]*/){
        /*peek-production-closure*/
        /*
           42:106 iteration_statement_group_089_110=>• for_declaration
        */
        if(state=$for_declaration(l,state)){
            /*--unique-id--42--DO-NOT-REPLACE*/
            debug_stack.push({ name:"iteration_statement_group_089_110 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           42:104 iteration_statement_group_089_110=>• left_hand_side_expression
        */
        if(state=$left_hand_side_expression(l,state)){
            /*--unique-id--42--DO-NOT-REPLACE*/
            debug_stack.push({ name:"iteration_statement_group_089_110 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"iteration_statement_group_089_110 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: iteration_statement
            grammar index: 43
            bodies:
	43:107 iteration_statement=>• τdo statement τwhile ( expression ) asi - 
		43:108 iteration_statement=>• τwhile ( expression ) statement - 
		43:109 iteration_statement=>• τfor ( iteration_statement_group_184_109 ; expression ; expression ) statement - 
		43:110 iteration_statement=>• τfor ( lexical_declaration expression ; expression ) statement - 
		43:111 iteration_statement=>• τfor ( iteration_statement_group_089_110 τin expression ) statement - 
		43:112 iteration_statement=>• τfor τawait ( iteration_statement_group_089_110 τof expression ) statement - 
		43:113 iteration_statement=>• τfor ( ; expression ; expression ) statement - 
		43:114 iteration_statement=>• τfor ( iteration_statement_group_184_109 ; ; expression ) statement - 
		43:115 iteration_statement=>• τfor ( iteration_statement_group_184_109 ; expression ; ) statement - 
		43:116 iteration_statement=>• τfor ( lexical_declaration ; expression ) statement - 
		43:117 iteration_statement=>• τfor ( lexical_declaration expression ; ) statement - 
		43:118 iteration_statement=>• τfor ( iteration_statement_group_089_110 τof expression ) statement - 
		43:119 iteration_statement=>• τfor ( ; ; expression ) statement - 
		43:120 iteration_statement=>• τfor ( ; expression ; ) statement - 
		43:121 iteration_statement=>• τfor ( iteration_statement_group_184_109 ; ; ) statement - 
		43:122 iteration_statement=>• τfor ( lexical_declaration ; ) statement - 
		43:123 iteration_statement=>• τfor ( ; ; ) statement - 
            compile time: 1454.418ms*/;
function $iteration_statement(l,state){
    debug_stack.push({ name:"iteration_statement RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_4c51ded3b971fa93(l)/*[do]*/)){
        /*consume*/
        /*
           43:107 iteration_statement=>τdo • statement τwhile ( expression ) asi
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$statement(l,state)){
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,defined_token_926ab0b5b37a4ddd(l)/*[while]*/)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==40/*[(]*/)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$expression(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                            sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                            if(state=$asi_group_017_104(l,state)){
                                /*--unique-id--43--DO-NOT-REPLACE*/
                                add_reduce(state,7,35);
                                debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                return state;
                            }
                        }
                    }
                }
            }
        }
    } else if(assert_consume(l,state,defined_token_926ab0b5b37a4ddd(l)/*[while]*/)){
        /*consume*/
        /*
           43:108 iteration_statement=>τwhile • ( expression ) statement
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==40/*[(]*/)){
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$expression(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$statement(l,state)){
                        /*--unique-id--43--DO-NOT-REPLACE*/
                        add_reduce(state,5,36);
                        debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                }
            }
        }
    } else if(defined_token_22a3e3a7de4e4fb7(l)/*[for]*/){
        /*peek*/
        /*
           43:109 iteration_statement=>• τfor ( iteration_statement_group_184_109 ; expression ; expression ) statement
           43:110 iteration_statement=>• τfor ( lexical_declaration expression ; expression ) statement
           43:111 iteration_statement=>• τfor ( iteration_statement_group_089_110 τin expression ) statement
           43:112 iteration_statement=>• τfor τawait ( iteration_statement_group_089_110 τof expression ) statement
           43:113 iteration_statement=>• τfor ( ; expression ; expression ) statement
           43:114 iteration_statement=>• τfor ( iteration_statement_group_184_109 ; ; expression ) statement
           43:115 iteration_statement=>• τfor ( iteration_statement_group_184_109 ; expression ; ) statement
           43:116 iteration_statement=>• τfor ( lexical_declaration ; expression ) statement
           43:117 iteration_statement=>• τfor ( lexical_declaration expression ; ) statement
           43:118 iteration_statement=>• τfor ( iteration_statement_group_089_110 τof expression ) statement
           43:119 iteration_statement=>• τfor ( ; ; expression ) statement
           43:120 iteration_statement=>• τfor ( ; expression ; ) statement
           43:121 iteration_statement=>• τfor ( iteration_statement_group_184_109 ; ; ) statement
           43:122 iteration_statement=>• τfor ( lexical_declaration ; ) statement
           43:123 iteration_statement=>• τfor ( ; ; ) statement
        */
        let pk = l.copy();
        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
        if(pk.utf==40/*[(]*/){
            /*peek*/
            /*
               43:109 iteration_statement=>• τfor ( iteration_statement_group_184_109 ; expression ; expression ) statement
               43:110 iteration_statement=>• τfor ( lexical_declaration expression ; expression ) statement
               43:111 iteration_statement=>• τfor ( iteration_statement_group_089_110 τin expression ) statement
               43:113 iteration_statement=>• τfor ( ; expression ; expression ) statement
               43:114 iteration_statement=>• τfor ( iteration_statement_group_184_109 ; ; expression ) statement
               43:115 iteration_statement=>• τfor ( iteration_statement_group_184_109 ; expression ; ) statement
               43:116 iteration_statement=>• τfor ( lexical_declaration ; expression ) statement
               43:117 iteration_statement=>• τfor ( lexical_declaration expression ; ) statement
               43:118 iteration_statement=>• τfor ( iteration_statement_group_089_110 τof expression ) statement
               43:119 iteration_statement=>• τfor ( ; ; expression ) statement
               43:120 iteration_statement=>• τfor ( ; expression ; ) statement
               43:121 iteration_statement=>• τfor ( iteration_statement_group_184_109 ; ; ) statement
               43:122 iteration_statement=>• τfor ( lexical_declaration ; ) statement
               43:123 iteration_statement=>• τfor ( ; ; ) statement
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,defined_token_22a3e3a7de4e4fb7(l)/*[for]*/)){
                /*consume*/
                /*
                   43:109 iteration_statement=>τfor • ( iteration_statement_group_184_109 ; expression ; expression ) statement
                   43:110 iteration_statement=>τfor • ( lexical_declaration expression ; expression ) statement
                   43:111 iteration_statement=>τfor • ( iteration_statement_group_089_110 τin expression ) statement
                   43:113 iteration_statement=>τfor • ( ; expression ; expression ) statement
                   43:114 iteration_statement=>τfor • ( iteration_statement_group_184_109 ; ; expression ) statement
                   43:115 iteration_statement=>τfor • ( iteration_statement_group_184_109 ; expression ; ) statement
                   43:116 iteration_statement=>τfor • ( lexical_declaration ; expression ) statement
                   43:117 iteration_statement=>τfor • ( lexical_declaration expression ; ) statement
                   43:118 iteration_statement=>τfor • ( iteration_statement_group_089_110 τof expression ) statement
                   43:119 iteration_statement=>τfor • ( ; ; expression ) statement
                   43:120 iteration_statement=>τfor • ( ; expression ; ) statement
                   43:121 iteration_statement=>τfor • ( iteration_statement_group_184_109 ; ; ) statement
                   43:122 iteration_statement=>τfor • ( lexical_declaration ; ) statement
                   43:123 iteration_statement=>τfor • ( ; ; ) statement
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==40/*[(]*/)){
                    /*consume*/
                    /*
                       43:109 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; expression ; expression ) statement
                       43:110 iteration_statement=>τfor ( • lexical_declaration expression ; expression ) statement
                       43:111 iteration_statement=>τfor ( • iteration_statement_group_089_110 τin expression ) statement
                       43:113 iteration_statement=>τfor ( • ; expression ; expression ) statement
                       43:114 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; ; expression ) statement
                       43:115 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; expression ; ) statement
                       43:116 iteration_statement=>τfor ( • lexical_declaration ; expression ) statement
                       43:117 iteration_statement=>τfor ( • lexical_declaration expression ; ) statement
                       43:118 iteration_statement=>τfor ( • iteration_statement_group_089_110 τof expression ) statement
                       43:119 iteration_statement=>τfor ( • ; ; expression ) statement
                       43:120 iteration_statement=>τfor ( • ; expression ; ) statement
                       43:121 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; ; ) statement
                       43:122 iteration_statement=>τfor ( • lexical_declaration ; ) statement
                       43:123 iteration_statement=>τfor ( • ; ; ) statement
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(l.utf==59/*[;]*/){
                        /*peek*/
                        /*
                           43:113 iteration_statement=>τfor ( • ; expression ; expression ) statement
                           43:119 iteration_statement=>τfor ( • ; ; expression ) statement
                           43:120 iteration_statement=>τfor ( • ; expression ; ) statement
                           43:123 iteration_statement=>τfor ( • ; ; ) statement
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==59/*[;]*/)){
                            /*consume*/
                            /*
                               43:113 iteration_statement=>τfor ( ; • expression ; expression ) statement
                               43:119 iteration_statement=>τfor ( ; • ; expression ) statement
                               43:120 iteration_statement=>τfor ( ; • expression ; ) statement
                               43:123 iteration_statement=>τfor ( ; • ; ) statement
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(l.utf==59/*[;]*/){
                                /*peek*/
                                /*
                                   43:119 iteration_statement=>τfor ( ; • ; expression ) statement
                                   43:123 iteration_statement=>τfor ( ; • ; ) statement
                                */
                                let pk = l.copy();
                                sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                if(pk.utf==41/*[)]*/){
                                    /*peek*/
                                    /*
                                       43:123 iteration_statement=>τfor ( ; • ; ) statement
                                    */
                                    if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(state=$statement(l,state)){
                                                /*--unique-id--43--DO-NOT-REPLACE*/
                                                add_reduce(state,6,51);
                                                debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    }
                                } else if((((defined_token_6d4f77707d3e0e5a(pk)/*[++]*/||defined_token_f2ef34011f64cef0(pk)/*[--]*/)||assert_table(pk,0x0,0xa996,0x88000000,0x48000001)/*tbl:[ ( ] [ [ ] [ { ] [ / ] [ " ] [ ' ] [ ` ] [ _ ] [ $ ] [ + ] [ - ] [ ~ ] [ ! ]*/)||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
                                    /*peek*/
                                    /*
                                       43:119 iteration_statement=>τfor ( ; • ; expression ) statement
                                    */
                                    if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(state=$expression(l,state)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(state=$statement(l,state)){
                                                    /*--unique-id--43--DO-NOT-REPLACE*/
                                                    add_reduce(state,7,47);
                                                    debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                    return state;
                                                }
                                            }
                                        }
                                    }
                                }
                            } else {
                                /*peek-production-closure*/
                                /*
                                   43:113 iteration_statement=>τfor ( ; • expression ; expression ) statement
                                   43:120 iteration_statement=>τfor ( ; • expression ; ) statement
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(state=$expression(l,state)){
                                    /*assert*/
                                    /*
                                       43:113 iteration_statement=>τfor ( ; • expression ; expression ) statement
                                       43:120 iteration_statement=>τfor ( ; • expression ; ) statement
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                        /*consume*/
                                        /*
                                           43:113 iteration_statement=>τfor ( ; expression ; • expression ) statement
                                           43:120 iteration_statement=>τfor ( ; expression ; • ) statement
                                        */
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                            /*consume*/
                                            /*
                                               43:120 iteration_statement=>τfor ( ; expression ; ) • statement
                                            */
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(state=$statement(l,state)){
                                                /*--unique-id--43--DO-NOT-REPLACE*/
                                                add_reduce(state,7,48);
                                                debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        } else {
                                            /*peek-production-closure*/
                                            /*
                                               43:113 iteration_statement=>τfor ( ; expression ; • expression ) statement
                                            */
                                            if(state=$expression(l,state)){
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                    if(state=$statement(l,state)){
                                                        /*--unique-id--43--DO-NOT-REPLACE*/
                                                        add_reduce(state,8,41);
                                                        debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                        return state;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } else if(defined_token_d2484e28b4e85b35(l)/*[async]*/||(l.utf==40/*[(]*/)){
                        /*peek*/
                        /*
                           43:109 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; expression ; expression ) statement
                           43:111 iteration_statement=>τfor ( • iteration_statement_group_089_110 τin expression ) statement
                           43:114 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; ; expression ) statement
                           43:115 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; expression ; ) statement
                           43:118 iteration_statement=>τfor ( • iteration_statement_group_089_110 τof expression ) statement
                           43:121 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; ; ) statement
                        */
                        let pk = l.copy();
                        sk_532e3acfd819c8d6(pk.next()/*[ ws ][ 6 ]*/);
                        if(((pk.utf==95/*[_]*/)||(pk.utf==36/*[$]*/))||pk.isID()/*[id]*/){
                            /*peek-production-closure*/
                            /*
                               43:109 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; expression ; expression ) statement
                               43:114 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; ; expression ) statement
                               43:115 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; expression ; ) statement
                               43:121 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; ; ) statement
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$iteration_statement_group_184_109(l,state)){
                                /*assert*/
                                /*
                                   43:109 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; expression ; expression ) statement
                                   43:114 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; ; expression ) statement
                                   43:115 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; expression ; ) statement
                                   43:121 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; ; ) statement
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                    /*consume*/
                                    /*
                                       43:109 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; expression ) statement
                                       43:114 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; expression ) statement
                                       43:115 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; ) statement
                                       43:121 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; ) statement
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(l.utf==59/*[;]*/){
                                        /*peek*/
                                        /*
                                           43:114 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; expression ) statement
                                           43:121 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; ) statement
                                        */
                                        let pk = l.copy();
                                        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                        if(pk.utf==41/*[)]*/){
                                            /*peek*/
                                            /*
                                               43:121 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; ) statement
                                            */
                                            if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                    if(state=$statement(l,state)){
                                                        /*--unique-id--43--DO-NOT-REPLACE*/
                                                        add_reduce(state,7,49);
                                                        debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                        return state;
                                                    }
                                                }
                                            }
                                        } else if((((defined_token_6d4f77707d3e0e5a(pk)/*[++]*/||defined_token_f2ef34011f64cef0(pk)/*[--]*/)||assert_table(pk,0x0,0xa996,0x88000000,0x48000001)/*tbl:[ ( ] [ [ ] [ { ] [ / ] [ " ] [ ' ] [ ` ] [ _ ] [ $ ] [ + ] [ - ] [ ~ ] [ ! ]*/)||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
                                            /*peek*/
                                            /*
                                               43:114 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; expression ) statement
                                            */
                                            if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(state=$expression(l,state)){
                                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                    if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                        if(state=$statement(l,state)){
                                                            /*--unique-id--43--DO-NOT-REPLACE*/
                                                            add_reduce(state,8,42);
                                                            debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                            return state;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    } else {
                                        /*peek-production-closure*/
                                        /*
                                           43:109 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; expression ) statement
                                           43:115 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; ) statement
                                        */
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(state=$expression(l,state)){
                                            /*assert*/
                                            /*
                                               43:109 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; expression ) statement
                                               43:115 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; ) statement
                                            */
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                                /*consume*/
                                                /*
                                                   43:109 iteration_statement=>τfor ( iteration_statement_group_184_109 ; expression ; • expression ) statement
                                                   43:115 iteration_statement=>τfor ( iteration_statement_group_184_109 ; expression ; • ) statement
                                                */
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                    /*consume*/
                                                    /*
                                                       43:115 iteration_statement=>τfor ( iteration_statement_group_184_109 ; expression ; ) • statement
                                                    */
                                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                    if(state=$statement(l,state)){
                                                        /*--unique-id--43--DO-NOT-REPLACE*/
                                                        add_reduce(state,8,43);
                                                        debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                        return state;
                                                    }
                                                } else {
                                                    /*peek-production-closure*/
                                                    /*
                                                       43:109 iteration_statement=>τfor ( iteration_statement_group_184_109 ; expression ; • expression ) statement
                                                    */
                                                    if(state=$expression(l,state)){
                                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                            if(state=$statement(l,state)){
                                                                /*--unique-id--43--DO-NOT-REPLACE*/
                                                                add_reduce(state,9,37);
                                                                debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                                return state;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        } else if((((((((((((((((((((non_capture_5730bfe813b6b040(pk)/*[{] [nl] [END_OF_FILE]*/||defined_token_4da8f1a70aed701d(pk)/*[as]*/)||defined_token_797102d9c2b797d3(pk)/*[from] [function]*/)||defined_token_37edf5ebc00dbfe6(pk)/*[/=]*/)||defined_token_f5b15d408b6280ad(pk)/*[?.] [??]*/)||defined_token_2c342d130718e813(pk)/*[%=]*/)||defined_token_53a6f4c8d1e0fc43(pk)/*[extends]*/)||defined_token_870ef36bec3a881f(pk)/*[+=] [++]*/)||defined_token_4749150ec48378d0(pk)/*[-=] [--]*/)||defined_token_318c95b1e64de46d(pk)/*[<<=] [<<] [<=]*/)||defined_token_3be2267a053f0395(pk)/*[>>=] [>>>=] [>>] [>>>] [>=]*/)||defined_token_c7d7983a743dfb89(pk)/*[&=]*/)||defined_token_8c2d44d7057fe753(pk)/*[^=]*/)||defined_token_d1de557e71993f67(pk)/*[|=] [||]*/)||defined_token_485338d34f29b52a(pk)/*[asteriskasterisk=] [asteriskasterisk]*/)||defined_token_265afb3bd124d12f(pk)/*[instanceof] [in]*/)||defined_token_4df9552a310b74e2(pk)/*[==] [===]*/)||defined_token_04e94f0279c3936b(pk)/*[!=] [!==]*/)||defined_token_83d9c34c073caa4f(pk)/*[of]*/)||assert_table(pk,0x0,0xfc00ff60,0x68000000,0x38000001)/*tbl:[ ( ] [ , ] [ } ] [ = ] [ ] ] [ * ] [ ) ] [ : ] [ ; ] [ { ] [ [ ] [ . ] [ ` ] [ / ] [ % ] [ + ] [ - ] [ < ] [ > ] [ & ] [ ^ ] [ | ] [ ? ]*/)||pk.END()){
                            /*peek*/
                            /*
                               43:118 iteration_statement=>τfor ( • iteration_statement_group_089_110 τof expression ) statement
                               43:111 iteration_statement=>τfor ( • iteration_statement_group_089_110 τin expression ) statement
                               43:109 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; expression ; expression ) statement
                               43:114 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; ; expression ) statement
                               43:115 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; expression ; ) statement
                               43:121 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; ; ) statement
                            */
                            let mk = mark();
                            let anchor = l.copy();
                            let anchor_state = state;
                            /*109,9,2,111,7,2,114,8,2,115,8,2,118,7,2,121,7,2*/
                            /*43*/
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$iteration_statement_group_184_109(l,state)){
                                /*assert*/
                                /*
                                   43:109 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; expression ; expression ) statement
                                   43:114 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; ; expression ) statement
                                   43:115 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; expression ; ) statement
                                   43:121 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; ; ) statement
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                    /*consume*/
                                    /*
                                       43:109 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; expression ) statement
                                       43:114 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; expression ) statement
                                       43:115 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; ) statement
                                       43:121 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; ) statement
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(l.utf==59/*[;]*/){
                                        /*peek*/
                                        /*
                                           43:114 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; expression ) statement
                                           43:121 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; ) statement
                                        */
                                        let pk = l.copy();
                                        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                        if(pk.utf==41/*[)]*/){
                                            /*peek*/
                                            /*
                                               43:121 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; ) statement
                                            */
                                            if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                    if(state=$statement(l,state)){
                                                        /*--unique-id--43--DO-NOT-REPLACE*/
                                                        add_reduce(state,7,49);
                                                        debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                        return state;
                                                    }
                                                }
                                            }
                                        } else if((((defined_token_6d4f77707d3e0e5a(pk)/*[++]*/||defined_token_f2ef34011f64cef0(pk)/*[--]*/)||assert_table(pk,0x0,0xa996,0x88000000,0x48000001)/*tbl:[ ( ] [ [ ] [ { ] [ / ] [ " ] [ ' ] [ ` ] [ _ ] [ $ ] [ + ] [ - ] [ ~ ] [ ! ]*/)||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
                                            /*peek*/
                                            /*
                                               43:114 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; expression ) statement
                                            */
                                            if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(state=$expression(l,state)){
                                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                    if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                        if(state=$statement(l,state)){
                                                            /*--unique-id--43--DO-NOT-REPLACE*/
                                                            add_reduce(state,8,42);
                                                            debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                            return state;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    } else {
                                        /*peek-production-closure*/
                                        /*
                                           43:109 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; expression ) statement
                                           43:115 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; ) statement
                                        */
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(state=$expression(l,state)){
                                            /*assert*/
                                            /*
                                               43:109 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; expression ) statement
                                               43:115 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; ) statement
                                            */
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                                /*consume*/
                                                /*
                                                   43:109 iteration_statement=>τfor ( iteration_statement_group_184_109 ; expression ; • expression ) statement
                                                   43:115 iteration_statement=>τfor ( iteration_statement_group_184_109 ; expression ; • ) statement
                                                */
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                    /*consume*/
                                                    /*
                                                       43:115 iteration_statement=>τfor ( iteration_statement_group_184_109 ; expression ; ) • statement
                                                    */
                                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                    if(state=$statement(l,state)){
                                                        /*--unique-id--43--DO-NOT-REPLACE*/
                                                        add_reduce(state,8,43);
                                                        debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                        return state;
                                                    }
                                                } else {
                                                    /*peek-production-closure*/
                                                    /*
                                                       43:109 iteration_statement=>τfor ( iteration_statement_group_184_109 ; expression ; • expression ) statement
                                                    */
                                                    if(state=$expression(l,state)){
                                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                            if(state=$statement(l,state)){
                                                                /*--unique-id--43--DO-NOT-REPLACE*/
                                                                add_reduce(state,9,37);
                                                                debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                                return state;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            /*109,9,2,111,7,2,114,8,2,115,8,2,118,7,2,121,7,2*/
                            state = reset(mk,anchor,l,anchor_state);
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$iteration_statement_group_089_110(l,state)){
                                /*assert*/
                                /*
                                   43:111 iteration_statement=>τfor ( • iteration_statement_group_089_110 τin expression ) statement
                                   43:118 iteration_statement=>τfor ( • iteration_statement_group_089_110 τof expression ) statement
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,defined_token_b910302f4210711c(l)/*[in]*/)){
                                    /*consume*/
                                    /*
                                       43:111 iteration_statement=>τfor ( iteration_statement_group_089_110 τin • expression ) statement
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(state=$expression(l,state)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(state=$statement(l,state)){
                                                /*--unique-id--43--DO-NOT-REPLACE*/
                                                add_reduce(state,7,39);
                                                debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    }
                                } else if(assert_consume(l,state,defined_token_c6b5fbb944702d5a(l)/*[of]*/)){
                                    /*consume*/
                                    /*
                                       43:118 iteration_statement=>τfor ( iteration_statement_group_089_110 τof • expression ) statement
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(state=$expression(l,state)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(state=$statement(l,state)){
                                                /*--unique-id--43--DO-NOT-REPLACE*/
                                                add_reduce(state,7,46);
                                                debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } else if(defined_token_35df72b33b14e143(l)/*[let]*/||defined_token_ddd8f7298284e05e(l)/*[const]*/){
                        /*peek*/
                        /*
                           43:110 iteration_statement=>τfor ( • lexical_declaration expression ; expression ) statement
                           43:111 iteration_statement=>τfor ( • iteration_statement_group_089_110 τin expression ) statement
                           43:116 iteration_statement=>τfor ( • lexical_declaration ; expression ) statement
                           43:117 iteration_statement=>τfor ( • lexical_declaration expression ; ) statement
                           43:118 iteration_statement=>τfor ( • iteration_statement_group_089_110 τof expression ) statement
                           43:122 iteration_statement=>τfor ( • lexical_declaration ; ) statement
                        */
                        let mk = mark();
                        let anchor = l.copy();
                        let anchor_state = state;
                        /*110,8,2,111,7,2,116,7,2,117,7,2,118,7,2,122,6,2*/
                        /*43*/
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$lexical_declaration(l,state)){
                            /*assert*/
                            /*
                               43:110 iteration_statement=>τfor ( • lexical_declaration expression ; expression ) statement
                               43:116 iteration_statement=>τfor ( • lexical_declaration ; expression ) statement
                               43:117 iteration_statement=>τfor ( • lexical_declaration expression ; ) statement
                               43:122 iteration_statement=>τfor ( • lexical_declaration ; ) statement
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(l.utf==59/*[;]*/){
                                /*peek*/
                                /*
                                   43:116 iteration_statement=>τfor ( lexical_declaration • ; expression ) statement
                                   43:122 iteration_statement=>τfor ( lexical_declaration • ; ) statement
                                */
                                let pk = l.copy();
                                sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                if(pk.utf==41/*[)]*/){
                                    /*peek*/
                                    /*
                                       43:122 iteration_statement=>τfor ( lexical_declaration • ; ) statement
                                    */
                                    if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(state=$statement(l,state)){
                                                /*--unique-id--43--DO-NOT-REPLACE*/
                                                add_reduce(state,6,50);
                                                debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    }
                                } else if((((defined_token_6d4f77707d3e0e5a(pk)/*[++]*/||defined_token_f2ef34011f64cef0(pk)/*[--]*/)||assert_table(pk,0x0,0xa996,0x88000000,0x48000001)/*tbl:[ ( ] [ [ ] [ { ] [ / ] [ " ] [ ' ] [ ` ] [ _ ] [ $ ] [ + ] [ - ] [ ~ ] [ ! ]*/)||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
                                    /*peek*/
                                    /*
                                       43:116 iteration_statement=>τfor ( lexical_declaration • ; expression ) statement
                                    */
                                    if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(state=$expression(l,state)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(state=$statement(l,state)){
                                                    /*--unique-id--43--DO-NOT-REPLACE*/
                                                    add_reduce(state,7,44);
                                                    debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                    return state;
                                                }
                                            }
                                        }
                                    }
                                }
                            } else {
                                /*peek-production-closure*/
                                /*
                                   43:110 iteration_statement=>τfor ( lexical_declaration • expression ; expression ) statement
                                   43:117 iteration_statement=>τfor ( lexical_declaration • expression ; ) statement
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(state=$expression(l,state)){
                                    /*assert*/
                                    /*
                                       43:110 iteration_statement=>τfor ( lexical_declaration • expression ; expression ) statement
                                       43:117 iteration_statement=>τfor ( lexical_declaration • expression ; ) statement
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                        /*consume*/
                                        /*
                                           43:110 iteration_statement=>τfor ( lexical_declaration expression ; • expression ) statement
                                           43:117 iteration_statement=>τfor ( lexical_declaration expression ; • ) statement
                                        */
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                            /*consume*/
                                            /*
                                               43:117 iteration_statement=>τfor ( lexical_declaration expression ; ) • statement
                                            */
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(state=$statement(l,state)){
                                                /*--unique-id--43--DO-NOT-REPLACE*/
                                                add_reduce(state,7,45);
                                                debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        } else {
                                            /*peek-production-closure*/
                                            /*
                                               43:110 iteration_statement=>τfor ( lexical_declaration expression ; • expression ) statement
                                            */
                                            if(state=$expression(l,state)){
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                    if(state=$statement(l,state)){
                                                        /*--unique-id--43--DO-NOT-REPLACE*/
                                                        add_reduce(state,8,38);
                                                        debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                        return state;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        /*110,8,2,111,7,2,116,7,2,117,7,2,118,7,2,122,6,2*/
                        state = reset(mk,anchor,l,anchor_state);
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$iteration_statement_group_089_110(l,state)){
                            /*assert*/
                            /*
                               43:111 iteration_statement=>τfor ( • iteration_statement_group_089_110 τin expression ) statement
                               43:118 iteration_statement=>τfor ( • iteration_statement_group_089_110 τof expression ) statement
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,defined_token_b910302f4210711c(l)/*[in]*/)){
                                /*consume*/
                                /*
                                   43:111 iteration_statement=>τfor ( iteration_statement_group_089_110 τin • expression ) statement
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(state=$expression(l,state)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(state=$statement(l,state)){
                                            /*--unique-id--43--DO-NOT-REPLACE*/
                                            add_reduce(state,7,39);
                                            debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                }
                            } else if(assert_consume(l,state,defined_token_c6b5fbb944702d5a(l)/*[of]*/)){
                                /*consume*/
                                /*
                                   43:118 iteration_statement=>τfor ( iteration_statement_group_089_110 τof • expression ) statement
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(state=$expression(l,state)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(state=$statement(l,state)){
                                            /*--unique-id--43--DO-NOT-REPLACE*/
                                            add_reduce(state,7,46);
                                            debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                }
                            }
                        }
                    } else if(((((((defined_token_202a14414fc7633f(l)/*[yield]*/||defined_token_139af7e0759e829f(l)/*[delete]*/)||defined_token_330b5cfc72831f04(l)/*[void]*/)||defined_token_c3b14b29a9dcf48e(l)/*[typeof]*/)||defined_token_44aa3f48541f3402(l)/*[await]*/)||defined_token_6d4f77707d3e0e5a(l)/*[++]*/)||defined_token_f2ef34011f64cef0(l)/*[--]*/)||assert_table(l,0x0,0x2802,0x0,0x40000000)/*tbl:[ + ] [ - ] [ ~ ] [ ! ]*/){
                        /*peek-production-closure*/
                        /*
                           43:109 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; expression ; expression ) statement
                           43:114 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; ; expression ) statement
                           43:115 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; expression ; ) statement
                           43:121 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; ; ) statement
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$iteration_statement_group_184_109(l,state)){
                            /*assert*/
                            /*
                               43:109 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; expression ; expression ) statement
                               43:114 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; ; expression ) statement
                               43:115 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; expression ; ) statement
                               43:121 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; ; ) statement
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                /*consume*/
                                /*
                                   43:109 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; expression ) statement
                                   43:114 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; expression ) statement
                                   43:115 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; ) statement
                                   43:121 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; ) statement
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(l.utf==59/*[;]*/){
                                    /*peek*/
                                    /*
                                       43:114 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; expression ) statement
                                       43:121 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; ) statement
                                    */
                                    let pk = l.copy();
                                    sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                    if(pk.utf==41/*[)]*/){
                                        /*peek*/
                                        /*
                                           43:121 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; ) statement
                                        */
                                        if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(state=$statement(l,state)){
                                                    /*--unique-id--43--DO-NOT-REPLACE*/
                                                    add_reduce(state,7,49);
                                                    debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                    return state;
                                                }
                                            }
                                        }
                                    } else if((((defined_token_6d4f77707d3e0e5a(pk)/*[++]*/||defined_token_f2ef34011f64cef0(pk)/*[--]*/)||assert_table(pk,0x0,0xa996,0x88000000,0x48000001)/*tbl:[ ( ] [ [ ] [ { ] [ / ] [ " ] [ ' ] [ ` ] [ _ ] [ $ ] [ + ] [ - ] [ ~ ] [ ! ]*/)||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
                                        /*peek*/
                                        /*
                                           43:114 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; expression ) statement
                                        */
                                        if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(state=$expression(l,state)){
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                    if(state=$statement(l,state)){
                                                        /*--unique-id--43--DO-NOT-REPLACE*/
                                                        add_reduce(state,8,42);
                                                        debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                        return state;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                } else {
                                    /*peek-production-closure*/
                                    /*
                                       43:109 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; expression ) statement
                                       43:115 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; ) statement
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(state=$expression(l,state)){
                                        /*assert*/
                                        /*
                                           43:109 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; expression ) statement
                                           43:115 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; ) statement
                                        */
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                            /*consume*/
                                            /*
                                               43:109 iteration_statement=>τfor ( iteration_statement_group_184_109 ; expression ; • expression ) statement
                                               43:115 iteration_statement=>τfor ( iteration_statement_group_184_109 ; expression ; • ) statement
                                            */
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                /*consume*/
                                                /*
                                                   43:115 iteration_statement=>τfor ( iteration_statement_group_184_109 ; expression ; ) • statement
                                                */
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(state=$statement(l,state)){
                                                    /*--unique-id--43--DO-NOT-REPLACE*/
                                                    add_reduce(state,8,43);
                                                    debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                    return state;
                                                }
                                            } else {
                                                /*peek-production-closure*/
                                                /*
                                                   43:109 iteration_statement=>τfor ( iteration_statement_group_184_109 ; expression ; • expression ) statement
                                                */
                                                if(state=$expression(l,state)){
                                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                    if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                        if(state=$statement(l,state)){
                                                            /*--unique-id--43--DO-NOT-REPLACE*/
                                                            add_reduce(state,9,37);
                                                            debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                            return state;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } else if((assert_table(l,0x0,0x8094,0x88000000,0x8000001)/*tbl:[ [ ] [ { ] [ / ] [ " ] [ ' ] [ ` ] [ _ ] [ $ ]*/||l.isID()/*[id]*/)||l.isNum()/*[num]*/){
                        /*peek*/
                        /*
                           43:109 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; expression ; expression ) statement
                           43:111 iteration_statement=>τfor ( • iteration_statement_group_089_110 τin expression ) statement
                           43:114 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; ; expression ) statement
                           43:115 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; expression ; ) statement
                           43:118 iteration_statement=>τfor ( • iteration_statement_group_089_110 τof expression ) statement
                           43:121 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; ; ) statement
                        */
                        let mk = mark();
                        let anchor = l.copy();
                        let anchor_state = state;
                        /*109,9,2,111,7,2,114,8,2,115,8,2,118,7,2,121,7,2*/
                        /*43*/
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$iteration_statement_group_184_109(l,state)){
                            /*assert*/
                            /*
                               43:109 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; expression ; expression ) statement
                               43:114 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; ; expression ) statement
                               43:115 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; expression ; ) statement
                               43:121 iteration_statement=>τfor ( • iteration_statement_group_184_109 ; ; ) statement
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                /*consume*/
                                /*
                                   43:109 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; expression ) statement
                                   43:114 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; expression ) statement
                                   43:115 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; ) statement
                                   43:121 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; ) statement
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(l.utf==59/*[;]*/){
                                    /*peek*/
                                    /*
                                       43:114 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; expression ) statement
                                       43:121 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; ) statement
                                    */
                                    let pk = l.copy();
                                    sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                    if(pk.utf==41/*[)]*/){
                                        /*peek*/
                                        /*
                                           43:121 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; ) statement
                                        */
                                        if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(state=$statement(l,state)){
                                                    /*--unique-id--43--DO-NOT-REPLACE*/
                                                    add_reduce(state,7,49);
                                                    debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                    return state;
                                                }
                                            }
                                        }
                                    } else if((((defined_token_6d4f77707d3e0e5a(pk)/*[++]*/||defined_token_f2ef34011f64cef0(pk)/*[--]*/)||assert_table(pk,0x0,0xa996,0x88000000,0x48000001)/*tbl:[ ( ] [ [ ] [ { ] [ / ] [ " ] [ ' ] [ ` ] [ _ ] [ $ ] [ + ] [ - ] [ ~ ] [ ! ]*/)||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
                                        /*peek*/
                                        /*
                                           43:114 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • ; expression ) statement
                                        */
                                        if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(state=$expression(l,state)){
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                    if(state=$statement(l,state)){
                                                        /*--unique-id--43--DO-NOT-REPLACE*/
                                                        add_reduce(state,8,42);
                                                        debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                        return state;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                } else {
                                    /*peek-production-closure*/
                                    /*
                                       43:109 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; expression ) statement
                                       43:115 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; ) statement
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(state=$expression(l,state)){
                                        /*assert*/
                                        /*
                                           43:109 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; expression ) statement
                                           43:115 iteration_statement=>τfor ( iteration_statement_group_184_109 ; • expression ; ) statement
                                        */
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==59/*[;]*/)){
                                            /*consume*/
                                            /*
                                               43:109 iteration_statement=>τfor ( iteration_statement_group_184_109 ; expression ; • expression ) statement
                                               43:115 iteration_statement=>τfor ( iteration_statement_group_184_109 ; expression ; • ) statement
                                            */
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                /*consume*/
                                                /*
                                                   43:115 iteration_statement=>τfor ( iteration_statement_group_184_109 ; expression ; ) • statement
                                                */
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(state=$statement(l,state)){
                                                    /*--unique-id--43--DO-NOT-REPLACE*/
                                                    add_reduce(state,8,43);
                                                    debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                    return state;
                                                }
                                            } else {
                                                /*peek-production-closure*/
                                                /*
                                                   43:109 iteration_statement=>τfor ( iteration_statement_group_184_109 ; expression ; • expression ) statement
                                                */
                                                if(state=$expression(l,state)){
                                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                    if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                        if(state=$statement(l,state)){
                                                            /*--unique-id--43--DO-NOT-REPLACE*/
                                                            add_reduce(state,9,37);
                                                            debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                            return state;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        /*109,9,2,111,7,2,114,8,2,115,8,2,118,7,2,121,7,2*/
                        state = reset(mk,anchor,l,anchor_state);
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$iteration_statement_group_089_110(l,state)){
                            /*assert*/
                            /*
                               43:111 iteration_statement=>τfor ( • iteration_statement_group_089_110 τin expression ) statement
                               43:118 iteration_statement=>τfor ( • iteration_statement_group_089_110 τof expression ) statement
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,defined_token_b910302f4210711c(l)/*[in]*/)){
                                /*consume*/
                                /*
                                   43:111 iteration_statement=>τfor ( iteration_statement_group_089_110 τin • expression ) statement
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(state=$expression(l,state)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(state=$statement(l,state)){
                                            /*--unique-id--43--DO-NOT-REPLACE*/
                                            add_reduce(state,7,39);
                                            debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                }
                            } else if(assert_consume(l,state,defined_token_c6b5fbb944702d5a(l)/*[of]*/)){
                                /*consume*/
                                /*
                                   43:118 iteration_statement=>τfor ( iteration_statement_group_089_110 τof • expression ) statement
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(state=$expression(l,state)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(state=$statement(l,state)){
                                            /*--unique-id--43--DO-NOT-REPLACE*/
                                            add_reduce(state,7,46);
                                            debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } else {
            /*peek-production-closure*/
            /*
               43:112 iteration_statement=>• τfor τawait ( iteration_statement_group_089_110 τof expression ) statement
            */
            if(assert_consume(l,state,defined_token_22a3e3a7de4e4fb7(l)/*[for]*/)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_ded0f96a7228c7c5(l)/*[await]*/)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==40/*[(]*/)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$iteration_statement_group_089_110(l,state)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,defined_token_c6b5fbb944702d5a(l)/*[of]*/)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(state=$expression(l,state)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(state=$statement(l,state)){
                                            /*--unique-id--43--DO-NOT-REPLACE*/
                                            add_reduce(state,8,40);
                                            debug_stack.push({ name:"iteration_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    debug_stack.push({ name:"iteration_statement RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: for_declaration
            grammar index: 44
            bodies:
	44:124 for_declaration=>• let_or_const for_binding - 
            compile time: 5.161ms*/;
function $for_declaration(l,state){
    debug_stack.push({ name:"for_declaration RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$let_or_const(l,state)){
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$for_binding(l,state)){
            /*--unique-id--44--DO-NOT-REPLACE*/
            add_reduce(state,2,52);
            debug_stack.push({ name:"for_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"for_declaration RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: for_binding
            grammar index: 45
            bodies:
	45:125 for_binding=>• binding_identifier - 
		45:126 for_binding=>• binding_pattern - 
            compile time: 4.946ms*/;
function $for_binding(l,state){
    debug_stack.push({ name:"for_binding RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if((l.utf==123/*[{]*/)||(l.utf==91/*[[]*/)){
        /*peek-production-closure*/
        /*
           45:126 for_binding=>• binding_pattern
        */
        if(state=$binding_pattern(l,state)){
            /*--unique-id--45--DO-NOT-REPLACE*/
            debug_stack.push({ name:"for_binding RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           45:125 for_binding=>• binding_identifier
        */
        if(state=$identifier(l,state)){
            /*--unique-id--45--DO-NOT-REPLACE*/
            add_reduce(state,1,126);
            debug_stack.push({ name:"for_binding RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"for_binding RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: continue_statement
            grammar index: 46
            bodies:
	46:127 continue_statement=>• τcontinue label_identifier asi - 
		46:128 continue_statement=>• τcontinue asi - 
            compile time: 11.145ms*/;
function $continue_statement(l,state){
    debug_stack.push({ name:"continue_statement RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_663cc31c85f53275(l)/*[continue]*/)){
        /*consume*/
        /*
           46:127 continue_statement=>τcontinue • label_identifier asi
           46:128 continue_statement=>τcontinue • asi
        */
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(non_capture_5730bfe813b6b040(l)/*[{] [nl] [END_OF_FILE]*/||(l.utf==59/*[;]*/)){
            /*peek-production-closure*/
            /*
               46:128 continue_statement=>τcontinue • asi
            */
            if(state=$asi_group_017_104(l,state)){
                /*--unique-id--46--DO-NOT-REPLACE*/
                add_reduce(state,2,54);
                debug_stack.push({ name:"continue_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else {
            /*peek-production-closure*/
            /*
               46:127 continue_statement=>τcontinue • label_identifier asi
            */
            if(state=$identifier(l,state)){
                add_reduce(state,1,253);
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(state=$asi_group_017_104(l,state)){
                    /*--unique-id--46--DO-NOT-REPLACE*/
                    add_reduce(state,3,53);
                    debug_stack.push({ name:"continue_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        }
    }
    debug_stack.push({ name:"continue_statement RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: break_statement
            grammar index: 47
            bodies:
	47:129 break_statement=>• τbreak label_identifier asi - 
		47:130 break_statement=>• τbreak asi - 
            compile time: 18.219ms*/;
function $break_statement(l,state){
    debug_stack.push({ name:"break_statement RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_c3524ff0dce64492(l)/*[break]*/)){
        /*consume*/
        /*
           47:129 break_statement=>τbreak • label_identifier asi
           47:130 break_statement=>τbreak • asi
        */
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(non_capture_5730bfe813b6b040(l)/*[{] [nl] [END_OF_FILE]*/||(l.utf==59/*[;]*/)){
            /*peek-production-closure*/
            /*
               47:130 break_statement=>τbreak • asi
            */
            if(state=$asi_group_017_104(l,state)){
                /*--unique-id--47--DO-NOT-REPLACE*/
                add_reduce(state,2,56);
                debug_stack.push({ name:"break_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else {
            /*peek-production-closure*/
            /*
               47:129 break_statement=>τbreak • label_identifier asi
            */
            if(state=$identifier(l,state)){
                add_reduce(state,1,253);
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(state=$asi_group_017_104(l,state)){
                    /*--unique-id--47--DO-NOT-REPLACE*/
                    add_reduce(state,3,55);
                    debug_stack.push({ name:"break_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        }
    }
    debug_stack.push({ name:"break_statement RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: return_statement
            grammar index: 48
            bodies:
	48:131 return_statement=>• τreturn expression asi - 
		48:132 return_statement=>• τreturn asi - 
            compile time: 22.428ms*/;
function $return_statement(l,state){
    debug_stack.push({ name:"return_statement RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_876f036172605c26(l)/*[return]*/)){
        /*consume*/
        /*
           48:131 return_statement=>τreturn • expression asi
           48:132 return_statement=>τreturn • asi
        */
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(non_capture_5730bfe813b6b040(l)/*[{] [nl] [END_OF_FILE]*/||(l.utf==59/*[;]*/)){
            /*peek-production-closure*/
            /*
               48:132 return_statement=>τreturn • asi
            */
            if(state=$asi_group_017_104(l,state)){
                /*--unique-id--48--DO-NOT-REPLACE*/
                add_reduce(state,2,58);
                debug_stack.push({ name:"return_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else {
            /*peek-production-closure*/
            /*
               48:131 return_statement=>τreturn • expression asi
            */
            if(state=$expression(l,state)){
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(state=$asi_group_017_104(l,state)){
                    /*--unique-id--48--DO-NOT-REPLACE*/
                    add_reduce(state,3,57);
                    debug_stack.push({ name:"return_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        }
    }
    debug_stack.push({ name:"return_statement RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: throw_statement
            grammar index: 49
            bodies:
	49:133 throw_statement=>• τthrow expression asi - 
            compile time: 7.632ms*/;
function $throw_statement(l,state){
    debug_stack.push({ name:"throw_statement RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_da195cd7e0c0b959(l)/*[throw]*/)){
        /*consume*/
        /*
           49:133 throw_statement=>τthrow • expression asi
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$expression(l,state)){
            sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
            if(state=$asi_group_017_104(l,state)){
                /*--unique-id--49--DO-NOT-REPLACE*/
                add_reduce(state,3,59);
                debug_stack.push({ name:"throw_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    }
    debug_stack.push({ name:"throw_statement RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: with_statement
            grammar index: 50
            bodies:
	50:134 with_statement=>• τwith ( expression ) statement - 
            compile time: 10.965ms*/;
function $with_statement(l,state){
    debug_stack.push({ name:"with_statement RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_2cf552cd86bb015e(l)/*[with]*/)){
        /*consume*/
        /*
           50:134 with_statement=>τwith • ( expression ) statement
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==40/*[(]*/)){
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$expression(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$statement(l,state)){
                        /*--unique-id--50--DO-NOT-REPLACE*/
                        add_reduce(state,5,60);
                        debug_stack.push({ name:"with_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                }
            }
        }
    }
    debug_stack.push({ name:"with_statement RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: switch_statement
            grammar index: 51
            bodies:
	51:135 switch_statement=>• τswitch ( expression ) case_block - 
            compile time: 11.68ms*/;
function $switch_statement(l,state){
    debug_stack.push({ name:"switch_statement RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_c4d5aeb40acb5412(l)/*[switch]*/)){
        /*consume*/
        /*
           51:135 switch_statement=>τswitch • ( expression ) case_block
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==40/*[(]*/)){
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$expression(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$case_block(l,state)){
                        /*--unique-id--51--DO-NOT-REPLACE*/
                        add_reduce(state,5,61);
                        debug_stack.push({ name:"switch_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                }
            }
        }
    }
    debug_stack.push({ name:"switch_statement RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: case_block
            grammar index: 52
            bodies:
	52:136 case_block=>• { case_clauses default_clause case_clauses } - 
		52:137 case_block=>• { default_clause case_clauses } - 
		52:138 case_block=>• { case_clauses case_clauses } - 
		52:139 case_block=>• { case_clauses default_clause } - 
		52:140 case_block=>• { case_clauses } - 
		52:141 case_block=>• { default_clause } - 
		52:142 case_block=>• { } - 
            compile time: 63.115ms*/;
function $case_block(l,state){
    debug_stack.push({ name:"case_block RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==123/*[{]*/)){
        /*consume*/
        /*
           52:136 case_block=>{ • case_clauses default_clause case_clauses }
           52:137 case_block=>{ • default_clause case_clauses }
           52:138 case_block=>{ • case_clauses case_clauses }
           52:139 case_block=>{ • case_clauses default_clause }
           52:140 case_block=>{ • case_clauses }
           52:141 case_block=>{ • default_clause }
           52:142 case_block=>{ • }
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(defined_token_4b13d558acb940fb(l)/*[case]*/){
            /*peek-production-closure*/
            /*
               52:136 case_block=>{ • case_clauses default_clause case_clauses }
               52:138 case_block=>{ • case_clauses case_clauses }
               52:139 case_block=>{ • case_clauses default_clause }
               52:140 case_block=>{ • case_clauses }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$case_clauses(l,state)){
                /*assert*/
                /*
                   52:136 case_block=>{ • case_clauses default_clause case_clauses }
                   52:138 case_block=>{ • case_clauses case_clauses }
                   52:139 case_block=>{ • case_clauses default_clause }
                   52:140 case_block=>{ • case_clauses }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(defined_token_fdb42ce5868e4404(l)/*[default]*/){
                    /*peek-production-closure*/
                    /*
                       52:136 case_block=>{ case_clauses • default_clause case_clauses }
                       52:139 case_block=>{ case_clauses • default_clause }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$default_clause(l,state)){
                        /*assert*/
                        /*
                           52:136 case_block=>{ case_clauses • default_clause case_clauses }
                           52:139 case_block=>{ case_clauses • default_clause }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(defined_token_4b13d558acb940fb(l)/*[case]*/){
                            /*peek-production-closure*/
                            /*
                               52:136 case_block=>{ case_clauses default_clause • case_clauses }
                            */
                            if(state=$case_clauses(l,state)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                    /*--unique-id--52--DO-NOT-REPLACE*/
                                    add_reduce(state,5,62);
                                    debug_stack.push({ name:"case_block RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                    return state;
                                }
                            }
                        } else if(assert_consume(l,state,l.utf==125/*[}]*/)){
                            /*consume*/
                            /*
                               52:139 case_block=>{ case_clauses default_clause } •
                            */
                            /*--unique-id--52--DO-NOT-REPLACE*/
                            add_reduce(state,4,65);
                            debug_stack.push({ name:"case_block RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                            return state;
                        }
                    }
                } else if(defined_token_4b13d558acb940fb(l)/*[case]*/){
                    /*peek-production-closure*/
                    /*
                       52:138 case_block=>{ case_clauses • case_clauses }
                    */
                    if(state=$case_clauses(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                            /*--unique-id--52--DO-NOT-REPLACE*/
                            add_reduce(state,4,64);
                            debug_stack.push({ name:"case_block RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                            return state;
                        }
                    }
                } else if(assert_consume(l,state,l.utf==125/*[}]*/)){
                    /*consume*/
                    /*
                       52:140 case_block=>{ case_clauses } •
                    */
                    /*--unique-id--52--DO-NOT-REPLACE*/
                    add_reduce(state,3,66);
                    debug_stack.push({ name:"case_block RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        } else if(defined_token_fdb42ce5868e4404(l)/*[default]*/){
            /*peek-production-closure*/
            /*
               52:137 case_block=>{ • default_clause case_clauses }
               52:141 case_block=>{ • default_clause }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$default_clause(l,state)){
                /*assert*/
                /*
                   52:137 case_block=>{ • default_clause case_clauses }
                   52:141 case_block=>{ • default_clause }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(defined_token_4b13d558acb940fb(l)/*[case]*/){
                    /*peek-production-closure*/
                    /*
                       52:137 case_block=>{ default_clause • case_clauses }
                    */
                    if(state=$case_clauses(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                            /*--unique-id--52--DO-NOT-REPLACE*/
                            add_reduce(state,4,63);
                            debug_stack.push({ name:"case_block RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                            return state;
                        }
                    }
                } else if(assert_consume(l,state,l.utf==125/*[}]*/)){
                    /*consume*/
                    /*
                       52:141 case_block=>{ default_clause } •
                    */
                    /*--unique-id--52--DO-NOT-REPLACE*/
                    add_reduce(state,3,67);
                    debug_stack.push({ name:"case_block RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        } else if(assert_consume(l,state,l.utf==125/*[}]*/)){
            /*consume*/
            /*
               52:142 case_block=>{ } •
            */
            /*--unique-id--52--DO-NOT-REPLACE*/
            add_reduce(state,2,68);
            debug_stack.push({ name:"case_block RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"case_block RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: case_clauses
            grammar index: 54
            bodies:
	54:145 case_clauses=>• case_clauses case_clause - 
		54:146 case_clauses=>• case_clause - 
            compile time: 206.13ms*/;
function $case_clauses(l,state){
    debug_stack.push({ name:"case_clauses RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$case_clause(l,state)){
        /*--unique-id--54--DO-NOT-REPLACE*/
        add_reduce(state,1,4);
        return $case_clauses_goto(l,state,54);
    }
    debug_stack.push({ name:"case_clauses RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $case_clauses_goto(l,state,prod){
    debug_stack.push({ name:"case_clauses GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(defined_token_4b13d558acb940fb(l)/*[case]*/){
            /*peek*/
            /*
               54:145 case_clauses=>case_clauses • case_clause
               52:138 case_block=>{ case_clauses • case_clauses }
            */
            let mk = mark();
            let anchor = l.copy();
            let anchor_state = state;
            /*145,2,1,138,4,2*/
            /*54*/
            if(state=$case_clause(l,state)){
                /*--unique-id--54--DO-NOT-REPLACE*/
                add_reduce(state,2,3);
                prod = 54;
                continue;
            }
            state = reset(mk,anchor,l,anchor_state);
        }
        break;
    }
    debug_stack.push({ name:"case_clauses GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==54);
}
/*production name: case_clause
            grammar index: 55
            bodies:
	55:147 case_clause=>• τcase expression : statement_list - 
		55:148 case_clause=>• τcase expression : - 
            compile time: 43.145ms*/;
function $case_clause(l,state){
    debug_stack.push({ name:"case_clause RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_4b13d558acb940fb(l)/*[case]*/)){
        /*consume*/
        /*
           55:147 case_clause=>τcase • expression : statement_list
           55:148 case_clause=>τcase • expression :
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$expression(l,state)){
            /*assert*/
            /*
               55:147 case_clause=>τcase • expression : statement_list
               55:148 case_clause=>τcase • expression :
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,l.utf==58/*[:]*/)){
                /*consume*/
                /*
                   55:147 case_clause=>τcase expression : • statement_list
                   55:148 case_clause=>τcase expression : •
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(l)||defined_token_d8f9d336d83ac87c(l)/*[yield]*/)||defined_token_670f23e41126e00b(l)/*[async] [as] [await]*/)||defined_token_99035833d16742d9(l)/*[new] [null]*/)||defined_token_0a34667347bd2a3a(l)/*[super] [set] [switch]*/)||defined_token_1f80f2e0a149fe3d(l)/*[import] [if]*/)||defined_token_8e8ee78381c90ca5(l)/*[this] [target] [true] [typeof] [throw] [try]*/)||defined_token_8f5d282f35165648(l)/*[get]*/)||defined_token_967ffd9bf1cf840d(l)/*[from] [false] [for] [function]*/)||defined_token_e8ddfc9b5a509a6c(l)/*[delete] [do] [debugger]*/)||defined_token_1ae4fe309b644fa1(l)/*[void] [var]*/)||defined_token_6d4f77707d3e0e5a(l)/*[++]*/)||defined_token_f2ef34011f64cef0(l)/*[--]*/)||defined_token_aac16ca323764d7a(l)/*[while] [with]*/)||defined_token_912bb2f6b2683177(l)/*[continue] [class] [const]*/)||defined_token_c3524ff0dce64492(l)/*[break]*/)||defined_token_876f036172605c26(l)/*[return]*/)||defined_token_f188f6806e50797b(l)/*[let]*/)||assert_table(l,0x0,0x800a986,0x8000000,0x48000001)/*tbl:[ { ] [ ( ] [ [ ] [ / ] [ " ] [ ' ] [ ` ] [ + ] [ - ] [ ~ ] [ ! ] [ ; ]*/)||l.isNum()/*[num]*/){
                    /*assert-production-closure*/
                    /*
                       55:147 case_clause=>τcase expression : • statement_list
                    */
                    if(state=$statement_list(l,state)){
                        /*--unique-id--55--DO-NOT-REPLACE*/
                        add_reduce(state,4,69);
                        debug_stack.push({ name:"case_clause RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                } else {
                    /*assert-end*/
                    /*
                       55:148 case_clause=>τcase expression : •
                    */
                    /*--unique-id--55--DO-NOT-REPLACE*/
                    add_reduce(state,3,70);
                    debug_stack.push({ name:"case_clause RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        }
    }
    debug_stack.push({ name:"case_clause RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: default_clause
            grammar index: 56
            bodies:
	56:149 default_clause=>• τdefault : statement_list - 
		56:150 default_clause=>• τdefault : - 
            compile time: 38.977ms*/;
function $default_clause(l,state){
    debug_stack.push({ name:"default_clause RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_fdb42ce5868e4404(l)/*[default]*/)){
        /*consume*/
        /*
           56:149 default_clause=>τdefault • : statement_list
           56:150 default_clause=>τdefault • :
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==58/*[:]*/)){
            /*consume*/
            /*
               56:149 default_clause=>τdefault : • statement_list
               56:150 default_clause=>τdefault : •
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(l)||defined_token_d8f9d336d83ac87c(l)/*[yield]*/)||defined_token_670f23e41126e00b(l)/*[async] [as] [await]*/)||defined_token_99035833d16742d9(l)/*[new] [null]*/)||defined_token_0a34667347bd2a3a(l)/*[super] [set] [switch]*/)||defined_token_1f80f2e0a149fe3d(l)/*[import] [if]*/)||defined_token_8e8ee78381c90ca5(l)/*[this] [target] [true] [typeof] [throw] [try]*/)||defined_token_8f5d282f35165648(l)/*[get]*/)||defined_token_967ffd9bf1cf840d(l)/*[from] [false] [for] [function]*/)||defined_token_e8ddfc9b5a509a6c(l)/*[delete] [do] [debugger]*/)||defined_token_1ae4fe309b644fa1(l)/*[void] [var]*/)||defined_token_6d4f77707d3e0e5a(l)/*[++]*/)||defined_token_f2ef34011f64cef0(l)/*[--]*/)||defined_token_aac16ca323764d7a(l)/*[while] [with]*/)||defined_token_912bb2f6b2683177(l)/*[continue] [class] [const]*/)||defined_token_c3524ff0dce64492(l)/*[break]*/)||defined_token_876f036172605c26(l)/*[return]*/)||defined_token_f188f6806e50797b(l)/*[let]*/)||assert_table(l,0x0,0x800a986,0x8000000,0x48000001)/*tbl:[ { ] [ ( ] [ [ ] [ / ] [ " ] [ ' ] [ ` ] [ + ] [ - ] [ ~ ] [ ! ] [ ; ]*/)||l.isNum()/*[num]*/){
                /*assert-production-closure*/
                /*
                   56:149 default_clause=>τdefault : • statement_list
                */
                if(state=$statement_list(l,state)){
                    /*--unique-id--56--DO-NOT-REPLACE*/
                    add_reduce(state,3,71);
                    debug_stack.push({ name:"default_clause RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            } else {
                /*assert-end*/
                /*
                   56:150 default_clause=>τdefault : •
                */
                /*--unique-id--56--DO-NOT-REPLACE*/
                add_reduce(state,2,72);
                debug_stack.push({ name:"default_clause RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    }
    debug_stack.push({ name:"default_clause RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: labeled_item
            grammar index: 58
            bodies:
	58:152 labeled_item=>• statement - 
		58:153 labeled_item=>• function_declaration - 
            compile time: 44.122ms*/;
function $labeled_item(l,state){
    debug_stack.push({ name:"labeled_item RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(defined_token_d2484e28b4e85b35(l)/*[async]*/){
        /*peek*/
        /*
           58:152 labeled_item=>• statement
           58:153 labeled_item=>• function_declaration
        */
        let pk = l.copy();
        sk_532e3acfd819c8d6(pk.next()/*[ ws ][ 6 ]*/);
        if(defined_token_aa9a90ddc84fac92(pk)/*[function]*/){
            /*peek-production-closure*/
            /*
               58:153 labeled_item=>• function_declaration
            */
            if(state=$function_declaration(l,state)){
                /*--unique-id--58--DO-NOT-REPLACE*/
                debug_stack.push({ name:"labeled_item RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else {
            /*peek-production-closure*/
            /*
               58:152 labeled_item=>• statement
            */
            if(state=$statement(l,state)){
                /*--unique-id--58--DO-NOT-REPLACE*/
                debug_stack.push({ name:"labeled_item RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    } else if(defined_token_aa9a90ddc84fac92(l)/*[function]*/){
        /*peek-production-closure*/
        /*
           58:153 labeled_item=>• function_declaration
        */
        if(state=$function_declaration(l,state)){
            /*--unique-id--58--DO-NOT-REPLACE*/
            debug_stack.push({ name:"labeled_item RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           58:152 labeled_item=>• statement
        */
        if(state=$statement(l,state)){
            /*--unique-id--58--DO-NOT-REPLACE*/
            debug_stack.push({ name:"labeled_item RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"labeled_item RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: try_statement
            grammar index: 59
            bodies:
	59:154 try_statement=>• τtry block catch - 
		59:155 try_statement=>• τtry block finally - 
		59:156 try_statement=>• τtry block catch finally - 
            compile time: 50.109ms*/;
function $try_statement(l,state){
    debug_stack.push({ name:"try_statement RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_1c4bd208294c1ee4(l)/*[try]*/)){
        /*consume*/
        /*
           59:154 try_statement=>τtry • block catch
           59:155 try_statement=>τtry • block finally
           59:156 try_statement=>τtry • block catch finally
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$block(l,state)){
            /*assert*/
            /*
               59:154 try_statement=>τtry • block catch
               59:155 try_statement=>τtry • block finally
               59:156 try_statement=>τtry • block catch finally
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(defined_token_b6bc2531754746f6(l)/*[catch]*/){
                /*peek-production-closure*/
                /*
                   59:154 try_statement=>τtry block • catch
                   59:156 try_statement=>τtry block • catch finally
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(state=$catch(l,state)){
                    /*assert*/
                    /*
                       59:154 try_statement=>τtry block • catch
                       59:156 try_statement=>τtry block • catch finally
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(defined_token_ac4e40d39583f370(l)/*[finally]*/){
                        /*assert-production-closure*/
                        /*
                           59:156 try_statement=>τtry block catch • finally
                        */
                        if(state=$finally(l,state)){
                            /*--unique-id--59--DO-NOT-REPLACE*/
                            add_reduce(state,4,76);
                            debug_stack.push({ name:"try_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                            return state;
                        }
                    } else {
                        /*assert-end*/
                        /*
                           59:154 try_statement=>τtry block catch •
                        */
                        /*--unique-id--59--DO-NOT-REPLACE*/
                        add_reduce(state,3,74);
                        debug_stack.push({ name:"try_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                }
            } else {
                /*peek-production-closure*/
                /*
                   59:155 try_statement=>τtry block • finally
                */
                if(state=$finally(l,state)){
                    /*--unique-id--59--DO-NOT-REPLACE*/
                    add_reduce(state,3,75);
                    debug_stack.push({ name:"try_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        }
    }
    debug_stack.push({ name:"try_statement RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: catch
            grammar index: 60
            bodies:
	60:157 catch=>• τcatch ( catch_parameter ) block - 
            compile time: 7.891ms*/;
function $catch(l,state){
    debug_stack.push({ name:"catch RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_b6bc2531754746f6(l)/*[catch]*/)){
        /*consume*/
        /*
           60:157 catch=>τcatch • ( catch_parameter ) block
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==40/*[(]*/)){
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$catch_parameter(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$block(l,state)){
                        /*--unique-id--60--DO-NOT-REPLACE*/
                        add_reduce(state,5,77);
                        debug_stack.push({ name:"catch RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                }
            }
        }
    }
    debug_stack.push({ name:"catch RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: finally
            grammar index: 61
            bodies:
	61:158 finally=>• τfinally block - 
            compile time: 2.303ms*/;
function $finally(l,state){
    debug_stack.push({ name:"finally RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_ac4e40d39583f370(l)/*[finally]*/)){
        /*consume*/
        /*
           61:158 finally=>τfinally • block
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$block(l,state)){
            /*--unique-id--61--DO-NOT-REPLACE*/
            add_reduce(state,2,78);
            debug_stack.push({ name:"finally RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"finally RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: catch_parameter
            grammar index: 62
            bodies:
	62:159 catch_parameter=>• binding_identifier - 
		62:160 catch_parameter=>• binding_pattern - 
            compile time: 3.332ms*/;
function $catch_parameter(l,state){
    debug_stack.push({ name:"catch_parameter RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if((l.utf==123/*[{]*/)||(l.utf==91/*[[]*/)){
        /*peek-production-closure*/
        /*
           62:160 catch_parameter=>• binding_pattern
        */
        if(state=$binding_pattern(l,state)){
            /*--unique-id--62--DO-NOT-REPLACE*/
            debug_stack.push({ name:"catch_parameter RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           62:159 catch_parameter=>• binding_identifier
        */
        if(state=$identifier(l,state)){
            /*--unique-id--62--DO-NOT-REPLACE*/
            add_reduce(state,1,126);
            debug_stack.push({ name:"catch_parameter RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"catch_parameter RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: debugger_statement
            grammar index: 63
            bodies:
	63:161 debugger_statement=>• τdebugger asi - 
            compile time: 4.72ms*/;
function $debugger_statement(l,state){
    debug_stack.push({ name:"debugger_statement RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_bab67a61f0334bce(l)/*[debugger]*/)){
        /*consume*/
        /*
           63:161 debugger_statement=>τdebugger • asi
        */
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(state=$asi_group_017_104(l,state)){
            /*--unique-id--63--DO-NOT-REPLACE*/
            add_reduce(state,2,79);
            debug_stack.push({ name:"debugger_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"debugger_statement RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: variable_statement
            grammar index: 64
            bodies:
	64:162 variable_statement=>• τvar variable_declaration_list asi - 
            compile time: 3.544ms*/;
function $variable_statement(l,state){
    debug_stack.push({ name:"variable_statement RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_f9bb6ce14e19288e(l)/*[var]*/)){
        /*consume*/
        /*
           64:162 variable_statement=>τvar • variable_declaration_list asi
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$variable_declaration_list(l,state)){
            sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
            if(state=$asi_group_017_104(l,state)){
                /*--unique-id--64--DO-NOT-REPLACE*/
                add_reduce(state,3,80);
                debug_stack.push({ name:"variable_statement RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    }
    debug_stack.push({ name:"variable_statement RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: variable_declaration_list
            grammar index: 66
            bodies:
	66:165 variable_declaration_list=>• variable_declaration_list , variable_declaration - 
		66:166 variable_declaration_list=>• variable_declaration - 
            compile time: 14.226ms*/;
function $variable_declaration_list(l,state){
    debug_stack.push({ name:"variable_declaration_list RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$variable_declaration(l,state)){
        /*--unique-id--66--DO-NOT-REPLACE*/
        add_reduce(state,1,4);
        return $variable_declaration_list_goto(l,state,66);
    }
    debug_stack.push({ name:"variable_declaration_list RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $variable_declaration_list_goto(l,state,prod){
    debug_stack.push({ name:"variable_declaration_list GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(non_capture_bde7550a3d6b8d46(l)/*[nl]*/){
            return state;
        }
        if(assert_consume(l,state,l.utf==44/*[,]*/)){
            /*consume*/
            /*
               66:165 variable_declaration_list=>variable_declaration_list , • variable_declaration
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$variable_declaration(l,state)){
                /*--unique-id--66--DO-NOT-REPLACE*/
                add_reduce(state,3,11);
                prod = 66;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"variable_declaration_list GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==66);
}
/*production name: variable_declaration
            grammar index: 67
            bodies:
	67:167 variable_declaration=>• binding_identifier initializer - 
		67:168 variable_declaration=>• binding_identifier - 
		67:169 variable_declaration=>• binding_pattern initializer - 
            compile time: 20.125ms*/;
function $variable_declaration(l,state){
    debug_stack.push({ name:"variable_declaration RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if((l.utf==123/*[{]*/)||(l.utf==91/*[[]*/)){
        /*peek-production-closure*/
        /*
           67:169 variable_declaration=>• binding_pattern initializer
        */
        if(state=$binding_pattern(l,state)){
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$initializer(l,state)){
                /*--unique-id--67--DO-NOT-REPLACE*/
                add_reduce(state,2,81);
                debug_stack.push({ name:"variable_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    } else {
        /*peek-production-closure*/
        /*
           67:167 variable_declaration=>• binding_identifier initializer
           67:168 variable_declaration=>• binding_identifier
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$binding_identifier(l,state)){
            /*assert*/
            /*
               67:167 variable_declaration=>• binding_identifier initializer
               67:168 variable_declaration=>• binding_identifier
            */
            sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
            if(l.utf==61/*[=]*/){
                /*assert-production-closure*/
                /*
                   67:167 variable_declaration=>binding_identifier • initializer
                */
                if(state=$initializer(l,state)){
                    /*--unique-id--67--DO-NOT-REPLACE*/
                    add_reduce(state,2,81);
                    debug_stack.push({ name:"variable_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            } else {
                /*assert-end*/
                /*
                   67:168 variable_declaration=>binding_identifier •
                */
                /*--unique-id--67--DO-NOT-REPLACE*/
                debug_stack.push({ name:"variable_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    }
    debug_stack.push({ name:"variable_declaration RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: lexical_declaration
            grammar index: 68
            bodies:
	68:170 lexical_declaration=>• let_or_const binding_list asi - 
            compile time: 4.289ms*/;
function $lexical_declaration(l,state){
    debug_stack.push({ name:"lexical_declaration RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$let_or_const(l,state)){
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$binding_list(l,state)){
            sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
            if(state=$asi_group_017_104(l,state)){
                /*--unique-id--68--DO-NOT-REPLACE*/
                add_reduce(state,3,82);
                debug_stack.push({ name:"lexical_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    }
    debug_stack.push({ name:"lexical_declaration RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: let_or_const
            grammar index: 69
            bodies:
	69:171 let_or_const=>• τlet - 
		69:172 let_or_const=>• τconst - 
            compile time: 3.586ms*/;
function $let_or_const(l,state){
    debug_stack.push({ name:"let_or_const RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_f188f6806e50797b(l)/*[let]*/)){
        /*consume*/
        /*
           69:171 let_or_const=>τlet •
        */
        /*--unique-id--69--DO-NOT-REPLACE*/
        add_reduce(state,1,83);
        debug_stack.push({ name:"let_or_const RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    } else if(assert_consume(l,state,defined_token_a3300687f6beda2f(l)/*[const]*/)){
        /*consume*/
        /*
           69:172 let_or_const=>τconst •
        */
        /*--unique-id--69--DO-NOT-REPLACE*/
        add_reduce(state,1,84);
        debug_stack.push({ name:"let_or_const RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"let_or_const RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: binding_list
            grammar index: 71
            bodies:
	71:175 binding_list=>• binding_list , lexical_binding - 
		71:176 binding_list=>• lexical_binding - 
            compile time: 11.436ms*/;
function $binding_list(l,state){
    debug_stack.push({ name:"binding_list RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$lexical_binding(l,state)){
        /*--unique-id--71--DO-NOT-REPLACE*/
        add_reduce(state,1,4);
        return $binding_list_goto(l,state,71);
    }
    debug_stack.push({ name:"binding_list RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $binding_list_goto(l,state,prod){
    debug_stack.push({ name:"binding_list GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(non_capture_bde7550a3d6b8d46(l)/*[nl]*/){
            return state;
        }
        if(assert_consume(l,state,l.utf==44/*[,]*/)){
            /*consume*/
            /*
               71:175 binding_list=>binding_list , • lexical_binding
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$lexical_binding(l,state)){
                /*--unique-id--71--DO-NOT-REPLACE*/
                add_reduce(state,3,11);
                prod = 71;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"binding_list GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==71);
}
/*production name: lexical_binding
            grammar index: 72
            bodies:
	72:177 lexical_binding=>• binding_identifier - 
		72:178 lexical_binding=>• binding_identifier initializer - 
		72:179 lexical_binding=>• binding_pattern initializer - 
            compile time: 13.911ms*/;
function $lexical_binding(l,state){
    debug_stack.push({ name:"lexical_binding RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if((l.utf==123/*[{]*/)||(l.utf==91/*[[]*/)){
        /*peek-production-closure*/
        /*
           72:179 lexical_binding=>• binding_pattern initializer
        */
        if(state=$binding_pattern(l,state)){
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$initializer(l,state)){
                /*--unique-id--72--DO-NOT-REPLACE*/
                add_reduce(state,2,81);
                debug_stack.push({ name:"lexical_binding RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    } else {
        /*peek-production-closure*/
        /*
           72:177 lexical_binding=>• binding_identifier
           72:178 lexical_binding=>• binding_identifier initializer
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$binding_identifier(l,state)){
            /*assert*/
            /*
               72:177 lexical_binding=>• binding_identifier
               72:178 lexical_binding=>• binding_identifier initializer
            */
            sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
            if(l.utf==61/*[=]*/){
                /*assert-production-closure*/
                /*
                   72:178 lexical_binding=>binding_identifier • initializer
                */
                if(state=$initializer(l,state)){
                    /*--unique-id--72--DO-NOT-REPLACE*/
                    add_reduce(state,2,81);
                    debug_stack.push({ name:"lexical_binding RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            } else {
                /*assert-end*/
                /*
                   72:177 lexical_binding=>binding_identifier •
                */
                /*--unique-id--72--DO-NOT-REPLACE*/
                debug_stack.push({ name:"lexical_binding RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    }
    debug_stack.push({ name:"lexical_binding RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: function_declaration
            grammar index: 73
            bodies:
	73:180 function_declaration=>• τasync τfunction * binding_identifier ( formal_parameters ) { function_body } - 
		73:181 function_declaration=>• τfunction * binding_identifier ( formal_parameters ) { function_body } - 
		73:182 function_declaration=>• τasync τfunction binding_identifier ( formal_parameters ) { function_body } - 
		73:183 function_declaration=>• τasync τfunction * ( formal_parameters ) { function_body } - 
		73:184 function_declaration=>• τasync τfunction * binding_identifier ( ) { function_body } - 
		73:185 function_declaration=>• τfunction binding_identifier ( formal_parameters ) { function_body } - 
		73:186 function_declaration=>• τfunction * ( formal_parameters ) { function_body } - 
		73:187 function_declaration=>• τfunction * binding_identifier ( ) { function_body } - 
		73:188 function_declaration=>• τasync τfunction ( formal_parameters ) { function_body } - 
		73:189 function_declaration=>• τasync τfunction binding_identifier ( ) { function_body } - 
		73:190 function_declaration=>• τasync τfunction * ( ) { function_body } - 
		73:191 function_declaration=>• τfunction ( formal_parameters ) { function_body } - 
		73:192 function_declaration=>• τfunction binding_identifier ( ) { function_body } - 
		73:193 function_declaration=>• τfunction * ( ) { function_body } - 
		73:194 function_declaration=>• τasync τfunction ( ) { function_body } - 
		73:195 function_declaration=>• τfunction ( ) { function_body } - 
            compile time: 107.974ms*/;
function $function_declaration(l,state){
    debug_stack.push({ name:"function_declaration RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(defined_token_d4a7e22f69f4ee35(l)/*[async]*/){
        /*peek*/
        /*
           73:180 function_declaration=>• τasync τfunction * binding_identifier ( formal_parameters ) { function_body }
           73:182 function_declaration=>• τasync τfunction binding_identifier ( formal_parameters ) { function_body }
           73:183 function_declaration=>• τasync τfunction * ( formal_parameters ) { function_body }
           73:184 function_declaration=>• τasync τfunction * binding_identifier ( ) { function_body }
           73:188 function_declaration=>• τasync τfunction ( formal_parameters ) { function_body }
           73:189 function_declaration=>• τasync τfunction binding_identifier ( ) { function_body }
           73:190 function_declaration=>• τasync τfunction * ( ) { function_body }
           73:194 function_declaration=>• τasync τfunction ( ) { function_body }
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,defined_token_d4a7e22f69f4ee35(l)/*[async]*/)){
            /*consume*/
            /*
               73:180 function_declaration=>τasync • τfunction * binding_identifier ( formal_parameters ) { function_body }
               73:182 function_declaration=>τasync • τfunction binding_identifier ( formal_parameters ) { function_body }
               73:183 function_declaration=>τasync • τfunction * ( formal_parameters ) { function_body }
               73:184 function_declaration=>τasync • τfunction * binding_identifier ( ) { function_body }
               73:188 function_declaration=>τasync • τfunction ( formal_parameters ) { function_body }
               73:189 function_declaration=>τasync • τfunction binding_identifier ( ) { function_body }
               73:190 function_declaration=>τasync • τfunction * ( ) { function_body }
               73:194 function_declaration=>τasync • τfunction ( ) { function_body }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,defined_token_e043e2118bdadad0(l)/*[function]*/)){
                /*consume*/
                /*
                   73:180 function_declaration=>τasync τfunction • * binding_identifier ( formal_parameters ) { function_body }
                   73:182 function_declaration=>τasync τfunction • binding_identifier ( formal_parameters ) { function_body }
                   73:183 function_declaration=>τasync τfunction • * ( formal_parameters ) { function_body }
                   73:184 function_declaration=>τasync τfunction • * binding_identifier ( ) { function_body }
                   73:188 function_declaration=>τasync τfunction • ( formal_parameters ) { function_body }
                   73:189 function_declaration=>τasync τfunction • binding_identifier ( ) { function_body }
                   73:190 function_declaration=>τasync τfunction • * ( ) { function_body }
                   73:194 function_declaration=>τasync τfunction • ( ) { function_body }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(l.utf==42/*[*]*/){
                    /*peek*/
                    /*
                       73:180 function_declaration=>τasync τfunction • * binding_identifier ( formal_parameters ) { function_body }
                       73:183 function_declaration=>τasync τfunction • * ( formal_parameters ) { function_body }
                       73:184 function_declaration=>τasync τfunction • * binding_identifier ( ) { function_body }
                       73:190 function_declaration=>τasync τfunction • * ( ) { function_body }
                    */
                    let pk = l.copy();
                    sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                    if(pk.utf==40/*[(]*/){
                        /*peek*/
                        /*
                           73:183 function_declaration=>τasync τfunction • * ( formal_parameters ) { function_body }
                           73:190 function_declaration=>τasync τfunction • * ( ) { function_body }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==42/*[*]*/)){
                            /*consume*/
                            /*
                               73:183 function_declaration=>τasync τfunction * • ( formal_parameters ) { function_body }
                               73:190 function_declaration=>τasync τfunction * • ( ) { function_body }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==40/*[(]*/)){
                                /*consume*/
                                /*
                                   73:183 function_declaration=>τasync τfunction * ( • formal_parameters ) { function_body }
                                   73:190 function_declaration=>τasync τfunction * ( • ) { function_body }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                    /*consume*/
                                    /*
                                       73:190 function_declaration=>τasync τfunction * ( ) • { function_body }
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(state=$function_statement_list(l,state)){
                                            add_reduce(state,1,120);
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--73--DO-NOT-REPLACE*/
                                                add_reduce(state,8,95);
                                                debug_stack.push({ name:"function_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    }
                                } else {
                                    /*peek-production-closure*/
                                    /*
                                       73:183 function_declaration=>τasync τfunction * ( • formal_parameters ) { function_body }
                                    */
                                    if(state=$formal_parameters(l,state)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(state=$function_statement_list(l,state)){
                                                    add_reduce(state,1,120);
                                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                    if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                        /*--unique-id--73--DO-NOT-REPLACE*/
                                                        add_reduce(state,9,88);
                                                        debug_stack.push({ name:"function_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                        return state;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } else if(((pk.utf==95/*[_]*/)||(pk.utf==36/*[$]*/))||pk.isID()/*[id]*/){
                        /*peek*/
                        /*
                           73:180 function_declaration=>τasync τfunction • * binding_identifier ( formal_parameters ) { function_body }
                           73:184 function_declaration=>τasync τfunction • * binding_identifier ( ) { function_body }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==42/*[*]*/)){
                            /*consume*/
                            /*
                               73:180 function_declaration=>τasync τfunction * • binding_identifier ( formal_parameters ) { function_body }
                               73:184 function_declaration=>τasync τfunction * • binding_identifier ( ) { function_body }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$binding_identifier(l,state)){
                                /*assert*/
                                /*
                                   73:180 function_declaration=>τasync τfunction * • binding_identifier ( formal_parameters ) { function_body }
                                   73:184 function_declaration=>τasync τfunction * • binding_identifier ( ) { function_body }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==40/*[(]*/)){
                                    /*consume*/
                                    /*
                                       73:180 function_declaration=>τasync τfunction * binding_identifier ( • formal_parameters ) { function_body }
                                       73:184 function_declaration=>τasync τfunction * binding_identifier ( • ) { function_body }
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                        /*consume*/
                                        /*
                                           73:184 function_declaration=>τasync τfunction * binding_identifier ( ) • { function_body }
                                        */
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(state=$function_statement_list(l,state)){
                                                add_reduce(state,1,120);
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                    /*--unique-id--73--DO-NOT-REPLACE*/
                                                    add_reduce(state,9,89);
                                                    debug_stack.push({ name:"function_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                    return state;
                                                }
                                            }
                                        }
                                    } else {
                                        /*peek-production-closure*/
                                        /*
                                           73:180 function_declaration=>τasync τfunction * binding_identifier ( • formal_parameters ) { function_body }
                                        */
                                        if(state=$formal_parameters(l,state)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                    if(state=$function_statement_list(l,state)){
                                                        add_reduce(state,1,120);
                                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                            /*--unique-id--73--DO-NOT-REPLACE*/
                                                            add_reduce(state,10,85);
                                                            debug_stack.push({ name:"function_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                            return state;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                } else if(l.utf==40/*[(]*/){
                    /*peek*/
                    /*
                       73:188 function_declaration=>τasync τfunction • ( formal_parameters ) { function_body }
                       73:194 function_declaration=>τasync τfunction • ( ) { function_body }
                    */
                    let pk = l.copy();
                    sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                    if(pk.utf==41/*[)]*/){
                        /*peek*/
                        /*
                           73:194 function_declaration=>τasync τfunction • ( ) { function_body }
                        */
                        if(assert_consume(l,state,l.utf==40/*[(]*/)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(state=$function_statement_list(l,state)){
                                        add_reduce(state,1,120);
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                            /*--unique-id--73--DO-NOT-REPLACE*/
                                            add_reduce(state,7,99);
                                            debug_stack.push({ name:"function_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                }
                            }
                        }
                    } else if((defined_token_f47f6de2d28c24e5(pk)/*[...]*/||assert_table(pk,0x0,0x10,0x88000000,0x8000000)/*tbl:[ { ] [ [ ] [ _ ] [ $ ]*/)||pk.isID()/*[id]*/){
                        /*peek*/
                        /*
                           73:188 function_declaration=>τasync τfunction • ( formal_parameters ) { function_body }
                        */
                        if(assert_consume(l,state,l.utf==40/*[(]*/)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$formal_parameters(l,state)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(state=$function_statement_list(l,state)){
                                            add_reduce(state,1,120);
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--73--DO-NOT-REPLACE*/
                                                add_reduce(state,8,93);
                                                debug_stack.push({ name:"function_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                } else {
                    /*peek-production-closure*/
                    /*
                       73:182 function_declaration=>τasync τfunction • binding_identifier ( formal_parameters ) { function_body }
                       73:189 function_declaration=>τasync τfunction • binding_identifier ( ) { function_body }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$binding_identifier(l,state)){
                        /*assert*/
                        /*
                           73:182 function_declaration=>τasync τfunction • binding_identifier ( formal_parameters ) { function_body }
                           73:189 function_declaration=>τasync τfunction • binding_identifier ( ) { function_body }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==40/*[(]*/)){
                            /*consume*/
                            /*
                               73:182 function_declaration=>τasync τfunction binding_identifier ( • formal_parameters ) { function_body }
                               73:189 function_declaration=>τasync τfunction binding_identifier ( • ) { function_body }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                /*consume*/
                                /*
                                   73:189 function_declaration=>τasync τfunction binding_identifier ( ) • { function_body }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(state=$function_statement_list(l,state)){
                                        add_reduce(state,1,120);
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                            /*--unique-id--73--DO-NOT-REPLACE*/
                                            add_reduce(state,8,94);
                                            debug_stack.push({ name:"function_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                }
                            } else {
                                /*peek-production-closure*/
                                /*
                                   73:182 function_declaration=>τasync τfunction binding_identifier ( • formal_parameters ) { function_body }
                                */
                                if(state=$formal_parameters(l,state)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(state=$function_statement_list(l,state)){
                                                add_reduce(state,1,120);
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                    /*--unique-id--73--DO-NOT-REPLACE*/
                                                    add_reduce(state,9,87);
                                                    debug_stack.push({ name:"function_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                    return state;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    } else if(defined_token_e043e2118bdadad0(l)/*[function]*/){
        /*peek*/
        /*
           73:181 function_declaration=>• τfunction * binding_identifier ( formal_parameters ) { function_body }
           73:185 function_declaration=>• τfunction binding_identifier ( formal_parameters ) { function_body }
           73:186 function_declaration=>• τfunction * ( formal_parameters ) { function_body }
           73:187 function_declaration=>• τfunction * binding_identifier ( ) { function_body }
           73:191 function_declaration=>• τfunction ( formal_parameters ) { function_body }
           73:192 function_declaration=>• τfunction binding_identifier ( ) { function_body }
           73:193 function_declaration=>• τfunction * ( ) { function_body }
           73:195 function_declaration=>• τfunction ( ) { function_body }
        */
        let pk = l.copy();
        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
        if(pk.utf==42/*[*]*/){
            /*peek*/
            /*
               73:181 function_declaration=>• τfunction * binding_identifier ( formal_parameters ) { function_body }
               73:186 function_declaration=>• τfunction * ( formal_parameters ) { function_body }
               73:187 function_declaration=>• τfunction * binding_identifier ( ) { function_body }
               73:193 function_declaration=>• τfunction * ( ) { function_body }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,defined_token_e043e2118bdadad0(l)/*[function]*/)){
                /*consume*/
                /*
                   73:181 function_declaration=>τfunction • * binding_identifier ( formal_parameters ) { function_body }
                   73:186 function_declaration=>τfunction • * ( formal_parameters ) { function_body }
                   73:187 function_declaration=>τfunction • * binding_identifier ( ) { function_body }
                   73:193 function_declaration=>τfunction • * ( ) { function_body }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==42/*[*]*/)){
                    /*consume*/
                    /*
                       73:181 function_declaration=>τfunction * • binding_identifier ( formal_parameters ) { function_body }
                       73:186 function_declaration=>τfunction * • ( formal_parameters ) { function_body }
                       73:187 function_declaration=>τfunction * • binding_identifier ( ) { function_body }
                       73:193 function_declaration=>τfunction * • ( ) { function_body }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(l.utf==40/*[(]*/){
                        /*peek*/
                        /*
                           73:186 function_declaration=>τfunction * • ( formal_parameters ) { function_body }
                           73:193 function_declaration=>τfunction * • ( ) { function_body }
                        */
                        let pk = l.copy();
                        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                        if(pk.utf==41/*[)]*/){
                            /*peek*/
                            /*
                               73:193 function_declaration=>τfunction * • ( ) { function_body }
                            */
                            if(assert_consume(l,state,l.utf==40/*[(]*/)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(state=$function_statement_list(l,state)){
                                            add_reduce(state,1,120);
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--73--DO-NOT-REPLACE*/
                                                add_reduce(state,7,98);
                                                debug_stack.push({ name:"function_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    }
                                }
                            }
                        } else if((defined_token_f47f6de2d28c24e5(pk)/*[...]*/||assert_table(pk,0x0,0x10,0x88000000,0x8000000)/*tbl:[ { ] [ [ ] [ _ ] [ $ ]*/)||pk.isID()/*[id]*/){
                            /*peek*/
                            /*
                               73:186 function_declaration=>τfunction * • ( formal_parameters ) { function_body }
                            */
                            if(assert_consume(l,state,l.utf==40/*[(]*/)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(state=$formal_parameters(l,state)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(state=$function_statement_list(l,state)){
                                                add_reduce(state,1,120);
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                    /*--unique-id--73--DO-NOT-REPLACE*/
                                                    add_reduce(state,8,91);
                                                    debug_stack.push({ name:"function_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                    return state;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } else {
                        /*peek-production-closure*/
                        /*
                           73:181 function_declaration=>τfunction * • binding_identifier ( formal_parameters ) { function_body }
                           73:187 function_declaration=>τfunction * • binding_identifier ( ) { function_body }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$binding_identifier(l,state)){
                            /*assert*/
                            /*
                               73:181 function_declaration=>τfunction * • binding_identifier ( formal_parameters ) { function_body }
                               73:187 function_declaration=>τfunction * • binding_identifier ( ) { function_body }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==40/*[(]*/)){
                                /*consume*/
                                /*
                                   73:181 function_declaration=>τfunction * binding_identifier ( • formal_parameters ) { function_body }
                                   73:187 function_declaration=>τfunction * binding_identifier ( • ) { function_body }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                    /*consume*/
                                    /*
                                       73:187 function_declaration=>τfunction * binding_identifier ( ) • { function_body }
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(state=$function_statement_list(l,state)){
                                            add_reduce(state,1,120);
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--73--DO-NOT-REPLACE*/
                                                add_reduce(state,8,92);
                                                debug_stack.push({ name:"function_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    }
                                } else {
                                    /*peek-production-closure*/
                                    /*
                                       73:181 function_declaration=>τfunction * binding_identifier ( • formal_parameters ) { function_body }
                                    */
                                    if(state=$formal_parameters(l,state)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(state=$function_statement_list(l,state)){
                                                    add_reduce(state,1,120);
                                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                    if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                        /*--unique-id--73--DO-NOT-REPLACE*/
                                                        add_reduce(state,9,86);
                                                        debug_stack.push({ name:"function_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                        return state;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } else if(pk.utf==40/*[(]*/){
            /*peek*/
            /*
               73:191 function_declaration=>• τfunction ( formal_parameters ) { function_body }
               73:195 function_declaration=>• τfunction ( ) { function_body }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,defined_token_e043e2118bdadad0(l)/*[function]*/)){
                /*consume*/
                /*
                   73:191 function_declaration=>τfunction • ( formal_parameters ) { function_body }
                   73:195 function_declaration=>τfunction • ( ) { function_body }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==40/*[(]*/)){
                    /*consume*/
                    /*
                       73:191 function_declaration=>τfunction ( • formal_parameters ) { function_body }
                       73:195 function_declaration=>τfunction ( • ) { function_body }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==41/*[)]*/)){
                        /*consume*/
                        /*
                           73:195 function_declaration=>τfunction ( ) • { function_body }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==123/*[{]*/)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$function_statement_list(l,state)){
                                add_reduce(state,1,120);
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                    /*--unique-id--73--DO-NOT-REPLACE*/
                                    add_reduce(state,6,100);
                                    debug_stack.push({ name:"function_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                    return state;
                                }
                            }
                        }
                    } else {
                        /*peek-production-closure*/
                        /*
                           73:191 function_declaration=>τfunction ( • formal_parameters ) { function_body }
                        */
                        if(state=$formal_parameters(l,state)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(state=$function_statement_list(l,state)){
                                        add_reduce(state,1,120);
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                            /*--unique-id--73--DO-NOT-REPLACE*/
                                            add_reduce(state,7,96);
                                            debug_stack.push({ name:"function_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } else if(((pk.utf==95/*[_]*/)||(pk.utf==36/*[$]*/))||pk.isID()/*[id]*/){
            /*peek*/
            /*
               73:185 function_declaration=>• τfunction binding_identifier ( formal_parameters ) { function_body }
               73:192 function_declaration=>• τfunction binding_identifier ( ) { function_body }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,defined_token_e043e2118bdadad0(l)/*[function]*/)){
                /*consume*/
                /*
                   73:185 function_declaration=>τfunction • binding_identifier ( formal_parameters ) { function_body }
                   73:192 function_declaration=>τfunction • binding_identifier ( ) { function_body }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(state=$binding_identifier(l,state)){
                    /*assert*/
                    /*
                       73:185 function_declaration=>τfunction • binding_identifier ( formal_parameters ) { function_body }
                       73:192 function_declaration=>τfunction • binding_identifier ( ) { function_body }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==40/*[(]*/)){
                        /*consume*/
                        /*
                           73:185 function_declaration=>τfunction binding_identifier ( • formal_parameters ) { function_body }
                           73:192 function_declaration=>τfunction binding_identifier ( • ) { function_body }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                            /*consume*/
                            /*
                               73:192 function_declaration=>τfunction binding_identifier ( ) • { function_body }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(state=$function_statement_list(l,state)){
                                    add_reduce(state,1,120);
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                        /*--unique-id--73--DO-NOT-REPLACE*/
                                        add_reduce(state,7,97);
                                        debug_stack.push({ name:"function_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                        return state;
                                    }
                                }
                            }
                        } else {
                            /*peek-production-closure*/
                            /*
                               73:185 function_declaration=>τfunction binding_identifier ( • formal_parameters ) { function_body }
                            */
                            if(state=$formal_parameters(l,state)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(state=$function_statement_list(l,state)){
                                            add_reduce(state,1,120);
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--73--DO-NOT-REPLACE*/
                                                add_reduce(state,8,90);
                                                debug_stack.push({ name:"function_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    debug_stack.push({ name:"function_declaration RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: function_expression
            grammar index: 74
            bodies:
	74:196 function_expression=>• τasync τfunction * binding_identifier ( formal_parameters ) { function_body } - 
		74:197 function_expression=>• τfunction * binding_identifier ( formal_parameters ) { function_body } - 
		74:198 function_expression=>• τasync τfunction binding_identifier ( formal_parameters ) { function_body } - 
		74:199 function_expression=>• τasync τfunction * ( formal_parameters ) { function_body } - 
		74:200 function_expression=>• τasync τfunction * binding_identifier ( ) { function_body } - 
		74:201 function_expression=>• τfunction binding_identifier ( formal_parameters ) { function_body } - 
		74:202 function_expression=>• τfunction * ( formal_parameters ) { function_body } - 
		74:203 function_expression=>• τfunction * binding_identifier ( ) { function_body } - 
		74:204 function_expression=>• τasync τfunction ( formal_parameters ) { function_body } - 
		74:205 function_expression=>• τasync τfunction binding_identifier ( ) { function_body } - 
		74:206 function_expression=>• τasync τfunction * ( ) { function_body } - 
		74:207 function_expression=>• τfunction ( formal_parameters ) { function_body } - 
		74:208 function_expression=>• τfunction binding_identifier ( ) { function_body } - 
		74:209 function_expression=>• τfunction * ( ) { function_body } - 
		74:210 function_expression=>• τasync τfunction ( ) { function_body } - 
		74:211 function_expression=>• τfunction ( ) { function_body } - 
            compile time: 133.671ms*/;
function $function_expression(l,state){
    debug_stack.push({ name:"function_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(defined_token_d4a7e22f69f4ee35(l)/*[async]*/){
        /*peek*/
        /*
           74:196 function_expression=>• τasync τfunction * binding_identifier ( formal_parameters ) { function_body }
           74:198 function_expression=>• τasync τfunction binding_identifier ( formal_parameters ) { function_body }
           74:199 function_expression=>• τasync τfunction * ( formal_parameters ) { function_body }
           74:200 function_expression=>• τasync τfunction * binding_identifier ( ) { function_body }
           74:204 function_expression=>• τasync τfunction ( formal_parameters ) { function_body }
           74:205 function_expression=>• τasync τfunction binding_identifier ( ) { function_body }
           74:206 function_expression=>• τasync τfunction * ( ) { function_body }
           74:210 function_expression=>• τasync τfunction ( ) { function_body }
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,defined_token_d4a7e22f69f4ee35(l)/*[async]*/)){
            /*consume*/
            /*
               74:196 function_expression=>τasync • τfunction * binding_identifier ( formal_parameters ) { function_body }
               74:198 function_expression=>τasync • τfunction binding_identifier ( formal_parameters ) { function_body }
               74:199 function_expression=>τasync • τfunction * ( formal_parameters ) { function_body }
               74:200 function_expression=>τasync • τfunction * binding_identifier ( ) { function_body }
               74:204 function_expression=>τasync • τfunction ( formal_parameters ) { function_body }
               74:205 function_expression=>τasync • τfunction binding_identifier ( ) { function_body }
               74:206 function_expression=>τasync • τfunction * ( ) { function_body }
               74:210 function_expression=>τasync • τfunction ( ) { function_body }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,defined_token_e043e2118bdadad0(l)/*[function]*/)){
                /*consume*/
                /*
                   74:196 function_expression=>τasync τfunction • * binding_identifier ( formal_parameters ) { function_body }
                   74:198 function_expression=>τasync τfunction • binding_identifier ( formal_parameters ) { function_body }
                   74:199 function_expression=>τasync τfunction • * ( formal_parameters ) { function_body }
                   74:200 function_expression=>τasync τfunction • * binding_identifier ( ) { function_body }
                   74:204 function_expression=>τasync τfunction • ( formal_parameters ) { function_body }
                   74:205 function_expression=>τasync τfunction • binding_identifier ( ) { function_body }
                   74:206 function_expression=>τasync τfunction • * ( ) { function_body }
                   74:210 function_expression=>τasync τfunction • ( ) { function_body }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(l.utf==42/*[*]*/){
                    /*peek*/
                    /*
                       74:196 function_expression=>τasync τfunction • * binding_identifier ( formal_parameters ) { function_body }
                       74:199 function_expression=>τasync τfunction • * ( formal_parameters ) { function_body }
                       74:200 function_expression=>τasync τfunction • * binding_identifier ( ) { function_body }
                       74:206 function_expression=>τasync τfunction • * ( ) { function_body }
                    */
                    let pk = l.copy();
                    sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                    if(pk.utf==40/*[(]*/){
                        /*peek*/
                        /*
                           74:199 function_expression=>τasync τfunction • * ( formal_parameters ) { function_body }
                           74:206 function_expression=>τasync τfunction • * ( ) { function_body }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==42/*[*]*/)){
                            /*consume*/
                            /*
                               74:199 function_expression=>τasync τfunction * • ( formal_parameters ) { function_body }
                               74:206 function_expression=>τasync τfunction * • ( ) { function_body }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==40/*[(]*/)){
                                /*consume*/
                                /*
                                   74:199 function_expression=>τasync τfunction * ( • formal_parameters ) { function_body }
                                   74:206 function_expression=>τasync τfunction * ( • ) { function_body }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                    /*consume*/
                                    /*
                                       74:206 function_expression=>τasync τfunction * ( ) • { function_body }
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(state=$function_statement_list(l,state)){
                                            add_reduce(state,1,120);
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--74--DO-NOT-REPLACE*/
                                                add_reduce(state,8,111);
                                                debug_stack.push({ name:"function_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    }
                                } else {
                                    /*peek-production-closure*/
                                    /*
                                       74:199 function_expression=>τasync τfunction * ( • formal_parameters ) { function_body }
                                    */
                                    if(state=$formal_parameters(l,state)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(state=$function_statement_list(l,state)){
                                                    add_reduce(state,1,120);
                                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                    if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                        /*--unique-id--74--DO-NOT-REPLACE*/
                                                        add_reduce(state,9,104);
                                                        debug_stack.push({ name:"function_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                        return state;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } else if(((pk.utf==95/*[_]*/)||(pk.utf==36/*[$]*/))||pk.isID()/*[id]*/){
                        /*peek*/
                        /*
                           74:196 function_expression=>τasync τfunction • * binding_identifier ( formal_parameters ) { function_body }
                           74:200 function_expression=>τasync τfunction • * binding_identifier ( ) { function_body }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==42/*[*]*/)){
                            /*consume*/
                            /*
                               74:196 function_expression=>τasync τfunction * • binding_identifier ( formal_parameters ) { function_body }
                               74:200 function_expression=>τasync τfunction * • binding_identifier ( ) { function_body }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$binding_identifier(l,state)){
                                /*assert*/
                                /*
                                   74:196 function_expression=>τasync τfunction * • binding_identifier ( formal_parameters ) { function_body }
                                   74:200 function_expression=>τasync τfunction * • binding_identifier ( ) { function_body }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==40/*[(]*/)){
                                    /*consume*/
                                    /*
                                       74:196 function_expression=>τasync τfunction * binding_identifier ( • formal_parameters ) { function_body }
                                       74:200 function_expression=>τasync τfunction * binding_identifier ( • ) { function_body }
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                        /*consume*/
                                        /*
                                           74:200 function_expression=>τasync τfunction * binding_identifier ( ) • { function_body }
                                        */
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(state=$function_statement_list(l,state)){
                                                add_reduce(state,1,120);
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                    /*--unique-id--74--DO-NOT-REPLACE*/
                                                    add_reduce(state,9,105);
                                                    debug_stack.push({ name:"function_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                    return state;
                                                }
                                            }
                                        }
                                    } else {
                                        /*peek-production-closure*/
                                        /*
                                           74:196 function_expression=>τasync τfunction * binding_identifier ( • formal_parameters ) { function_body }
                                        */
                                        if(state=$formal_parameters(l,state)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                    if(state=$function_statement_list(l,state)){
                                                        add_reduce(state,1,120);
                                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                            /*--unique-id--74--DO-NOT-REPLACE*/
                                                            add_reduce(state,10,101);
                                                            debug_stack.push({ name:"function_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                            return state;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                } else if(l.utf==40/*[(]*/){
                    /*peek*/
                    /*
                       74:204 function_expression=>τasync τfunction • ( formal_parameters ) { function_body }
                       74:210 function_expression=>τasync τfunction • ( ) { function_body }
                    */
                    let pk = l.copy();
                    sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                    if(pk.utf==41/*[)]*/){
                        /*peek*/
                        /*
                           74:210 function_expression=>τasync τfunction • ( ) { function_body }
                        */
                        if(assert_consume(l,state,l.utf==40/*[(]*/)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(state=$function_statement_list(l,state)){
                                        add_reduce(state,1,120);
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                            /*--unique-id--74--DO-NOT-REPLACE*/
                                            add_reduce(state,7,115);
                                            debug_stack.push({ name:"function_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                }
                            }
                        }
                    } else if((defined_token_f47f6de2d28c24e5(pk)/*[...]*/||assert_table(pk,0x0,0x10,0x88000000,0x8000000)/*tbl:[ { ] [ [ ] [ _ ] [ $ ]*/)||pk.isID()/*[id]*/){
                        /*peek*/
                        /*
                           74:204 function_expression=>τasync τfunction • ( formal_parameters ) { function_body }
                        */
                        if(assert_consume(l,state,l.utf==40/*[(]*/)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$formal_parameters(l,state)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(state=$function_statement_list(l,state)){
                                            add_reduce(state,1,120);
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--74--DO-NOT-REPLACE*/
                                                add_reduce(state,8,109);
                                                debug_stack.push({ name:"function_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                } else {
                    /*peek-production-closure*/
                    /*
                       74:198 function_expression=>τasync τfunction • binding_identifier ( formal_parameters ) { function_body }
                       74:205 function_expression=>τasync τfunction • binding_identifier ( ) { function_body }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$binding_identifier(l,state)){
                        /*assert*/
                        /*
                           74:198 function_expression=>τasync τfunction • binding_identifier ( formal_parameters ) { function_body }
                           74:205 function_expression=>τasync τfunction • binding_identifier ( ) { function_body }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==40/*[(]*/)){
                            /*consume*/
                            /*
                               74:198 function_expression=>τasync τfunction binding_identifier ( • formal_parameters ) { function_body }
                               74:205 function_expression=>τasync τfunction binding_identifier ( • ) { function_body }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                /*consume*/
                                /*
                                   74:205 function_expression=>τasync τfunction binding_identifier ( ) • { function_body }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(state=$function_statement_list(l,state)){
                                        add_reduce(state,1,120);
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                            /*--unique-id--74--DO-NOT-REPLACE*/
                                            add_reduce(state,8,110);
                                            debug_stack.push({ name:"function_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                }
                            } else {
                                /*peek-production-closure*/
                                /*
                                   74:198 function_expression=>τasync τfunction binding_identifier ( • formal_parameters ) { function_body }
                                */
                                if(state=$formal_parameters(l,state)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(state=$function_statement_list(l,state)){
                                                add_reduce(state,1,120);
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                    /*--unique-id--74--DO-NOT-REPLACE*/
                                                    add_reduce(state,9,103);
                                                    debug_stack.push({ name:"function_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                    return state;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    } else if(defined_token_e043e2118bdadad0(l)/*[function]*/){
        /*peek*/
        /*
           74:197 function_expression=>• τfunction * binding_identifier ( formal_parameters ) { function_body }
           74:201 function_expression=>• τfunction binding_identifier ( formal_parameters ) { function_body }
           74:202 function_expression=>• τfunction * ( formal_parameters ) { function_body }
           74:203 function_expression=>• τfunction * binding_identifier ( ) { function_body }
           74:207 function_expression=>• τfunction ( formal_parameters ) { function_body }
           74:208 function_expression=>• τfunction binding_identifier ( ) { function_body }
           74:209 function_expression=>• τfunction * ( ) { function_body }
           74:211 function_expression=>• τfunction ( ) { function_body }
        */
        let pk = l.copy();
        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
        if(pk.utf==42/*[*]*/){
            /*peek*/
            /*
               74:197 function_expression=>• τfunction * binding_identifier ( formal_parameters ) { function_body }
               74:202 function_expression=>• τfunction * ( formal_parameters ) { function_body }
               74:203 function_expression=>• τfunction * binding_identifier ( ) { function_body }
               74:209 function_expression=>• τfunction * ( ) { function_body }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,defined_token_e043e2118bdadad0(l)/*[function]*/)){
                /*consume*/
                /*
                   74:197 function_expression=>τfunction • * binding_identifier ( formal_parameters ) { function_body }
                   74:202 function_expression=>τfunction • * ( formal_parameters ) { function_body }
                   74:203 function_expression=>τfunction • * binding_identifier ( ) { function_body }
                   74:209 function_expression=>τfunction • * ( ) { function_body }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==42/*[*]*/)){
                    /*consume*/
                    /*
                       74:197 function_expression=>τfunction * • binding_identifier ( formal_parameters ) { function_body }
                       74:202 function_expression=>τfunction * • ( formal_parameters ) { function_body }
                       74:203 function_expression=>τfunction * • binding_identifier ( ) { function_body }
                       74:209 function_expression=>τfunction * • ( ) { function_body }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(l.utf==40/*[(]*/){
                        /*peek*/
                        /*
                           74:202 function_expression=>τfunction * • ( formal_parameters ) { function_body }
                           74:209 function_expression=>τfunction * • ( ) { function_body }
                        */
                        let pk = l.copy();
                        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                        if(pk.utf==41/*[)]*/){
                            /*peek*/
                            /*
                               74:209 function_expression=>τfunction * • ( ) { function_body }
                            */
                            if(assert_consume(l,state,l.utf==40/*[(]*/)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(state=$function_statement_list(l,state)){
                                            add_reduce(state,1,120);
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--74--DO-NOT-REPLACE*/
                                                add_reduce(state,7,114);
                                                debug_stack.push({ name:"function_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    }
                                }
                            }
                        } else if((defined_token_f47f6de2d28c24e5(pk)/*[...]*/||assert_table(pk,0x0,0x10,0x88000000,0x8000000)/*tbl:[ { ] [ [ ] [ _ ] [ $ ]*/)||pk.isID()/*[id]*/){
                            /*peek*/
                            /*
                               74:202 function_expression=>τfunction * • ( formal_parameters ) { function_body }
                            */
                            if(assert_consume(l,state,l.utf==40/*[(]*/)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(state=$formal_parameters(l,state)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(state=$function_statement_list(l,state)){
                                                add_reduce(state,1,120);
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                    /*--unique-id--74--DO-NOT-REPLACE*/
                                                    add_reduce(state,8,107);
                                                    debug_stack.push({ name:"function_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                    return state;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } else {
                        /*peek-production-closure*/
                        /*
                           74:197 function_expression=>τfunction * • binding_identifier ( formal_parameters ) { function_body }
                           74:203 function_expression=>τfunction * • binding_identifier ( ) { function_body }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$binding_identifier(l,state)){
                            /*assert*/
                            /*
                               74:197 function_expression=>τfunction * • binding_identifier ( formal_parameters ) { function_body }
                               74:203 function_expression=>τfunction * • binding_identifier ( ) { function_body }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==40/*[(]*/)){
                                /*consume*/
                                /*
                                   74:197 function_expression=>τfunction * binding_identifier ( • formal_parameters ) { function_body }
                                   74:203 function_expression=>τfunction * binding_identifier ( • ) { function_body }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                    /*consume*/
                                    /*
                                       74:203 function_expression=>τfunction * binding_identifier ( ) • { function_body }
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(state=$function_statement_list(l,state)){
                                            add_reduce(state,1,120);
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--74--DO-NOT-REPLACE*/
                                                add_reduce(state,8,108);
                                                debug_stack.push({ name:"function_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    }
                                } else {
                                    /*peek-production-closure*/
                                    /*
                                       74:197 function_expression=>τfunction * binding_identifier ( • formal_parameters ) { function_body }
                                    */
                                    if(state=$formal_parameters(l,state)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(state=$function_statement_list(l,state)){
                                                    add_reduce(state,1,120);
                                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                    if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                        /*--unique-id--74--DO-NOT-REPLACE*/
                                                        add_reduce(state,9,102);
                                                        debug_stack.push({ name:"function_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                        return state;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } else if(pk.utf==40/*[(]*/){
            /*peek*/
            /*
               74:207 function_expression=>• τfunction ( formal_parameters ) { function_body }
               74:211 function_expression=>• τfunction ( ) { function_body }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,defined_token_e043e2118bdadad0(l)/*[function]*/)){
                /*consume*/
                /*
                   74:207 function_expression=>τfunction • ( formal_parameters ) { function_body }
                   74:211 function_expression=>τfunction • ( ) { function_body }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==40/*[(]*/)){
                    /*consume*/
                    /*
                       74:207 function_expression=>τfunction ( • formal_parameters ) { function_body }
                       74:211 function_expression=>τfunction ( • ) { function_body }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==41/*[)]*/)){
                        /*consume*/
                        /*
                           74:211 function_expression=>τfunction ( ) • { function_body }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==123/*[{]*/)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$function_statement_list(l,state)){
                                add_reduce(state,1,120);
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                    /*--unique-id--74--DO-NOT-REPLACE*/
                                    add_reduce(state,6,116);
                                    debug_stack.push({ name:"function_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                    return state;
                                }
                            }
                        }
                    } else {
                        /*peek-production-closure*/
                        /*
                           74:207 function_expression=>τfunction ( • formal_parameters ) { function_body }
                        */
                        if(state=$formal_parameters(l,state)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(state=$function_statement_list(l,state)){
                                        add_reduce(state,1,120);
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                            /*--unique-id--74--DO-NOT-REPLACE*/
                                            add_reduce(state,7,112);
                                            debug_stack.push({ name:"function_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } else if(((pk.utf==95/*[_]*/)||(pk.utf==36/*[$]*/))||pk.isID()/*[id]*/){
            /*peek*/
            /*
               74:201 function_expression=>• τfunction binding_identifier ( formal_parameters ) { function_body }
               74:208 function_expression=>• τfunction binding_identifier ( ) { function_body }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,defined_token_e043e2118bdadad0(l)/*[function]*/)){
                /*consume*/
                /*
                   74:201 function_expression=>τfunction • binding_identifier ( formal_parameters ) { function_body }
                   74:208 function_expression=>τfunction • binding_identifier ( ) { function_body }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(state=$binding_identifier(l,state)){
                    /*assert*/
                    /*
                       74:201 function_expression=>τfunction • binding_identifier ( formal_parameters ) { function_body }
                       74:208 function_expression=>τfunction • binding_identifier ( ) { function_body }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==40/*[(]*/)){
                        /*consume*/
                        /*
                           74:201 function_expression=>τfunction binding_identifier ( • formal_parameters ) { function_body }
                           74:208 function_expression=>τfunction binding_identifier ( • ) { function_body }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                            /*consume*/
                            /*
                               74:208 function_expression=>τfunction binding_identifier ( ) • { function_body }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(state=$function_statement_list(l,state)){
                                    add_reduce(state,1,120);
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                        /*--unique-id--74--DO-NOT-REPLACE*/
                                        add_reduce(state,7,113);
                                        debug_stack.push({ name:"function_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                        return state;
                                    }
                                }
                            }
                        } else {
                            /*peek-production-closure*/
                            /*
                               74:201 function_expression=>τfunction binding_identifier ( • formal_parameters ) { function_body }
                            */
                            if(state=$formal_parameters(l,state)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(state=$function_statement_list(l,state)){
                                            add_reduce(state,1,120);
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--74--DO-NOT-REPLACE*/
                                                add_reduce(state,8,106);
                                                debug_stack.push({ name:"function_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    debug_stack.push({ name:"function_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: unique_formal_parameters
            grammar index: 75
            bodies:
	75:212 unique_formal_parameters=>• formal_parameters - 
            compile time: 1.473ms*/;
function $unique_formal_parameters(l,state){
    debug_stack.push({ name:"unique_formal_parameters RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$formal_parameters(l,state)){
        /*--unique-id--75--DO-NOT-REPLACE*/
        debug_stack.push({ name:"unique_formal_parameters RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"unique_formal_parameters RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: formal_parameters
            grammar index: 76
            bodies:
	76:213 formal_parameters=>• function_rest_parameter - 
		76:214 formal_parameters=>• formal_parameter_list , - 
		76:215 formal_parameters=>• formal_parameter_list , function_rest_parameter - 
		76:216 formal_parameters=>• formal_parameter_list - 
            compile time: 48.206ms*/;
function $formal_parameters(l,state){
    debug_stack.push({ name:"formal_parameters RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(defined_token_f47f6de2d28c24e5(l)/*[...]*/){
        /*peek-production-closure*/
        /*
           76:213 formal_parameters=>• function_rest_parameter
        */
        if(state=$binding_rest_element(l,state)){
            /*--unique-id--76--DO-NOT-REPLACE*/
            add_reduce(state,1,117);
            debug_stack.push({ name:"formal_parameters RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           76:214 formal_parameters=>• formal_parameter_list ,
           76:215 formal_parameters=>• formal_parameter_list , function_rest_parameter
           76:216 formal_parameters=>• formal_parameter_list
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$formal_parameter_list(l,state)){
            /*assert*/
            /*
               76:214 formal_parameters=>• formal_parameter_list ,
               76:215 formal_parameters=>• formal_parameter_list , function_rest_parameter
               76:216 formal_parameters=>• formal_parameter_list
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,l.utf==44/*[,]*/)){
                /*consume*/
                /*
                   76:214 formal_parameters=>formal_parameter_list , •
                   76:215 formal_parameters=>formal_parameter_list , • function_rest_parameter
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(defined_token_f47f6de2d28c24e5(l)/*[...]*/){
                    /*assert-production-closure*/
                    /*
                       76:215 formal_parameters=>formal_parameter_list , • function_rest_parameter
                    */
                    if(state=$binding_rest_element(l,state)){
                        /*--unique-id--76--DO-NOT-REPLACE*/
                        add_reduce(state,3,119);
                        debug_stack.push({ name:"formal_parameters RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                } else {
                    /*assert-end*/
                    /*
                       76:214 formal_parameters=>formal_parameter_list , •
                    */
                    /*--unique-id--76--DO-NOT-REPLACE*/
                    add_reduce(state,2,118);
                    debug_stack.push({ name:"formal_parameters RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            } else {
                /*assert-end*/
                /*
                   76:216 formal_parameters=>formal_parameter_list •
                */
                /*--unique-id--76--DO-NOT-REPLACE*/
                add_reduce(state,1,118);
                debug_stack.push({ name:"formal_parameters RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    }
    debug_stack.push({ name:"formal_parameters RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: formal_parameter_list
            grammar index: 78
            bodies:
	78:219 formal_parameter_list=>• formal_parameter_list , formal_parameter - 
		78:220 formal_parameter_list=>• formal_parameter - 
            compile time: 18.02ms*/;
function $formal_parameter_list(l,state){
    debug_stack.push({ name:"formal_parameter_list RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$binding_element(l,state)){
        /*--unique-id--78--DO-NOT-REPLACE*/
        add_reduce(state,1,4);
        return $formal_parameter_list_goto(l,state,78);
    }
    debug_stack.push({ name:"formal_parameter_list RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $formal_parameter_list_goto(l,state,prod){
    debug_stack.push({ name:"formal_parameter_list GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==44/*[,]*/)){
            /*consume*/
            /*
               78:219 formal_parameter_list=>formal_parameter_list , • formal_parameter
               76:214 formal_parameters=>formal_parameter_list , •
               76:215 formal_parameters=>formal_parameter_list , • function_rest_parameter
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_table(l,0x0,0x10,0x88000000,0x8000000)/*tbl:[ _ ] [ $ ] [ { ] [ [ ]*/||l.isID()/*[id]*/){
                /*peek-production-closure*/
                /*
                   78:219 formal_parameter_list=>formal_parameter_list , • formal_parameter
                */
                if(state=$binding_element(l,state)){
                    /*--unique-id--78--DO-NOT-REPLACE*/
                    add_reduce(state,3,11);
                    prod = 78;
                    continue;
                }
            }
        }
        break;
    }
    debug_stack.push({ name:"formal_parameter_list GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==78);
}
/*production name: function_statement_list
            grammar index: 82
            bodies:
	82:224 function_statement_list=>• statement_list - 
		82:225 function_statement_list=>• - 
            compile time: 25.91ms*/;
function $function_statement_list(l,state){
    debug_stack.push({ name:"function_statement_list RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(l)||defined_token_d8f9d336d83ac87c(l)/*[yield]*/)||defined_token_670f23e41126e00b(l)/*[async] [as] [await]*/)||defined_token_99035833d16742d9(l)/*[new] [null]*/)||defined_token_0a34667347bd2a3a(l)/*[super] [set] [switch]*/)||defined_token_1f80f2e0a149fe3d(l)/*[import] [if]*/)||defined_token_8e8ee78381c90ca5(l)/*[this] [target] [true] [typeof] [throw] [try]*/)||defined_token_8f5d282f35165648(l)/*[get]*/)||defined_token_967ffd9bf1cf840d(l)/*[from] [false] [for] [function]*/)||defined_token_e8ddfc9b5a509a6c(l)/*[delete] [do] [debugger]*/)||defined_token_1ae4fe309b644fa1(l)/*[void] [var]*/)||defined_token_6d4f77707d3e0e5a(l)/*[++]*/)||defined_token_f2ef34011f64cef0(l)/*[--]*/)||defined_token_aac16ca323764d7a(l)/*[while] [with]*/)||defined_token_912bb2f6b2683177(l)/*[continue] [class] [const]*/)||defined_token_c3524ff0dce64492(l)/*[break]*/)||defined_token_876f036172605c26(l)/*[return]*/)||defined_token_f188f6806e50797b(l)/*[let]*/)||assert_table(l,0x0,0x800a986,0x8000000,0x48000001)/*tbl:[ { ] [ ( ] [ [ ] [ / ] [ " ] [ ' ] [ ` ] [ + ] [ - ] [ ~ ] [ ! ] [ ; ]*/)||l.isNum()/*[num]*/){
        /*assert-production-closure*/
        /*
           82:224 function_statement_list=>• statement_list
        */
        if(state=$statement_list(l,state)){
            /*--unique-id--82--DO-NOT-REPLACE*/
            debug_stack.push({ name:"function_statement_list RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*assert-end*/
        /*
           82:225 function_statement_list=>•
        */
        /*--unique-id--82--DO-NOT-REPLACE*/
        debug_stack.push({ name:"function_statement_list RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"function_statement_list RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: yield_expression_group_0143_115
            grammar index: 83
            bodies:
	83:226 yield_expression_group_0143_115=>• * - 
            compile time: 1.179ms*/;
function $yield_expression_group_0143_115(l,state){
    debug_stack.push({ name:"yield_expression_group_0143_115 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==42/*[*]*/)){
        /*consume*/
        /*
           83:226 yield_expression_group_0143_115=>* •
        */
        /*--unique-id--83--DO-NOT-REPLACE*/
        debug_stack.push({ name:"yield_expression_group_0143_115 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"yield_expression_group_0143_115 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: yield_expression
            grammar index: 84
            bodies:
	84:227 yield_expression=>• τyield θnl - 
		84:228 yield_expression=>• τyield yield_expression_group_0143_115 assignment_expression - 
		84:229 yield_expression=>• τyield assignment_expression - 
            compile time: 16.315ms*/;
function $yield_expression(l,state){
    debug_stack.push({ name:"yield_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_d8f9d336d83ac87c(l)/*[yield]*/)){
        /*consume*/
        /*
           84:227 yield_expression=>τyield • θnl
           84:228 yield_expression=>τyield • yield_expression_group_0143_115 assignment_expression
           84:229 yield_expression=>τyield • assignment_expression
        */
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(assert_consume(l,state,l.isNL()/*[nl]*/)){
            /*consume*/
            /*
               84:227 yield_expression=>τyield θnl •
            */
            /*--unique-id--84--DO-NOT-REPLACE*/
            add_reduce(state,2,121);
            debug_stack.push({ name:"yield_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        } else if(l.utf==42/*[*]*/){
            /*peek-production-closure*/
            /*
               84:228 yield_expression=>τyield • yield_expression_group_0143_115 assignment_expression
            */
            if(state=$yield_expression_group_0143_115(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(state=$assignment_expression(l,state)){
                    /*--unique-id--84--DO-NOT-REPLACE*/
                    add_reduce(state,3,122);
                    debug_stack.push({ name:"yield_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        } else {
            /*peek-production-closure*/
            /*
               84:229 yield_expression=>τyield • assignment_expression
            */
            if(state=$assignment_expression(l,state)){
                /*--unique-id--84--DO-NOT-REPLACE*/
                add_reduce(state,2,123);
                debug_stack.push({ name:"yield_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    }
    debug_stack.push({ name:"yield_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: arrow_function
            grammar index: 85
            bodies:
	85:230 arrow_function=>• τasync arrow_parameters = > concise_body - 
		85:231 arrow_function=>• arrow_parameters = > concise_body - 
            compile time: 22.194ms*/;
function $arrow_function(l,state){
    debug_stack.push({ name:"arrow_function RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(defined_token_172adec61d2dc160(l)/*[async]*/){
        /*peek*/
        /*
           85:230 arrow_function=>• τasync arrow_parameters = > concise_body
           85:231 arrow_function=>• arrow_parameters = > concise_body
        */
        let pk = l.copy();
        sk_89d9202df84dae08(pk.next()/*[ ws ][ nl ][ 6 ]*/);
        if(pk.utf==61/*[=]*/){
            /*peek-production-closure*/
            /*
               85:231 arrow_function=>• arrow_parameters = > concise_body
            */
            if(state=$arrow_parameters(l,state)){
                sk_89d9202df84dae08(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==61/*[=]*/)){
                    sk_89d9202df84dae08(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==62/*[>]*/)){
                        sk_89d9202df84dae08(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$concise_body(l,state)){
                            /*--unique-id--85--DO-NOT-REPLACE*/
                            add_reduce(state,4,125);
                            debug_stack.push({ name:"arrow_function RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                            return state;
                        }
                    }
                }
            }
        } else {
            /*peek-production-closure*/
            /*
               85:230 arrow_function=>• τasync arrow_parameters = > concise_body
            */
            if(assert_consume(l,state,defined_token_d4a7e22f69f4ee35(l)/*[async]*/)){
                sk_89d9202df84dae08(l/*[ ws ][ nl ][ 6 ]*/);
                if(state=$arrow_parameters(l,state)){
                    sk_89d9202df84dae08(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==61/*[=]*/)){
                        sk_89d9202df84dae08(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==62/*[>]*/)){
                            sk_89d9202df84dae08(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$concise_body(l,state)){
                                /*--unique-id--85--DO-NOT-REPLACE*/
                                add_reduce(state,5,124);
                                debug_stack.push({ name:"arrow_function RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                return state;
                            }
                        }
                    }
                }
            }
        }
    } else {
        /*peek-production-closure*/
        /*
           85:231 arrow_function=>• arrow_parameters = > concise_body
        */
        if(state=$arrow_parameters(l,state)){
            sk_89d9202df84dae08(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,l.utf==61/*[=]*/)){
                sk_89d9202df84dae08(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==62/*[>]*/)){
                    sk_89d9202df84dae08(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$concise_body(l,state)){
                        /*--unique-id--85--DO-NOT-REPLACE*/
                        add_reduce(state,4,125);
                        debug_stack.push({ name:"arrow_function RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                }
            }
        }
    }
    debug_stack.push({ name:"arrow_function RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: arrow_parameters
            grammar index: 86
            bodies:
	86:232 arrow_parameters=>• identifier_reference - 
		86:233 arrow_parameters=>• cover_parenthesized_expression_and_arrow_parameter_list - 
            compile time: 3.893ms*/;
function $arrow_parameters(l,state){
    debug_stack.push({ name:"arrow_parameters RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(l.utf==40/*[(]*/){
        /*peek-production-closure*/
        /*
           86:233 arrow_parameters=>• cover_parenthesized_expression_and_arrow_parameter_list
        */
        if(state=$cover_parenthesized_expression_and_arrow_parameter_list(l,state)){
            /*--unique-id--86--DO-NOT-REPLACE*/
            add_reduce(state,1,127);
            debug_stack.push({ name:"arrow_parameters RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           86:232 arrow_parameters=>• identifier_reference
        */
        if(state=$identifier(l,state)){
            /*--unique-id--86--DO-NOT-REPLACE*/
            add_reduce(state,1,254);
            add_reduce(state,1,126);
            debug_stack.push({ name:"arrow_parameters RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"arrow_parameters RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: concise_body
            grammar index: 87
            bodies:
	87:234 concise_body=>• assignment_expression - 
		87:235 concise_body=>• { function_statement_list } - 
            compile time: 16.506ms*/;
function $concise_body(l,state){
    debug_stack.push({ name:"concise_body RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==123/*[{]*/)){
        /*consume*/
        /*
           87:235 concise_body=>{ • function_statement_list }
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$function_statement_list(l,state)){
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                /*--unique-id--87--DO-NOT-REPLACE*/
                add_reduce(state,3,128);
                debug_stack.push({ name:"concise_body RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    } else {
        /*peek-production-closure*/
        /*
           87:234 concise_body=>• assignment_expression
        */
        if(state=$assignment_expression(l,state)){
            /*--unique-id--87--DO-NOT-REPLACE*/
            debug_stack.push({ name:"concise_body RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"concise_body RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: class_declaration
            grammar index: 89
            bodies:
	89:237 class_declaration=>• τclass binding_identifier class_heritage { class_body } - 
		89:238 class_declaration=>• τclass class_heritage { class_body } - 
		89:239 class_declaration=>• τclass binding_identifier { class_body } - 
		89:240 class_declaration=>• τclass binding_identifier class_heritage { } - 
		89:241 class_declaration=>• τclass { class_body } - 
		89:242 class_declaration=>• τclass class_heritage { } - 
		89:243 class_declaration=>• τclass binding_identifier { } - 
		89:244 class_declaration=>• τclass { } - 
            compile time: 48.072ms*/;
function $class_declaration(l,state){
    debug_stack.push({ name:"class_declaration RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_2d05a4070a3ebcf4(l)/*[class]*/)){
        /*consume*/
        /*
           89:237 class_declaration=>τclass • binding_identifier class_heritage { class_body }
           89:238 class_declaration=>τclass • class_heritage { class_body }
           89:239 class_declaration=>τclass • binding_identifier { class_body }
           89:240 class_declaration=>τclass • binding_identifier class_heritage { }
           89:241 class_declaration=>τclass • { class_body }
           89:242 class_declaration=>τclass • class_heritage { }
           89:243 class_declaration=>τclass • binding_identifier { }
           89:244 class_declaration=>τclass • { }
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(defined_token_53a6f4c8d1e0fc43(l)/*[extends]*/){
            /*peek-production-closure*/
            /*
               89:238 class_declaration=>τclass • class_heritage { class_body }
               89:242 class_declaration=>τclass • class_heritage { }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$class_heritage(l,state)){
                /*assert*/
                /*
                   89:238 class_declaration=>τclass • class_heritage { class_body }
                   89:242 class_declaration=>τclass • class_heritage { }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==123/*[{]*/)){
                    /*consume*/
                    /*
                       89:238 class_declaration=>τclass class_heritage { • class_body }
                       89:242 class_declaration=>τclass class_heritage { • }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==125/*[}]*/)){
                        /*consume*/
                        /*
                           89:242 class_declaration=>τclass class_heritage { } •
                        */
                        /*--unique-id--89--DO-NOT-REPLACE*/
                        add_reduce(state,4,135);
                        debug_stack.push({ name:"class_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    } else {
                        /*peek-production-closure*/
                        /*
                           89:238 class_declaration=>τclass class_heritage { • class_body }
                        */
                        if(state=$class_body(l,state)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                /*--unique-id--89--DO-NOT-REPLACE*/
                                add_reduce(state,5,131);
                                debug_stack.push({ name:"class_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                return state;
                            }
                        }
                    }
                }
            }
        } else if(l.utf==123/*[{]*/){
            /*peek*/
            /*
               89:241 class_declaration=>τclass • { class_body }
               89:244 class_declaration=>τclass • { }
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(pk.utf==125/*[}]*/){
                /*peek*/
                /*
                   89:244 class_declaration=>τclass • { }
                */
                if(assert_consume(l,state,l.utf==123/*[{]*/)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==125/*[}]*/)){
                        /*--unique-id--89--DO-NOT-REPLACE*/
                        add_reduce(state,3,137);
                        debug_stack.push({ name:"class_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                }
            } else if((assert_table(pk,0x0,0x8000494,0x88000000,0x0)/*tbl:[ * ] [ _ ] [ $ ] [ " ] [ ' ] [ [ ] [ ; ]*/||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
                /*peek*/
                /*
                   89:241 class_declaration=>τclass • { class_body }
                */
                if(assert_consume(l,state,l.utf==123/*[{]*/)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$class_body(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                            /*--unique-id--89--DO-NOT-REPLACE*/
                            add_reduce(state,4,134);
                            debug_stack.push({ name:"class_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                            return state;
                        }
                    }
                }
            }
        } else {
            /*peek-production-closure*/
            /*
               89:237 class_declaration=>τclass • binding_identifier class_heritage { class_body }
               89:239 class_declaration=>τclass • binding_identifier { class_body }
               89:240 class_declaration=>τclass • binding_identifier class_heritage { }
               89:243 class_declaration=>τclass • binding_identifier { }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$binding_identifier(l,state)){
                /*assert*/
                /*
                   89:237 class_declaration=>τclass • binding_identifier class_heritage { class_body }
                   89:239 class_declaration=>τclass • binding_identifier { class_body }
                   89:240 class_declaration=>τclass • binding_identifier class_heritage { }
                   89:243 class_declaration=>τclass • binding_identifier { }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(defined_token_e021d8532f9147fd(l)/*[extends]*/){
                    /*peek-production-closure*/
                    /*
                       89:237 class_declaration=>τclass binding_identifier • class_heritage { class_body }
                       89:240 class_declaration=>τclass binding_identifier • class_heritage { }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$class_heritage(l,state)){
                        /*assert*/
                        /*
                           89:237 class_declaration=>τclass binding_identifier • class_heritage { class_body }
                           89:240 class_declaration=>τclass binding_identifier • class_heritage { }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==123/*[{]*/)){
                            /*consume*/
                            /*
                               89:237 class_declaration=>τclass binding_identifier class_heritage { • class_body }
                               89:240 class_declaration=>τclass binding_identifier class_heritage { • }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                /*consume*/
                                /*
                                   89:240 class_declaration=>τclass binding_identifier class_heritage { } •
                                */
                                /*--unique-id--89--DO-NOT-REPLACE*/
                                add_reduce(state,5,133);
                                debug_stack.push({ name:"class_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                return state;
                            } else {
                                /*peek-production-closure*/
                                /*
                                   89:237 class_declaration=>τclass binding_identifier class_heritage { • class_body }
                                */
                                if(state=$class_body(l,state)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                        /*--unique-id--89--DO-NOT-REPLACE*/
                                        add_reduce(state,6,130);
                                        debug_stack.push({ name:"class_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                        return state;
                                    }
                                }
                            }
                        }
                    }
                } else if(l.utf==123/*[{]*/){
                    /*peek*/
                    /*
                       89:239 class_declaration=>τclass binding_identifier • { class_body }
                       89:243 class_declaration=>τclass binding_identifier • { }
                    */
                    let pk = l.copy();
                    sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                    if(pk.utf==125/*[}]*/){
                        /*peek*/
                        /*
                           89:243 class_declaration=>τclass binding_identifier • { }
                        */
                        if(assert_consume(l,state,l.utf==123/*[{]*/)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                /*--unique-id--89--DO-NOT-REPLACE*/
                                add_reduce(state,4,136);
                                debug_stack.push({ name:"class_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                return state;
                            }
                        }
                    } else if((assert_table(pk,0x0,0x8000494,0x88000000,0x0)/*tbl:[ * ] [ _ ] [ $ ] [ " ] [ ' ] [ [ ] [ ; ]*/||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
                        /*peek*/
                        /*
                           89:239 class_declaration=>τclass binding_identifier • { class_body }
                        */
                        if(assert_consume(l,state,l.utf==123/*[{]*/)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$class_body(l,state)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                    /*--unique-id--89--DO-NOT-REPLACE*/
                                    add_reduce(state,5,132);
                                    debug_stack.push({ name:"class_declaration RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                    return state;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    debug_stack.push({ name:"class_declaration RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: class_expression
            grammar index: 90
            bodies:
	90:245 class_expression=>• τclass binding_identifier class_heritage { class_body } - 
		90:246 class_expression=>• τclass class_heritage { class_body } - 
		90:247 class_expression=>• τclass binding_identifier { class_body } - 
		90:248 class_expression=>• τclass binding_identifier class_heritage { } - 
		90:249 class_expression=>• τclass { class_body } - 
		90:250 class_expression=>• τclass class_heritage { } - 
		90:251 class_expression=>• τclass binding_identifier { } - 
		90:252 class_expression=>• τclass { } - 
            compile time: 52.845ms*/;
function $class_expression(l,state){
    debug_stack.push({ name:"class_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_2d05a4070a3ebcf4(l)/*[class]*/)){
        /*consume*/
        /*
           90:245 class_expression=>τclass • binding_identifier class_heritage { class_body }
           90:246 class_expression=>τclass • class_heritage { class_body }
           90:247 class_expression=>τclass • binding_identifier { class_body }
           90:248 class_expression=>τclass • binding_identifier class_heritage { }
           90:249 class_expression=>τclass • { class_body }
           90:250 class_expression=>τclass • class_heritage { }
           90:251 class_expression=>τclass • binding_identifier { }
           90:252 class_expression=>τclass • { }
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(defined_token_53a6f4c8d1e0fc43(l)/*[extends]*/){
            /*peek-production-closure*/
            /*
               90:246 class_expression=>τclass • class_heritage { class_body }
               90:250 class_expression=>τclass • class_heritage { }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$class_heritage(l,state)){
                /*assert*/
                /*
                   90:246 class_expression=>τclass • class_heritage { class_body }
                   90:250 class_expression=>τclass • class_heritage { }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==123/*[{]*/)){
                    /*consume*/
                    /*
                       90:246 class_expression=>τclass class_heritage { • class_body }
                       90:250 class_expression=>τclass class_heritage { • }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==125/*[}]*/)){
                        /*consume*/
                        /*
                           90:250 class_expression=>τclass class_heritage { } •
                        */
                        /*--unique-id--90--DO-NOT-REPLACE*/
                        add_reduce(state,4,135);
                        debug_stack.push({ name:"class_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    } else {
                        /*peek-production-closure*/
                        /*
                           90:246 class_expression=>τclass class_heritage { • class_body }
                        */
                        if(state=$class_body(l,state)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                /*--unique-id--90--DO-NOT-REPLACE*/
                                add_reduce(state,5,131);
                                debug_stack.push({ name:"class_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                return state;
                            }
                        }
                    }
                }
            }
        } else if(l.utf==123/*[{]*/){
            /*peek*/
            /*
               90:249 class_expression=>τclass • { class_body }
               90:252 class_expression=>τclass • { }
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(pk.utf==125/*[}]*/){
                /*peek*/
                /*
                   90:252 class_expression=>τclass • { }
                */
                if(assert_consume(l,state,l.utf==123/*[{]*/)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==125/*[}]*/)){
                        /*--unique-id--90--DO-NOT-REPLACE*/
                        add_reduce(state,3,137);
                        debug_stack.push({ name:"class_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                }
            } else if((assert_table(pk,0x0,0x8000494,0x88000000,0x0)/*tbl:[ * ] [ _ ] [ $ ] [ " ] [ ' ] [ [ ] [ ; ]*/||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
                /*peek*/
                /*
                   90:249 class_expression=>τclass • { class_body }
                */
                if(assert_consume(l,state,l.utf==123/*[{]*/)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$class_body(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                            /*--unique-id--90--DO-NOT-REPLACE*/
                            add_reduce(state,4,134);
                            debug_stack.push({ name:"class_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                            return state;
                        }
                    }
                }
            }
        } else {
            /*peek-production-closure*/
            /*
               90:245 class_expression=>τclass • binding_identifier class_heritage { class_body }
               90:247 class_expression=>τclass • binding_identifier { class_body }
               90:248 class_expression=>τclass • binding_identifier class_heritage { }
               90:251 class_expression=>τclass • binding_identifier { }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$binding_identifier(l,state)){
                /*assert*/
                /*
                   90:245 class_expression=>τclass • binding_identifier class_heritage { class_body }
                   90:247 class_expression=>τclass • binding_identifier { class_body }
                   90:248 class_expression=>τclass • binding_identifier class_heritage { }
                   90:251 class_expression=>τclass • binding_identifier { }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(defined_token_e021d8532f9147fd(l)/*[extends]*/){
                    /*peek-production-closure*/
                    /*
                       90:245 class_expression=>τclass binding_identifier • class_heritage { class_body }
                       90:248 class_expression=>τclass binding_identifier • class_heritage { }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$class_heritage(l,state)){
                        /*assert*/
                        /*
                           90:245 class_expression=>τclass binding_identifier • class_heritage { class_body }
                           90:248 class_expression=>τclass binding_identifier • class_heritage { }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==123/*[{]*/)){
                            /*consume*/
                            /*
                               90:245 class_expression=>τclass binding_identifier class_heritage { • class_body }
                               90:248 class_expression=>τclass binding_identifier class_heritage { • }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                /*consume*/
                                /*
                                   90:248 class_expression=>τclass binding_identifier class_heritage { } •
                                */
                                /*--unique-id--90--DO-NOT-REPLACE*/
                                add_reduce(state,5,133);
                                debug_stack.push({ name:"class_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                return state;
                            } else {
                                /*peek-production-closure*/
                                /*
                                   90:245 class_expression=>τclass binding_identifier class_heritage { • class_body }
                                */
                                if(state=$class_body(l,state)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                        /*--unique-id--90--DO-NOT-REPLACE*/
                                        add_reduce(state,6,130);
                                        debug_stack.push({ name:"class_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                        return state;
                                    }
                                }
                            }
                        }
                    }
                } else if(l.utf==123/*[{]*/){
                    /*peek*/
                    /*
                       90:247 class_expression=>τclass binding_identifier • { class_body }
                       90:251 class_expression=>τclass binding_identifier • { }
                    */
                    let pk = l.copy();
                    sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                    if(pk.utf==125/*[}]*/){
                        /*peek*/
                        /*
                           90:251 class_expression=>τclass binding_identifier • { }
                        */
                        if(assert_consume(l,state,l.utf==123/*[{]*/)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                /*--unique-id--90--DO-NOT-REPLACE*/
                                add_reduce(state,4,136);
                                debug_stack.push({ name:"class_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                return state;
                            }
                        }
                    } else if((assert_table(pk,0x0,0x8000494,0x88000000,0x0)/*tbl:[ * ] [ _ ] [ $ ] [ " ] [ ' ] [ [ ] [ ; ]*/||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
                        /*peek*/
                        /*
                           90:247 class_expression=>τclass binding_identifier • { class_body }
                        */
                        if(assert_consume(l,state,l.utf==123/*[{]*/)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$class_body(l,state)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                    /*--unique-id--90--DO-NOT-REPLACE*/
                                    add_reduce(state,5,132);
                                    debug_stack.push({ name:"class_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                    return state;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    debug_stack.push({ name:"class_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: class_heritage
            grammar index: 91
            bodies:
	91:253 class_heritage=>• τextends left_hand_side_expression - 
            compile time: 1.829ms*/;
function $class_heritage(l,state){
    debug_stack.push({ name:"class_heritage RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_e021d8532f9147fd(l)/*[extends]*/)){
        /*consume*/
        /*
           91:253 class_heritage=>τextends • left_hand_side_expression
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$left_hand_side_expression(l,state)){
            /*--unique-id--91--DO-NOT-REPLACE*/
            add_reduce(state,2,0);
            debug_stack.push({ name:"class_heritage RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"class_heritage RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: class_body
            grammar index: 92
            bodies:
	92:254 class_body=>• class_element - 
		92:255 class_body=>• class_body class_element - 
		92:256 class_body=>• class_body ; - 
		92:257 class_body=>• ; - 
            compile time: 36.11ms*/;
function $class_body(l,state){
    debug_stack.push({ name:"class_body RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==59/*[;]*/)){
        /*consume*/
        /*
           92:257 class_body=>; •
        */
        /*--unique-id--92--DO-NOT-REPLACE*/
        add_reduce(state,1,140);
        return $class_body_goto(l,state,92);
    } else {
        /*peek-production-closure*/
        /*
           92:254 class_body=>• class_element
        */
        if(state=$class_element(l,state)){
            /*--unique-id--92--DO-NOT-REPLACE*/
            add_reduce(state,1,4);
            return $class_body_goto(l,state,92);
        }
    }
    debug_stack.push({ name:"class_body RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $class_body_goto(l,state,prod){
    debug_stack.push({ name:"class_body GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==59/*[;]*/)){
            /*consume*/
            /*
               92:256 class_body=>class_body ; •
            */
            /*--unique-id--92--DO-NOT-REPLACE*/
            add_reduce(state,2,139);
            prod = 92;
            continue;
        } else if((assert_table(l,0x0,0x494,0x88000000,0x0)/*tbl:[ * ] [ _ ] [ $ ] [ " ] [ ' ] [ [ ]*/||l.isID()/*[id]*/)||l.isNum()/*[num]*/){
            /*peek-production-closure*/
            /*
               92:255 class_body=>class_body • class_element
            */
            if(state=$class_element(l,state)){
                /*--unique-id--92--DO-NOT-REPLACE*/
                add_reduce(state,2,138);
                prod = 92;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"class_body GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==92);
}
/*production name: class_element
            grammar index: 93
            bodies:
	93:258 class_element=>• method_definition - 
		93:259 class_element=>• τstatic method_definition - 
            compile time: 8.652ms*/;
function $class_element(l,state){
    debug_stack.push({ name:"class_element RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_17331620f5e592a6(l)/*[static]*/)){
        /*consume*/
        /*
           93:259 class_element=>τstatic • method_definition
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$method_definition(l,state)){
            /*--unique-id--93--DO-NOT-REPLACE*/
            add_reduce(state,2,141);
            debug_stack.push({ name:"class_element RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           93:258 class_element=>• method_definition
        */
        if(state=$method_definition(l,state)){
            /*--unique-id--93--DO-NOT-REPLACE*/
            debug_stack.push({ name:"class_element RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"class_element RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: method_definition
            grammar index: 94
            bodies:
	94:260 method_definition=>• τasync yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { function_body } - 
		94:261 method_definition=>• τget property_name ( ) { function_body } - 
		94:262 method_definition=>• τset property_name ( property_set_parameter_list ) { function_body } - 
		94:263 method_definition=>• yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { function_body } - 
		94:264 method_definition=>• τasync property_name ( unique_formal_parameters ) { function_body } - 
		94:265 method_definition=>• τasync yield_expression_group_0143_115 property_name ( ) { function_body } - 
		94:266 method_definition=>• τasync yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { } - 
		94:267 method_definition=>• τget property_name ( ) { } - 
		94:268 method_definition=>• τset property_name ( property_set_parameter_list ) { } - 
		94:269 method_definition=>• property_name ( unique_formal_parameters ) { function_body } - 
		94:270 method_definition=>• yield_expression_group_0143_115 property_name ( ) { function_body } - 
		94:271 method_definition=>• yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { } - 
		94:272 method_definition=>• τasync property_name ( ) { function_body } - 
		94:273 method_definition=>• τasync property_name ( unique_formal_parameters ) { } - 
		94:274 method_definition=>• τasync yield_expression_group_0143_115 property_name ( ) { } - 
		94:275 method_definition=>• property_name ( ) { function_body } - 
		94:276 method_definition=>• property_name ( unique_formal_parameters ) { } - 
		94:277 method_definition=>• yield_expression_group_0143_115 property_name ( ) { } - 
		94:278 method_definition=>• τasync property_name ( ) { } - 
		94:279 method_definition=>• property_name ( ) { } - 
            compile time: 720.286ms*/;
function $method_definition(l,state){
    debug_stack.push({ name:"method_definition RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(defined_token_172adec61d2dc160(l)/*[async]*/){
        /*peek*/
        /*
           94:260 method_definition=>• τasync yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { function_body }
           94:264 method_definition=>• τasync property_name ( unique_formal_parameters ) { function_body }
           94:265 method_definition=>• τasync yield_expression_group_0143_115 property_name ( ) { function_body }
           94:266 method_definition=>• τasync yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { }
           94:269 method_definition=>• property_name ( unique_formal_parameters ) { function_body }
           94:272 method_definition=>• τasync property_name ( ) { function_body }
           94:273 method_definition=>• τasync property_name ( unique_formal_parameters ) { }
           94:274 method_definition=>• τasync yield_expression_group_0143_115 property_name ( ) { }
           94:275 method_definition=>• property_name ( ) { function_body }
           94:276 method_definition=>• property_name ( unique_formal_parameters ) { }
           94:278 method_definition=>• τasync property_name ( ) { }
           94:279 method_definition=>• property_name ( ) { }
        */
        let pk = l.copy();
        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
        if(pk.utf==42/*[*]*/){
            /*peek*/
            /*
               94:260 method_definition=>• τasync yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { function_body }
               94:265 method_definition=>• τasync yield_expression_group_0143_115 property_name ( ) { function_body }
               94:266 method_definition=>• τasync yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { }
               94:274 method_definition=>• τasync yield_expression_group_0143_115 property_name ( ) { }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,defined_token_d4a7e22f69f4ee35(l)/*[async]*/)){
                /*consume*/
                /*
                   94:260 method_definition=>τasync • yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { function_body }
                   94:265 method_definition=>τasync • yield_expression_group_0143_115 property_name ( ) { function_body }
                   94:266 method_definition=>τasync • yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { }
                   94:274 method_definition=>τasync • yield_expression_group_0143_115 property_name ( ) { }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(state=$yield_expression_group_0143_115(l,state)){
                    /*assert*/
                    /*
                       94:260 method_definition=>τasync • yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { function_body }
                       94:265 method_definition=>τasync • yield_expression_group_0143_115 property_name ( ) { function_body }
                       94:266 method_definition=>τasync • yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { }
                       94:274 method_definition=>τasync • yield_expression_group_0143_115 property_name ( ) { }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$property_name(l,state)){
                        /*assert*/
                        /*
                           94:260 method_definition=>τasync yield_expression_group_0143_115 • property_name ( unique_formal_parameters ) { function_body }
                           94:265 method_definition=>τasync yield_expression_group_0143_115 • property_name ( ) { function_body }
                           94:266 method_definition=>τasync yield_expression_group_0143_115 • property_name ( unique_formal_parameters ) { }
                           94:274 method_definition=>τasync yield_expression_group_0143_115 • property_name ( ) { }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==40/*[(]*/)){
                            /*consume*/
                            /*
                               94:260 method_definition=>τasync yield_expression_group_0143_115 property_name ( • unique_formal_parameters ) { function_body }
                               94:265 method_definition=>τasync yield_expression_group_0143_115 property_name ( • ) { function_body }
                               94:266 method_definition=>τasync yield_expression_group_0143_115 property_name ( • unique_formal_parameters ) { }
                               94:274 method_definition=>τasync yield_expression_group_0143_115 property_name ( • ) { }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(l.utf==41/*[)]*/){
                                /*peek*/
                                /*
                                   94:265 method_definition=>τasync yield_expression_group_0143_115 property_name ( • ) { function_body }
                                   94:274 method_definition=>τasync yield_expression_group_0143_115 property_name ( • ) { }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                    /*consume*/
                                    /*
                                       94:265 method_definition=>τasync yield_expression_group_0143_115 property_name ( ) • { function_body }
                                       94:274 method_definition=>τasync yield_expression_group_0143_115 property_name ( ) • { }
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                        /*consume*/
                                        /*
                                           94:265 method_definition=>τasync yield_expression_group_0143_115 property_name ( ) { • function_body }
                                           94:274 method_definition=>τasync yield_expression_group_0143_115 property_name ( ) { • }
                                        */
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(l.utf==125/*[}]*/){
                                            /*peek*/
                                            /*
                                               94:265 method_definition=>τasync yield_expression_group_0143_115 property_name ( ) { • function_body }
                                               94:274 method_definition=>τasync yield_expression_group_0143_115 property_name ( ) { • }
                                            */
                                            let pk = l.copy();
                                            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                            if(((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(pk)||defined_token_670f23e41126e00b(pk)/*[async] [await] [as]*/)||defined_token_8f5d282f35165648(pk)/*[get]*/)||defined_token_3f0cefcc8fe287e4(pk)/*[set] [super] [switch] [static]*/)||defined_token_c3524ff0dce64492(pk)/*[break]*/)||defined_token_c460df0c19b30757(pk)/*[case] [catch] [class] [const] [continue]*/)||defined_token_0b6f38e897a6033b(pk)/*[debugger] [default] [delete] [do]*/)||defined_token_eb7f69039a78f607(pk)/*[else] [export] [extends]*/)||defined_token_052b4d0bdbf4fcd7(pk)/*[finally] [for] [function] [false] [from]*/)||defined_token_b7730e2b48fe68f8(pk)/*[if] [import] [in] [instanceof] [implements] [interface]*/)||defined_token_99035833d16742d9(pk)/*[new] [null]*/)||defined_token_876f036172605c26(pk)/*[return]*/)||defined_token_9f5e0fa0456f67cf(pk)/*[this] [throw] [try] [typeof] [true] [target]*/)||defined_token_b64c7c58a10dcef3(pk)/*[var] [void]*/)||defined_token_aac16ca323764d7a(pk)/*[while] [with]*/)||defined_token_d8f9d336d83ac87c(pk)/*[yield]*/)||defined_token_dc17de0546cfa0c9(pk)/*[package] [protected] [private] [public]*/)||assert_table(pk,0x0,0x8001484,0x8000000,0x20000000)/*tbl:[ } ] [ * ] [ " ] [ ' ] [ [ ] [ ; ] [ , ]*/)||pk.END())||pk.isNum()/*[num]*/){
                                                /*peek*/
                                                /*
                                                   94:274 method_definition=>τasync yield_expression_group_0143_115 property_name ( ) { • }
                                                */
                                                if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                    /*--unique-id--94--DO-NOT-REPLACE*/
                                                    add_reduce(state,7,156);
                                                    debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                    return state;
                                                }
                                            }
                                        } else {
                                            /*peek-production-closure*/
                                            /*
                                               94:265 method_definition=>τasync yield_expression_group_0143_115 property_name ( ) { • function_body }
                                            */
                                            if(state=$function_statement_list(l,state)){
                                                add_reduce(state,1,120);
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                    /*--unique-id--94--DO-NOT-REPLACE*/
                                                    add_reduce(state,8,147);
                                                    debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                    return state;
                                                }
                                            }
                                        }
                                    }
                                }
                            } else {
                                /*peek-production-closure*/
                                /*
                                   94:260 method_definition=>τasync yield_expression_group_0143_115 property_name ( • unique_formal_parameters ) { function_body }
                                   94:266 method_definition=>τasync yield_expression_group_0143_115 property_name ( • unique_formal_parameters ) { }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(state=$unique_formal_parameters(l,state)){
                                    /*assert*/
                                    /*
                                       94:260 method_definition=>τasync yield_expression_group_0143_115 property_name ( • unique_formal_parameters ) { function_body }
                                       94:266 method_definition=>τasync yield_expression_group_0143_115 property_name ( • unique_formal_parameters ) { }
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                        /*consume*/
                                        /*
                                           94:260 method_definition=>τasync yield_expression_group_0143_115 property_name ( unique_formal_parameters ) • { function_body }
                                           94:266 method_definition=>τasync yield_expression_group_0143_115 property_name ( unique_formal_parameters ) • { }
                                        */
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                            /*consume*/
                                            /*
                                               94:260 method_definition=>τasync yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { • function_body }
                                               94:266 method_definition=>τasync yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { • }
                                            */
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(l.utf==125/*[}]*/){
                                                /*peek*/
                                                /*
                                                   94:260 method_definition=>τasync yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { • function_body }
                                                   94:266 method_definition=>τasync yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { • }
                                                */
                                                let pk = l.copy();
                                                sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                                if(((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(pk)||defined_token_670f23e41126e00b(pk)/*[async] [await] [as]*/)||defined_token_8f5d282f35165648(pk)/*[get]*/)||defined_token_3f0cefcc8fe287e4(pk)/*[set] [super] [switch] [static]*/)||defined_token_c3524ff0dce64492(pk)/*[break]*/)||defined_token_c460df0c19b30757(pk)/*[case] [catch] [class] [const] [continue]*/)||defined_token_0b6f38e897a6033b(pk)/*[debugger] [default] [delete] [do]*/)||defined_token_eb7f69039a78f607(pk)/*[else] [export] [extends]*/)||defined_token_052b4d0bdbf4fcd7(pk)/*[finally] [for] [function] [false] [from]*/)||defined_token_b7730e2b48fe68f8(pk)/*[if] [import] [in] [instanceof] [implements] [interface]*/)||defined_token_99035833d16742d9(pk)/*[new] [null]*/)||defined_token_876f036172605c26(pk)/*[return]*/)||defined_token_9f5e0fa0456f67cf(pk)/*[this] [throw] [try] [typeof] [true] [target]*/)||defined_token_b64c7c58a10dcef3(pk)/*[var] [void]*/)||defined_token_aac16ca323764d7a(pk)/*[while] [with]*/)||defined_token_d8f9d336d83ac87c(pk)/*[yield]*/)||defined_token_dc17de0546cfa0c9(pk)/*[package] [protected] [private] [public]*/)||assert_table(pk,0x0,0x8001484,0x8000000,0x20000000)/*tbl:[ } ] [ * ] [ " ] [ ' ] [ [ ] [ ; ] [ , ]*/)||pk.END())||pk.isNum()/*[num]*/){
                                                    /*peek*/
                                                    /*
                                                       94:266 method_definition=>τasync yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { • }
                                                    */
                                                    if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                        /*--unique-id--94--DO-NOT-REPLACE*/
                                                        add_reduce(state,8,148);
                                                        debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                        return state;
                                                    }
                                                }
                                            } else {
                                                /*peek-production-closure*/
                                                /*
                                                   94:260 method_definition=>τasync yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { • function_body }
                                                */
                                                if(state=$function_statement_list(l,state)){
                                                    add_reduce(state,1,120);
                                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                    if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                        /*--unique-id--94--DO-NOT-REPLACE*/
                                                        add_reduce(state,9,142);
                                                        debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                        return state;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } else if(pk.utf==40/*[(]*/){
            /*peek-production-closure*/
            /*
               94:269 method_definition=>• property_name ( unique_formal_parameters ) { function_body }
               94:275 method_definition=>• property_name ( ) { function_body }
               94:276 method_definition=>• property_name ( unique_formal_parameters ) { }
               94:279 method_definition=>• property_name ( ) { }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$property_name(l,state)){
                /*assert*/
                /*
                   94:269 method_definition=>• property_name ( unique_formal_parameters ) { function_body }
                   94:275 method_definition=>• property_name ( ) { function_body }
                   94:276 method_definition=>• property_name ( unique_formal_parameters ) { }
                   94:279 method_definition=>• property_name ( ) { }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==40/*[(]*/)){
                    /*consume*/
                    /*
                       94:269 method_definition=>property_name ( • unique_formal_parameters ) { function_body }
                       94:275 method_definition=>property_name ( • ) { function_body }
                       94:276 method_definition=>property_name ( • unique_formal_parameters ) { }
                       94:279 method_definition=>property_name ( • ) { }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(l.utf==41/*[)]*/){
                        /*peek*/
                        /*
                           94:275 method_definition=>property_name ( • ) { function_body }
                           94:279 method_definition=>property_name ( • ) { }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                            /*consume*/
                            /*
                               94:275 method_definition=>property_name ( ) • { function_body }
                               94:279 method_definition=>property_name ( ) • { }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                /*consume*/
                                /*
                                   94:275 method_definition=>property_name ( ) { • function_body }
                                   94:279 method_definition=>property_name ( ) { • }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(l.utf==125/*[}]*/){
                                    /*peek*/
                                    /*
                                       94:275 method_definition=>property_name ( ) { • function_body }
                                       94:279 method_definition=>property_name ( ) { • }
                                    */
                                    let pk = l.copy();
                                    sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                    if(((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(pk)||defined_token_670f23e41126e00b(pk)/*[async] [await] [as]*/)||defined_token_8f5d282f35165648(pk)/*[get]*/)||defined_token_3f0cefcc8fe287e4(pk)/*[set] [super] [switch] [static]*/)||defined_token_c3524ff0dce64492(pk)/*[break]*/)||defined_token_c460df0c19b30757(pk)/*[case] [catch] [class] [const] [continue]*/)||defined_token_0b6f38e897a6033b(pk)/*[debugger] [default] [delete] [do]*/)||defined_token_eb7f69039a78f607(pk)/*[else] [export] [extends]*/)||defined_token_052b4d0bdbf4fcd7(pk)/*[finally] [for] [function] [false] [from]*/)||defined_token_b7730e2b48fe68f8(pk)/*[if] [import] [in] [instanceof] [implements] [interface]*/)||defined_token_99035833d16742d9(pk)/*[new] [null]*/)||defined_token_876f036172605c26(pk)/*[return]*/)||defined_token_9f5e0fa0456f67cf(pk)/*[this] [throw] [try] [typeof] [true] [target]*/)||defined_token_b64c7c58a10dcef3(pk)/*[var] [void]*/)||defined_token_aac16ca323764d7a(pk)/*[while] [with]*/)||defined_token_d8f9d336d83ac87c(pk)/*[yield]*/)||defined_token_dc17de0546cfa0c9(pk)/*[package] [protected] [private] [public]*/)||assert_table(pk,0x0,0x8001484,0x8000000,0x20000000)/*tbl:[ } ] [ * ] [ " ] [ ' ] [ [ ] [ ; ] [ , ]*/)||pk.END())||pk.isNum()/*[num]*/){
                                        /*peek*/
                                        /*
                                           94:279 method_definition=>property_name ( ) { • }
                                        */
                                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                            /*--unique-id--94--DO-NOT-REPLACE*/
                                            add_reduce(state,5,161);
                                            debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                } else {
                                    /*peek-production-closure*/
                                    /*
                                       94:275 method_definition=>property_name ( ) { • function_body }
                                    */
                                    if(state=$function_statement_list(l,state)){
                                        add_reduce(state,1,120);
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                            /*--unique-id--94--DO-NOT-REPLACE*/
                                            add_reduce(state,6,157);
                                            debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                }
                            }
                        }
                    } else {
                        /*peek-production-closure*/
                        /*
                           94:269 method_definition=>property_name ( • unique_formal_parameters ) { function_body }
                           94:276 method_definition=>property_name ( • unique_formal_parameters ) { }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$unique_formal_parameters(l,state)){
                            /*assert*/
                            /*
                               94:269 method_definition=>property_name ( • unique_formal_parameters ) { function_body }
                               94:276 method_definition=>property_name ( • unique_formal_parameters ) { }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                /*consume*/
                                /*
                                   94:269 method_definition=>property_name ( unique_formal_parameters ) • { function_body }
                                   94:276 method_definition=>property_name ( unique_formal_parameters ) • { }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                    /*consume*/
                                    /*
                                       94:269 method_definition=>property_name ( unique_formal_parameters ) { • function_body }
                                       94:276 method_definition=>property_name ( unique_formal_parameters ) { • }
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(l.utf==125/*[}]*/){
                                        /*peek*/
                                        /*
                                           94:269 method_definition=>property_name ( unique_formal_parameters ) { • function_body }
                                           94:276 method_definition=>property_name ( unique_formal_parameters ) { • }
                                        */
                                        let pk = l.copy();
                                        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                        if(((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(pk)||defined_token_670f23e41126e00b(pk)/*[async] [await] [as]*/)||defined_token_8f5d282f35165648(pk)/*[get]*/)||defined_token_3f0cefcc8fe287e4(pk)/*[set] [super] [switch] [static]*/)||defined_token_c3524ff0dce64492(pk)/*[break]*/)||defined_token_c460df0c19b30757(pk)/*[case] [catch] [class] [const] [continue]*/)||defined_token_0b6f38e897a6033b(pk)/*[debugger] [default] [delete] [do]*/)||defined_token_eb7f69039a78f607(pk)/*[else] [export] [extends]*/)||defined_token_052b4d0bdbf4fcd7(pk)/*[finally] [for] [function] [false] [from]*/)||defined_token_b7730e2b48fe68f8(pk)/*[if] [import] [in] [instanceof] [implements] [interface]*/)||defined_token_99035833d16742d9(pk)/*[new] [null]*/)||defined_token_876f036172605c26(pk)/*[return]*/)||defined_token_9f5e0fa0456f67cf(pk)/*[this] [throw] [try] [typeof] [true] [target]*/)||defined_token_b64c7c58a10dcef3(pk)/*[var] [void]*/)||defined_token_aac16ca323764d7a(pk)/*[while] [with]*/)||defined_token_d8f9d336d83ac87c(pk)/*[yield]*/)||defined_token_dc17de0546cfa0c9(pk)/*[package] [protected] [private] [public]*/)||assert_table(pk,0x0,0x8001484,0x8000000,0x20000000)/*tbl:[ } ] [ * ] [ " ] [ ' ] [ [ ] [ ; ] [ , ]*/)||pk.END())||pk.isNum()/*[num]*/){
                                            /*peek*/
                                            /*
                                               94:276 method_definition=>property_name ( unique_formal_parameters ) { • }
                                            */
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--94--DO-NOT-REPLACE*/
                                                add_reduce(state,6,158);
                                                debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    } else {
                                        /*peek-production-closure*/
                                        /*
                                           94:269 method_definition=>property_name ( unique_formal_parameters ) { • function_body }
                                        */
                                        if(state=$function_statement_list(l,state)){
                                            add_reduce(state,1,120);
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--94--DO-NOT-REPLACE*/
                                                add_reduce(state,7,151);
                                                debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } else if((assert_table(pk,0x0,0x94,0x88000000,0x0)/*tbl:[ _ ] [ $ ] [ " ] [ ' ] [ [ ]*/||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
            /*peek*/
            /*
               94:264 method_definition=>• τasync property_name ( unique_formal_parameters ) { function_body }
               94:272 method_definition=>• τasync property_name ( ) { function_body }
               94:273 method_definition=>• τasync property_name ( unique_formal_parameters ) { }
               94:278 method_definition=>• τasync property_name ( ) { }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,defined_token_d4a7e22f69f4ee35(l)/*[async]*/)){
                /*consume*/
                /*
                   94:264 method_definition=>τasync • property_name ( unique_formal_parameters ) { function_body }
                   94:272 method_definition=>τasync • property_name ( ) { function_body }
                   94:273 method_definition=>τasync • property_name ( unique_formal_parameters ) { }
                   94:278 method_definition=>τasync • property_name ( ) { }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(state=$property_name(l,state)){
                    /*assert*/
                    /*
                       94:264 method_definition=>τasync • property_name ( unique_formal_parameters ) { function_body }
                       94:272 method_definition=>τasync • property_name ( ) { function_body }
                       94:273 method_definition=>τasync • property_name ( unique_formal_parameters ) { }
                       94:278 method_definition=>τasync • property_name ( ) { }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==40/*[(]*/)){
                        /*consume*/
                        /*
                           94:264 method_definition=>τasync property_name ( • unique_formal_parameters ) { function_body }
                           94:272 method_definition=>τasync property_name ( • ) { function_body }
                           94:273 method_definition=>τasync property_name ( • unique_formal_parameters ) { }
                           94:278 method_definition=>τasync property_name ( • ) { }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(l.utf==41/*[)]*/){
                            /*peek*/
                            /*
                               94:272 method_definition=>τasync property_name ( • ) { function_body }
                               94:278 method_definition=>τasync property_name ( • ) { }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                /*consume*/
                                /*
                                   94:272 method_definition=>τasync property_name ( ) • { function_body }
                                   94:278 method_definition=>τasync property_name ( ) • { }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                    /*consume*/
                                    /*
                                       94:272 method_definition=>τasync property_name ( ) { • function_body }
                                       94:278 method_definition=>τasync property_name ( ) { • }
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(l.utf==125/*[}]*/){
                                        /*peek*/
                                        /*
                                           94:272 method_definition=>τasync property_name ( ) { • function_body }
                                           94:278 method_definition=>τasync property_name ( ) { • }
                                        */
                                        let pk = l.copy();
                                        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                        if(((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(pk)||defined_token_670f23e41126e00b(pk)/*[async] [await] [as]*/)||defined_token_8f5d282f35165648(pk)/*[get]*/)||defined_token_3f0cefcc8fe287e4(pk)/*[set] [super] [switch] [static]*/)||defined_token_c3524ff0dce64492(pk)/*[break]*/)||defined_token_c460df0c19b30757(pk)/*[case] [catch] [class] [const] [continue]*/)||defined_token_0b6f38e897a6033b(pk)/*[debugger] [default] [delete] [do]*/)||defined_token_eb7f69039a78f607(pk)/*[else] [export] [extends]*/)||defined_token_052b4d0bdbf4fcd7(pk)/*[finally] [for] [function] [false] [from]*/)||defined_token_b7730e2b48fe68f8(pk)/*[if] [import] [in] [instanceof] [implements] [interface]*/)||defined_token_99035833d16742d9(pk)/*[new] [null]*/)||defined_token_876f036172605c26(pk)/*[return]*/)||defined_token_9f5e0fa0456f67cf(pk)/*[this] [throw] [try] [typeof] [true] [target]*/)||defined_token_b64c7c58a10dcef3(pk)/*[var] [void]*/)||defined_token_aac16ca323764d7a(pk)/*[while] [with]*/)||defined_token_d8f9d336d83ac87c(pk)/*[yield]*/)||defined_token_dc17de0546cfa0c9(pk)/*[package] [protected] [private] [public]*/)||assert_table(pk,0x0,0x8001484,0x8000000,0x20000000)/*tbl:[ } ] [ * ] [ " ] [ ' ] [ [ ] [ ; ] [ , ]*/)||pk.END())||pk.isNum()/*[num]*/){
                                            /*peek*/
                                            /*
                                               94:278 method_definition=>τasync property_name ( ) { • }
                                            */
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--94--DO-NOT-REPLACE*/
                                                add_reduce(state,6,160);
                                                debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    } else {
                                        /*peek-production-closure*/
                                        /*
                                           94:272 method_definition=>τasync property_name ( ) { • function_body }
                                        */
                                        if(state=$function_statement_list(l,state)){
                                            add_reduce(state,1,120);
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--94--DO-NOT-REPLACE*/
                                                add_reduce(state,7,154);
                                                debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    }
                                }
                            }
                        } else {
                            /*peek-production-closure*/
                            /*
                               94:264 method_definition=>τasync property_name ( • unique_formal_parameters ) { function_body }
                               94:273 method_definition=>τasync property_name ( • unique_formal_parameters ) { }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$unique_formal_parameters(l,state)){
                                /*assert*/
                                /*
                                   94:264 method_definition=>τasync property_name ( • unique_formal_parameters ) { function_body }
                                   94:273 method_definition=>τasync property_name ( • unique_formal_parameters ) { }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                    /*consume*/
                                    /*
                                       94:264 method_definition=>τasync property_name ( unique_formal_parameters ) • { function_body }
                                       94:273 method_definition=>τasync property_name ( unique_formal_parameters ) • { }
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                        /*consume*/
                                        /*
                                           94:264 method_definition=>τasync property_name ( unique_formal_parameters ) { • function_body }
                                           94:273 method_definition=>τasync property_name ( unique_formal_parameters ) { • }
                                        */
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(l.utf==125/*[}]*/){
                                            /*peek*/
                                            /*
                                               94:264 method_definition=>τasync property_name ( unique_formal_parameters ) { • function_body }
                                               94:273 method_definition=>τasync property_name ( unique_formal_parameters ) { • }
                                            */
                                            let pk = l.copy();
                                            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                            if(((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(pk)||defined_token_670f23e41126e00b(pk)/*[async] [await] [as]*/)||defined_token_8f5d282f35165648(pk)/*[get]*/)||defined_token_3f0cefcc8fe287e4(pk)/*[set] [super] [switch] [static]*/)||defined_token_c3524ff0dce64492(pk)/*[break]*/)||defined_token_c460df0c19b30757(pk)/*[case] [catch] [class] [const] [continue]*/)||defined_token_0b6f38e897a6033b(pk)/*[debugger] [default] [delete] [do]*/)||defined_token_eb7f69039a78f607(pk)/*[else] [export] [extends]*/)||defined_token_052b4d0bdbf4fcd7(pk)/*[finally] [for] [function] [false] [from]*/)||defined_token_b7730e2b48fe68f8(pk)/*[if] [import] [in] [instanceof] [implements] [interface]*/)||defined_token_99035833d16742d9(pk)/*[new] [null]*/)||defined_token_876f036172605c26(pk)/*[return]*/)||defined_token_9f5e0fa0456f67cf(pk)/*[this] [throw] [try] [typeof] [true] [target]*/)||defined_token_b64c7c58a10dcef3(pk)/*[var] [void]*/)||defined_token_aac16ca323764d7a(pk)/*[while] [with]*/)||defined_token_d8f9d336d83ac87c(pk)/*[yield]*/)||defined_token_dc17de0546cfa0c9(pk)/*[package] [protected] [private] [public]*/)||assert_table(pk,0x0,0x8001484,0x8000000,0x20000000)/*tbl:[ } ] [ * ] [ " ] [ ' ] [ [ ] [ ; ] [ , ]*/)||pk.END())||pk.isNum()/*[num]*/){
                                                /*peek*/
                                                /*
                                                   94:273 method_definition=>τasync property_name ( unique_formal_parameters ) { • }
                                                */
                                                if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                    /*--unique-id--94--DO-NOT-REPLACE*/
                                                    add_reduce(state,7,155);
                                                    debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                    return state;
                                                }
                                            }
                                        } else {
                                            /*peek-production-closure*/
                                            /*
                                               94:264 method_definition=>τasync property_name ( unique_formal_parameters ) { • function_body }
                                            */
                                            if(state=$function_statement_list(l,state)){
                                                add_reduce(state,1,120);
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                    /*--unique-id--94--DO-NOT-REPLACE*/
                                                    add_reduce(state,8,146);
                                                    debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                    return state;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    } else if(defined_token_b3658faeba5b21ae(l)/*[get]*/){
        /*peek*/
        /*
           94:261 method_definition=>• τget property_name ( ) { function_body }
           94:267 method_definition=>• τget property_name ( ) { }
           94:269 method_definition=>• property_name ( unique_formal_parameters ) { function_body }
           94:275 method_definition=>• property_name ( ) { function_body }
           94:276 method_definition=>• property_name ( unique_formal_parameters ) { }
           94:279 method_definition=>• property_name ( ) { }
        */
        let pk = l.copy();
        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
        if(pk.utf==40/*[(]*/){
            /*peek-production-closure*/
            /*
               94:269 method_definition=>• property_name ( unique_formal_parameters ) { function_body }
               94:275 method_definition=>• property_name ( ) { function_body }
               94:276 method_definition=>• property_name ( unique_formal_parameters ) { }
               94:279 method_definition=>• property_name ( ) { }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$property_name(l,state)){
                /*assert*/
                /*
                   94:269 method_definition=>• property_name ( unique_formal_parameters ) { function_body }
                   94:275 method_definition=>• property_name ( ) { function_body }
                   94:276 method_definition=>• property_name ( unique_formal_parameters ) { }
                   94:279 method_definition=>• property_name ( ) { }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==40/*[(]*/)){
                    /*consume*/
                    /*
                       94:269 method_definition=>property_name ( • unique_formal_parameters ) { function_body }
                       94:275 method_definition=>property_name ( • ) { function_body }
                       94:276 method_definition=>property_name ( • unique_formal_parameters ) { }
                       94:279 method_definition=>property_name ( • ) { }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(l.utf==41/*[)]*/){
                        /*peek*/
                        /*
                           94:275 method_definition=>property_name ( • ) { function_body }
                           94:279 method_definition=>property_name ( • ) { }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                            /*consume*/
                            /*
                               94:275 method_definition=>property_name ( ) • { function_body }
                               94:279 method_definition=>property_name ( ) • { }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                /*consume*/
                                /*
                                   94:275 method_definition=>property_name ( ) { • function_body }
                                   94:279 method_definition=>property_name ( ) { • }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(l.utf==125/*[}]*/){
                                    /*peek*/
                                    /*
                                       94:275 method_definition=>property_name ( ) { • function_body }
                                       94:279 method_definition=>property_name ( ) { • }
                                    */
                                    let pk = l.copy();
                                    sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                    if(((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(pk)||defined_token_670f23e41126e00b(pk)/*[async] [await] [as]*/)||defined_token_8f5d282f35165648(pk)/*[get]*/)||defined_token_3f0cefcc8fe287e4(pk)/*[set] [super] [switch] [static]*/)||defined_token_c3524ff0dce64492(pk)/*[break]*/)||defined_token_c460df0c19b30757(pk)/*[case] [catch] [class] [const] [continue]*/)||defined_token_0b6f38e897a6033b(pk)/*[debugger] [default] [delete] [do]*/)||defined_token_eb7f69039a78f607(pk)/*[else] [export] [extends]*/)||defined_token_052b4d0bdbf4fcd7(pk)/*[finally] [for] [function] [false] [from]*/)||defined_token_b7730e2b48fe68f8(pk)/*[if] [import] [in] [instanceof] [implements] [interface]*/)||defined_token_99035833d16742d9(pk)/*[new] [null]*/)||defined_token_876f036172605c26(pk)/*[return]*/)||defined_token_9f5e0fa0456f67cf(pk)/*[this] [throw] [try] [typeof] [true] [target]*/)||defined_token_b64c7c58a10dcef3(pk)/*[var] [void]*/)||defined_token_aac16ca323764d7a(pk)/*[while] [with]*/)||defined_token_d8f9d336d83ac87c(pk)/*[yield]*/)||defined_token_dc17de0546cfa0c9(pk)/*[package] [protected] [private] [public]*/)||assert_table(pk,0x0,0x8001484,0x8000000,0x20000000)/*tbl:[ } ] [ * ] [ " ] [ ' ] [ [ ] [ ; ] [ , ]*/)||pk.END())||pk.isNum()/*[num]*/){
                                        /*peek*/
                                        /*
                                           94:279 method_definition=>property_name ( ) { • }
                                        */
                                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                            /*--unique-id--94--DO-NOT-REPLACE*/
                                            add_reduce(state,5,161);
                                            debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                } else {
                                    /*peek-production-closure*/
                                    /*
                                       94:275 method_definition=>property_name ( ) { • function_body }
                                    */
                                    if(state=$function_statement_list(l,state)){
                                        add_reduce(state,1,120);
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                            /*--unique-id--94--DO-NOT-REPLACE*/
                                            add_reduce(state,6,157);
                                            debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                }
                            }
                        }
                    } else {
                        /*peek-production-closure*/
                        /*
                           94:269 method_definition=>property_name ( • unique_formal_parameters ) { function_body }
                           94:276 method_definition=>property_name ( • unique_formal_parameters ) { }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$unique_formal_parameters(l,state)){
                            /*assert*/
                            /*
                               94:269 method_definition=>property_name ( • unique_formal_parameters ) { function_body }
                               94:276 method_definition=>property_name ( • unique_formal_parameters ) { }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                /*consume*/
                                /*
                                   94:269 method_definition=>property_name ( unique_formal_parameters ) • { function_body }
                                   94:276 method_definition=>property_name ( unique_formal_parameters ) • { }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                    /*consume*/
                                    /*
                                       94:269 method_definition=>property_name ( unique_formal_parameters ) { • function_body }
                                       94:276 method_definition=>property_name ( unique_formal_parameters ) { • }
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(l.utf==125/*[}]*/){
                                        /*peek*/
                                        /*
                                           94:269 method_definition=>property_name ( unique_formal_parameters ) { • function_body }
                                           94:276 method_definition=>property_name ( unique_formal_parameters ) { • }
                                        */
                                        let pk = l.copy();
                                        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                        if(((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(pk)||defined_token_670f23e41126e00b(pk)/*[async] [await] [as]*/)||defined_token_8f5d282f35165648(pk)/*[get]*/)||defined_token_3f0cefcc8fe287e4(pk)/*[set] [super] [switch] [static]*/)||defined_token_c3524ff0dce64492(pk)/*[break]*/)||defined_token_c460df0c19b30757(pk)/*[case] [catch] [class] [const] [continue]*/)||defined_token_0b6f38e897a6033b(pk)/*[debugger] [default] [delete] [do]*/)||defined_token_eb7f69039a78f607(pk)/*[else] [export] [extends]*/)||defined_token_052b4d0bdbf4fcd7(pk)/*[finally] [for] [function] [false] [from]*/)||defined_token_b7730e2b48fe68f8(pk)/*[if] [import] [in] [instanceof] [implements] [interface]*/)||defined_token_99035833d16742d9(pk)/*[new] [null]*/)||defined_token_876f036172605c26(pk)/*[return]*/)||defined_token_9f5e0fa0456f67cf(pk)/*[this] [throw] [try] [typeof] [true] [target]*/)||defined_token_b64c7c58a10dcef3(pk)/*[var] [void]*/)||defined_token_aac16ca323764d7a(pk)/*[while] [with]*/)||defined_token_d8f9d336d83ac87c(pk)/*[yield]*/)||defined_token_dc17de0546cfa0c9(pk)/*[package] [protected] [private] [public]*/)||assert_table(pk,0x0,0x8001484,0x8000000,0x20000000)/*tbl:[ } ] [ * ] [ " ] [ ' ] [ [ ] [ ; ] [ , ]*/)||pk.END())||pk.isNum()/*[num]*/){
                                            /*peek*/
                                            /*
                                               94:276 method_definition=>property_name ( unique_formal_parameters ) { • }
                                            */
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--94--DO-NOT-REPLACE*/
                                                add_reduce(state,6,158);
                                                debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    } else {
                                        /*peek-production-closure*/
                                        /*
                                           94:269 method_definition=>property_name ( unique_formal_parameters ) { • function_body }
                                        */
                                        if(state=$function_statement_list(l,state)){
                                            add_reduce(state,1,120);
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--94--DO-NOT-REPLACE*/
                                                add_reduce(state,7,151);
                                                debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } else if((assert_table(pk,0x0,0x94,0x88000000,0x0)/*tbl:[ _ ] [ $ ] [ " ] [ ' ] [ [ ]*/||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
            /*peek*/
            /*
               94:261 method_definition=>• τget property_name ( ) { function_body }
               94:267 method_definition=>• τget property_name ( ) { }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,defined_token_8f5d282f35165648(l)/*[get]*/)){
                /*consume*/
                /*
                   94:261 method_definition=>τget • property_name ( ) { function_body }
                   94:267 method_definition=>τget • property_name ( ) { }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(state=$property_name(l,state)){
                    /*assert*/
                    /*
                       94:261 method_definition=>τget • property_name ( ) { function_body }
                       94:267 method_definition=>τget • property_name ( ) { }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==40/*[(]*/)){
                        /*consume*/
                        /*
                           94:261 method_definition=>τget property_name ( • ) { function_body }
                           94:267 method_definition=>τget property_name ( • ) { }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                            /*consume*/
                            /*
                               94:261 method_definition=>τget property_name ( ) • { function_body }
                               94:267 method_definition=>τget property_name ( ) • { }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                /*consume*/
                                /*
                                   94:261 method_definition=>τget property_name ( ) { • function_body }
                                   94:267 method_definition=>τget property_name ( ) { • }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(l.utf==125/*[}]*/){
                                    /*peek*/
                                    /*
                                       94:261 method_definition=>τget property_name ( ) { • function_body }
                                       94:267 method_definition=>τget property_name ( ) { • }
                                    */
                                    let pk = l.copy();
                                    sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                    if(((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(pk)||defined_token_670f23e41126e00b(pk)/*[async] [await] [as]*/)||defined_token_8f5d282f35165648(pk)/*[get]*/)||defined_token_3f0cefcc8fe287e4(pk)/*[set] [super] [switch] [static]*/)||defined_token_c3524ff0dce64492(pk)/*[break]*/)||defined_token_c460df0c19b30757(pk)/*[case] [catch] [class] [const] [continue]*/)||defined_token_0b6f38e897a6033b(pk)/*[debugger] [default] [delete] [do]*/)||defined_token_eb7f69039a78f607(pk)/*[else] [export] [extends]*/)||defined_token_052b4d0bdbf4fcd7(pk)/*[finally] [for] [function] [false] [from]*/)||defined_token_b7730e2b48fe68f8(pk)/*[if] [import] [in] [instanceof] [implements] [interface]*/)||defined_token_99035833d16742d9(pk)/*[new] [null]*/)||defined_token_876f036172605c26(pk)/*[return]*/)||defined_token_9f5e0fa0456f67cf(pk)/*[this] [throw] [try] [typeof] [true] [target]*/)||defined_token_b64c7c58a10dcef3(pk)/*[var] [void]*/)||defined_token_aac16ca323764d7a(pk)/*[while] [with]*/)||defined_token_d8f9d336d83ac87c(pk)/*[yield]*/)||defined_token_dc17de0546cfa0c9(pk)/*[package] [protected] [private] [public]*/)||assert_table(pk,0x0,0x8001484,0x8000000,0x20000000)/*tbl:[ } ] [ * ] [ " ] [ ' ] [ [ ] [ ; ] [ , ]*/)||pk.END())||pk.isNum()/*[num]*/){
                                        /*peek*/
                                        /*
                                           94:267 method_definition=>τget property_name ( ) { • }
                                        */
                                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                            /*--unique-id--94--DO-NOT-REPLACE*/
                                            add_reduce(state,6,149);
                                            debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                } else {
                                    /*peek-production-closure*/
                                    /*
                                       94:261 method_definition=>τget property_name ( ) { • function_body }
                                    */
                                    if(state=$function_statement_list(l,state)){
                                        add_reduce(state,1,120);
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                            /*--unique-id--94--DO-NOT-REPLACE*/
                                            add_reduce(state,7,143);
                                            debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    } else if(defined_token_6f721474e5bd80e7(l)/*[set]*/){
        /*peek*/
        /*
           94:262 method_definition=>• τset property_name ( property_set_parameter_list ) { function_body }
           94:268 method_definition=>• τset property_name ( property_set_parameter_list ) { }
           94:269 method_definition=>• property_name ( unique_formal_parameters ) { function_body }
           94:275 method_definition=>• property_name ( ) { function_body }
           94:276 method_definition=>• property_name ( unique_formal_parameters ) { }
           94:279 method_definition=>• property_name ( ) { }
        */
        let pk = l.copy();
        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
        if(pk.utf==40/*[(]*/){
            /*peek-production-closure*/
            /*
               94:269 method_definition=>• property_name ( unique_formal_parameters ) { function_body }
               94:275 method_definition=>• property_name ( ) { function_body }
               94:276 method_definition=>• property_name ( unique_formal_parameters ) { }
               94:279 method_definition=>• property_name ( ) { }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$property_name(l,state)){
                /*assert*/
                /*
                   94:269 method_definition=>• property_name ( unique_formal_parameters ) { function_body }
                   94:275 method_definition=>• property_name ( ) { function_body }
                   94:276 method_definition=>• property_name ( unique_formal_parameters ) { }
                   94:279 method_definition=>• property_name ( ) { }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==40/*[(]*/)){
                    /*consume*/
                    /*
                       94:269 method_definition=>property_name ( • unique_formal_parameters ) { function_body }
                       94:275 method_definition=>property_name ( • ) { function_body }
                       94:276 method_definition=>property_name ( • unique_formal_parameters ) { }
                       94:279 method_definition=>property_name ( • ) { }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(l.utf==41/*[)]*/){
                        /*peek*/
                        /*
                           94:275 method_definition=>property_name ( • ) { function_body }
                           94:279 method_definition=>property_name ( • ) { }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                            /*consume*/
                            /*
                               94:275 method_definition=>property_name ( ) • { function_body }
                               94:279 method_definition=>property_name ( ) • { }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                /*consume*/
                                /*
                                   94:275 method_definition=>property_name ( ) { • function_body }
                                   94:279 method_definition=>property_name ( ) { • }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(l.utf==125/*[}]*/){
                                    /*peek*/
                                    /*
                                       94:275 method_definition=>property_name ( ) { • function_body }
                                       94:279 method_definition=>property_name ( ) { • }
                                    */
                                    let pk = l.copy();
                                    sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                    if(((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(pk)||defined_token_670f23e41126e00b(pk)/*[async] [await] [as]*/)||defined_token_8f5d282f35165648(pk)/*[get]*/)||defined_token_3f0cefcc8fe287e4(pk)/*[set] [super] [switch] [static]*/)||defined_token_c3524ff0dce64492(pk)/*[break]*/)||defined_token_c460df0c19b30757(pk)/*[case] [catch] [class] [const] [continue]*/)||defined_token_0b6f38e897a6033b(pk)/*[debugger] [default] [delete] [do]*/)||defined_token_eb7f69039a78f607(pk)/*[else] [export] [extends]*/)||defined_token_052b4d0bdbf4fcd7(pk)/*[finally] [for] [function] [false] [from]*/)||defined_token_b7730e2b48fe68f8(pk)/*[if] [import] [in] [instanceof] [implements] [interface]*/)||defined_token_99035833d16742d9(pk)/*[new] [null]*/)||defined_token_876f036172605c26(pk)/*[return]*/)||defined_token_9f5e0fa0456f67cf(pk)/*[this] [throw] [try] [typeof] [true] [target]*/)||defined_token_b64c7c58a10dcef3(pk)/*[var] [void]*/)||defined_token_aac16ca323764d7a(pk)/*[while] [with]*/)||defined_token_d8f9d336d83ac87c(pk)/*[yield]*/)||defined_token_dc17de0546cfa0c9(pk)/*[package] [protected] [private] [public]*/)||assert_table(pk,0x0,0x8001484,0x8000000,0x20000000)/*tbl:[ } ] [ * ] [ " ] [ ' ] [ [ ] [ ; ] [ , ]*/)||pk.END())||pk.isNum()/*[num]*/){
                                        /*peek*/
                                        /*
                                           94:279 method_definition=>property_name ( ) { • }
                                        */
                                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                            /*--unique-id--94--DO-NOT-REPLACE*/
                                            add_reduce(state,5,161);
                                            debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                } else {
                                    /*peek-production-closure*/
                                    /*
                                       94:275 method_definition=>property_name ( ) { • function_body }
                                    */
                                    if(state=$function_statement_list(l,state)){
                                        add_reduce(state,1,120);
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                            /*--unique-id--94--DO-NOT-REPLACE*/
                                            add_reduce(state,6,157);
                                            debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                }
                            }
                        }
                    } else {
                        /*peek-production-closure*/
                        /*
                           94:269 method_definition=>property_name ( • unique_formal_parameters ) { function_body }
                           94:276 method_definition=>property_name ( • unique_formal_parameters ) { }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$unique_formal_parameters(l,state)){
                            /*assert*/
                            /*
                               94:269 method_definition=>property_name ( • unique_formal_parameters ) { function_body }
                               94:276 method_definition=>property_name ( • unique_formal_parameters ) { }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                /*consume*/
                                /*
                                   94:269 method_definition=>property_name ( unique_formal_parameters ) • { function_body }
                                   94:276 method_definition=>property_name ( unique_formal_parameters ) • { }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                    /*consume*/
                                    /*
                                       94:269 method_definition=>property_name ( unique_formal_parameters ) { • function_body }
                                       94:276 method_definition=>property_name ( unique_formal_parameters ) { • }
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(l.utf==125/*[}]*/){
                                        /*peek*/
                                        /*
                                           94:269 method_definition=>property_name ( unique_formal_parameters ) { • function_body }
                                           94:276 method_definition=>property_name ( unique_formal_parameters ) { • }
                                        */
                                        let pk = l.copy();
                                        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                        if(((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(pk)||defined_token_670f23e41126e00b(pk)/*[async] [await] [as]*/)||defined_token_8f5d282f35165648(pk)/*[get]*/)||defined_token_3f0cefcc8fe287e4(pk)/*[set] [super] [switch] [static]*/)||defined_token_c3524ff0dce64492(pk)/*[break]*/)||defined_token_c460df0c19b30757(pk)/*[case] [catch] [class] [const] [continue]*/)||defined_token_0b6f38e897a6033b(pk)/*[debugger] [default] [delete] [do]*/)||defined_token_eb7f69039a78f607(pk)/*[else] [export] [extends]*/)||defined_token_052b4d0bdbf4fcd7(pk)/*[finally] [for] [function] [false] [from]*/)||defined_token_b7730e2b48fe68f8(pk)/*[if] [import] [in] [instanceof] [implements] [interface]*/)||defined_token_99035833d16742d9(pk)/*[new] [null]*/)||defined_token_876f036172605c26(pk)/*[return]*/)||defined_token_9f5e0fa0456f67cf(pk)/*[this] [throw] [try] [typeof] [true] [target]*/)||defined_token_b64c7c58a10dcef3(pk)/*[var] [void]*/)||defined_token_aac16ca323764d7a(pk)/*[while] [with]*/)||defined_token_d8f9d336d83ac87c(pk)/*[yield]*/)||defined_token_dc17de0546cfa0c9(pk)/*[package] [protected] [private] [public]*/)||assert_table(pk,0x0,0x8001484,0x8000000,0x20000000)/*tbl:[ } ] [ * ] [ " ] [ ' ] [ [ ] [ ; ] [ , ]*/)||pk.END())||pk.isNum()/*[num]*/){
                                            /*peek*/
                                            /*
                                               94:276 method_definition=>property_name ( unique_formal_parameters ) { • }
                                            */
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--94--DO-NOT-REPLACE*/
                                                add_reduce(state,6,158);
                                                debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    } else {
                                        /*peek-production-closure*/
                                        /*
                                           94:269 method_definition=>property_name ( unique_formal_parameters ) { • function_body }
                                        */
                                        if(state=$function_statement_list(l,state)){
                                            add_reduce(state,1,120);
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--94--DO-NOT-REPLACE*/
                                                add_reduce(state,7,151);
                                                debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } else if((assert_table(pk,0x0,0x94,0x88000000,0x0)/*tbl:[ _ ] [ $ ] [ " ] [ ' ] [ [ ]*/||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
            /*peek*/
            /*
               94:262 method_definition=>• τset property_name ( property_set_parameter_list ) { function_body }
               94:268 method_definition=>• τset property_name ( property_set_parameter_list ) { }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,defined_token_5bca542dce980d9c(l)/*[set]*/)){
                /*consume*/
                /*
                   94:262 method_definition=>τset • property_name ( property_set_parameter_list ) { function_body }
                   94:268 method_definition=>τset • property_name ( property_set_parameter_list ) { }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(state=$property_name(l,state)){
                    /*assert*/
                    /*
                       94:262 method_definition=>τset • property_name ( property_set_parameter_list ) { function_body }
                       94:268 method_definition=>τset • property_name ( property_set_parameter_list ) { }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==40/*[(]*/)){
                        /*consume*/
                        /*
                           94:262 method_definition=>τset property_name ( • property_set_parameter_list ) { function_body }
                           94:268 method_definition=>τset property_name ( • property_set_parameter_list ) { }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$property_set_parameter_list(l,state)){
                            /*assert*/
                            /*
                               94:262 method_definition=>τset property_name ( • property_set_parameter_list ) { function_body }
                               94:268 method_definition=>τset property_name ( • property_set_parameter_list ) { }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                /*consume*/
                                /*
                                   94:262 method_definition=>τset property_name ( property_set_parameter_list ) • { function_body }
                                   94:268 method_definition=>τset property_name ( property_set_parameter_list ) • { }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                    /*consume*/
                                    /*
                                       94:262 method_definition=>τset property_name ( property_set_parameter_list ) { • function_body }
                                       94:268 method_definition=>τset property_name ( property_set_parameter_list ) { • }
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(l.utf==125/*[}]*/){
                                        /*peek*/
                                        /*
                                           94:262 method_definition=>τset property_name ( property_set_parameter_list ) { • function_body }
                                           94:268 method_definition=>τset property_name ( property_set_parameter_list ) { • }
                                        */
                                        let pk = l.copy();
                                        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                        if(((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(pk)||defined_token_670f23e41126e00b(pk)/*[async] [await] [as]*/)||defined_token_8f5d282f35165648(pk)/*[get]*/)||defined_token_3f0cefcc8fe287e4(pk)/*[set] [super] [switch] [static]*/)||defined_token_c3524ff0dce64492(pk)/*[break]*/)||defined_token_c460df0c19b30757(pk)/*[case] [catch] [class] [const] [continue]*/)||defined_token_0b6f38e897a6033b(pk)/*[debugger] [default] [delete] [do]*/)||defined_token_eb7f69039a78f607(pk)/*[else] [export] [extends]*/)||defined_token_052b4d0bdbf4fcd7(pk)/*[finally] [for] [function] [false] [from]*/)||defined_token_b7730e2b48fe68f8(pk)/*[if] [import] [in] [instanceof] [implements] [interface]*/)||defined_token_99035833d16742d9(pk)/*[new] [null]*/)||defined_token_876f036172605c26(pk)/*[return]*/)||defined_token_9f5e0fa0456f67cf(pk)/*[this] [throw] [try] [typeof] [true] [target]*/)||defined_token_b64c7c58a10dcef3(pk)/*[var] [void]*/)||defined_token_aac16ca323764d7a(pk)/*[while] [with]*/)||defined_token_d8f9d336d83ac87c(pk)/*[yield]*/)||defined_token_dc17de0546cfa0c9(pk)/*[package] [protected] [private] [public]*/)||assert_table(pk,0x0,0x8001484,0x8000000,0x20000000)/*tbl:[ } ] [ * ] [ " ] [ ' ] [ [ ] [ ; ] [ , ]*/)||pk.END())||pk.isNum()/*[num]*/){
                                            /*peek*/
                                            /*
                                               94:268 method_definition=>τset property_name ( property_set_parameter_list ) { • }
                                            */
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--94--DO-NOT-REPLACE*/
                                                add_reduce(state,7,150);
                                                debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    } else {
                                        /*peek-production-closure*/
                                        /*
                                           94:262 method_definition=>τset property_name ( property_set_parameter_list ) { • function_body }
                                        */
                                        if(state=$function_statement_list(l,state)){
                                            add_reduce(state,1,120);
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--94--DO-NOT-REPLACE*/
                                                add_reduce(state,8,144);
                                                debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    } else if(l.utf==42/*[*]*/){
        /*peek-production-closure*/
        /*
           94:263 method_definition=>• yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { function_body }
           94:270 method_definition=>• yield_expression_group_0143_115 property_name ( ) { function_body }
           94:271 method_definition=>• yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { }
           94:277 method_definition=>• yield_expression_group_0143_115 property_name ( ) { }
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$yield_expression_group_0143_115(l,state)){
            /*assert*/
            /*
               94:263 method_definition=>• yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { function_body }
               94:270 method_definition=>• yield_expression_group_0143_115 property_name ( ) { function_body }
               94:271 method_definition=>• yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { }
               94:277 method_definition=>• yield_expression_group_0143_115 property_name ( ) { }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$property_name(l,state)){
                /*assert*/
                /*
                   94:263 method_definition=>yield_expression_group_0143_115 • property_name ( unique_formal_parameters ) { function_body }
                   94:270 method_definition=>yield_expression_group_0143_115 • property_name ( ) { function_body }
                   94:271 method_definition=>yield_expression_group_0143_115 • property_name ( unique_formal_parameters ) { }
                   94:277 method_definition=>yield_expression_group_0143_115 • property_name ( ) { }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==40/*[(]*/)){
                    /*consume*/
                    /*
                       94:263 method_definition=>yield_expression_group_0143_115 property_name ( • unique_formal_parameters ) { function_body }
                       94:270 method_definition=>yield_expression_group_0143_115 property_name ( • ) { function_body }
                       94:271 method_definition=>yield_expression_group_0143_115 property_name ( • unique_formal_parameters ) { }
                       94:277 method_definition=>yield_expression_group_0143_115 property_name ( • ) { }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(l.utf==41/*[)]*/){
                        /*peek*/
                        /*
                           94:270 method_definition=>yield_expression_group_0143_115 property_name ( • ) { function_body }
                           94:277 method_definition=>yield_expression_group_0143_115 property_name ( • ) { }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                            /*consume*/
                            /*
                               94:270 method_definition=>yield_expression_group_0143_115 property_name ( ) • { function_body }
                               94:277 method_definition=>yield_expression_group_0143_115 property_name ( ) • { }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                /*consume*/
                                /*
                                   94:270 method_definition=>yield_expression_group_0143_115 property_name ( ) { • function_body }
                                   94:277 method_definition=>yield_expression_group_0143_115 property_name ( ) { • }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(l.utf==125/*[}]*/){
                                    /*peek*/
                                    /*
                                       94:270 method_definition=>yield_expression_group_0143_115 property_name ( ) { • function_body }
                                       94:277 method_definition=>yield_expression_group_0143_115 property_name ( ) { • }
                                    */
                                    let pk = l.copy();
                                    sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                    if(((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(pk)||defined_token_670f23e41126e00b(pk)/*[async] [await] [as]*/)||defined_token_8f5d282f35165648(pk)/*[get]*/)||defined_token_3f0cefcc8fe287e4(pk)/*[set] [super] [switch] [static]*/)||defined_token_c3524ff0dce64492(pk)/*[break]*/)||defined_token_c460df0c19b30757(pk)/*[case] [catch] [class] [const] [continue]*/)||defined_token_0b6f38e897a6033b(pk)/*[debugger] [default] [delete] [do]*/)||defined_token_eb7f69039a78f607(pk)/*[else] [export] [extends]*/)||defined_token_052b4d0bdbf4fcd7(pk)/*[finally] [for] [function] [false] [from]*/)||defined_token_b7730e2b48fe68f8(pk)/*[if] [import] [in] [instanceof] [implements] [interface]*/)||defined_token_99035833d16742d9(pk)/*[new] [null]*/)||defined_token_876f036172605c26(pk)/*[return]*/)||defined_token_9f5e0fa0456f67cf(pk)/*[this] [throw] [try] [typeof] [true] [target]*/)||defined_token_b64c7c58a10dcef3(pk)/*[var] [void]*/)||defined_token_aac16ca323764d7a(pk)/*[while] [with]*/)||defined_token_d8f9d336d83ac87c(pk)/*[yield]*/)||defined_token_dc17de0546cfa0c9(pk)/*[package] [protected] [private] [public]*/)||assert_table(pk,0x0,0x8001484,0x8000000,0x20000000)/*tbl:[ } ] [ * ] [ " ] [ ' ] [ [ ] [ ; ] [ , ]*/)||pk.END())||pk.isNum()/*[num]*/){
                                        /*peek*/
                                        /*
                                           94:277 method_definition=>yield_expression_group_0143_115 property_name ( ) { • }
                                        */
                                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                            /*--unique-id--94--DO-NOT-REPLACE*/
                                            add_reduce(state,6,159);
                                            debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                } else {
                                    /*peek-production-closure*/
                                    /*
                                       94:270 method_definition=>yield_expression_group_0143_115 property_name ( ) { • function_body }
                                    */
                                    if(state=$function_statement_list(l,state)){
                                        add_reduce(state,1,120);
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                            /*--unique-id--94--DO-NOT-REPLACE*/
                                            add_reduce(state,7,152);
                                            debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                }
                            }
                        }
                    } else {
                        /*peek-production-closure*/
                        /*
                           94:263 method_definition=>yield_expression_group_0143_115 property_name ( • unique_formal_parameters ) { function_body }
                           94:271 method_definition=>yield_expression_group_0143_115 property_name ( • unique_formal_parameters ) { }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$unique_formal_parameters(l,state)){
                            /*assert*/
                            /*
                               94:263 method_definition=>yield_expression_group_0143_115 property_name ( • unique_formal_parameters ) { function_body }
                               94:271 method_definition=>yield_expression_group_0143_115 property_name ( • unique_formal_parameters ) { }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                /*consume*/
                                /*
                                   94:263 method_definition=>yield_expression_group_0143_115 property_name ( unique_formal_parameters ) • { function_body }
                                   94:271 method_definition=>yield_expression_group_0143_115 property_name ( unique_formal_parameters ) • { }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                    /*consume*/
                                    /*
                                       94:263 method_definition=>yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { • function_body }
                                       94:271 method_definition=>yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { • }
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(l.utf==125/*[}]*/){
                                        /*peek*/
                                        /*
                                           94:263 method_definition=>yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { • function_body }
                                           94:271 method_definition=>yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { • }
                                        */
                                        let pk = l.copy();
                                        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                        if(((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(pk)||defined_token_670f23e41126e00b(pk)/*[async] [await] [as]*/)||defined_token_8f5d282f35165648(pk)/*[get]*/)||defined_token_3f0cefcc8fe287e4(pk)/*[set] [super] [switch] [static]*/)||defined_token_c3524ff0dce64492(pk)/*[break]*/)||defined_token_c460df0c19b30757(pk)/*[case] [catch] [class] [const] [continue]*/)||defined_token_0b6f38e897a6033b(pk)/*[debugger] [default] [delete] [do]*/)||defined_token_eb7f69039a78f607(pk)/*[else] [export] [extends]*/)||defined_token_052b4d0bdbf4fcd7(pk)/*[finally] [for] [function] [false] [from]*/)||defined_token_b7730e2b48fe68f8(pk)/*[if] [import] [in] [instanceof] [implements] [interface]*/)||defined_token_99035833d16742d9(pk)/*[new] [null]*/)||defined_token_876f036172605c26(pk)/*[return]*/)||defined_token_9f5e0fa0456f67cf(pk)/*[this] [throw] [try] [typeof] [true] [target]*/)||defined_token_b64c7c58a10dcef3(pk)/*[var] [void]*/)||defined_token_aac16ca323764d7a(pk)/*[while] [with]*/)||defined_token_d8f9d336d83ac87c(pk)/*[yield]*/)||defined_token_dc17de0546cfa0c9(pk)/*[package] [protected] [private] [public]*/)||assert_table(pk,0x0,0x8001484,0x8000000,0x20000000)/*tbl:[ } ] [ * ] [ " ] [ ' ] [ [ ] [ ; ] [ , ]*/)||pk.END())||pk.isNum()/*[num]*/){
                                            /*peek*/
                                            /*
                                               94:271 method_definition=>yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { • }
                                            */
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--94--DO-NOT-REPLACE*/
                                                add_reduce(state,7,153);
                                                debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    } else {
                                        /*peek-production-closure*/
                                        /*
                                           94:263 method_definition=>yield_expression_group_0143_115 property_name ( unique_formal_parameters ) { • function_body }
                                        */
                                        if(state=$function_statement_list(l,state)){
                                            add_reduce(state,1,120);
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--94--DO-NOT-REPLACE*/
                                                add_reduce(state,8,145);
                                                debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    } else {
        /*peek-production-closure*/
        /*
           94:269 method_definition=>• property_name ( unique_formal_parameters ) { function_body }
           94:275 method_definition=>• property_name ( ) { function_body }
           94:276 method_definition=>• property_name ( unique_formal_parameters ) { }
           94:279 method_definition=>• property_name ( ) { }
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$property_name(l,state)){
            /*assert*/
            /*
               94:269 method_definition=>• property_name ( unique_formal_parameters ) { function_body }
               94:275 method_definition=>• property_name ( ) { function_body }
               94:276 method_definition=>• property_name ( unique_formal_parameters ) { }
               94:279 method_definition=>• property_name ( ) { }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,l.utf==40/*[(]*/)){
                /*consume*/
                /*
                   94:269 method_definition=>property_name ( • unique_formal_parameters ) { function_body }
                   94:275 method_definition=>property_name ( • ) { function_body }
                   94:276 method_definition=>property_name ( • unique_formal_parameters ) { }
                   94:279 method_definition=>property_name ( • ) { }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(l.utf==41/*[)]*/){
                    /*peek*/
                    /*
                       94:275 method_definition=>property_name ( • ) { function_body }
                       94:279 method_definition=>property_name ( • ) { }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==41/*[)]*/)){
                        /*consume*/
                        /*
                           94:275 method_definition=>property_name ( ) • { function_body }
                           94:279 method_definition=>property_name ( ) • { }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==123/*[{]*/)){
                            /*consume*/
                            /*
                               94:275 method_definition=>property_name ( ) { • function_body }
                               94:279 method_definition=>property_name ( ) { • }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(l.utf==125/*[}]*/){
                                /*peek*/
                                /*
                                   94:275 method_definition=>property_name ( ) { • function_body }
                                   94:279 method_definition=>property_name ( ) { • }
                                */
                                let pk = l.copy();
                                sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                if(((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(pk)||defined_token_670f23e41126e00b(pk)/*[async] [await] [as]*/)||defined_token_8f5d282f35165648(pk)/*[get]*/)||defined_token_3f0cefcc8fe287e4(pk)/*[set] [super] [switch] [static]*/)||defined_token_c3524ff0dce64492(pk)/*[break]*/)||defined_token_c460df0c19b30757(pk)/*[case] [catch] [class] [const] [continue]*/)||defined_token_0b6f38e897a6033b(pk)/*[debugger] [default] [delete] [do]*/)||defined_token_eb7f69039a78f607(pk)/*[else] [export] [extends]*/)||defined_token_052b4d0bdbf4fcd7(pk)/*[finally] [for] [function] [false] [from]*/)||defined_token_b7730e2b48fe68f8(pk)/*[if] [import] [in] [instanceof] [implements] [interface]*/)||defined_token_99035833d16742d9(pk)/*[new] [null]*/)||defined_token_876f036172605c26(pk)/*[return]*/)||defined_token_9f5e0fa0456f67cf(pk)/*[this] [throw] [try] [typeof] [true] [target]*/)||defined_token_b64c7c58a10dcef3(pk)/*[var] [void]*/)||defined_token_aac16ca323764d7a(pk)/*[while] [with]*/)||defined_token_d8f9d336d83ac87c(pk)/*[yield]*/)||defined_token_dc17de0546cfa0c9(pk)/*[package] [protected] [private] [public]*/)||assert_table(pk,0x0,0x8001484,0x8000000,0x20000000)/*tbl:[ } ] [ * ] [ " ] [ ' ] [ [ ] [ ; ] [ , ]*/)||pk.END())||pk.isNum()/*[num]*/){
                                    /*peek*/
                                    /*
                                       94:279 method_definition=>property_name ( ) { • }
                                    */
                                    if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                        /*--unique-id--94--DO-NOT-REPLACE*/
                                        add_reduce(state,5,161);
                                        debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                        return state;
                                    }
                                }
                            } else {
                                /*peek-production-closure*/
                                /*
                                   94:275 method_definition=>property_name ( ) { • function_body }
                                */
                                if(state=$function_statement_list(l,state)){
                                    add_reduce(state,1,120);
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                        /*--unique-id--94--DO-NOT-REPLACE*/
                                        add_reduce(state,6,157);
                                        debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                        return state;
                                    }
                                }
                            }
                        }
                    }
                } else {
                    /*peek-production-closure*/
                    /*
                       94:269 method_definition=>property_name ( • unique_formal_parameters ) { function_body }
                       94:276 method_definition=>property_name ( • unique_formal_parameters ) { }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$unique_formal_parameters(l,state)){
                        /*assert*/
                        /*
                           94:269 method_definition=>property_name ( • unique_formal_parameters ) { function_body }
                           94:276 method_definition=>property_name ( • unique_formal_parameters ) { }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                            /*consume*/
                            /*
                               94:269 method_definition=>property_name ( unique_formal_parameters ) • { function_body }
                               94:276 method_definition=>property_name ( unique_formal_parameters ) • { }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                /*consume*/
                                /*
                                   94:269 method_definition=>property_name ( unique_formal_parameters ) { • function_body }
                                   94:276 method_definition=>property_name ( unique_formal_parameters ) { • }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(l.utf==125/*[}]*/){
                                    /*peek*/
                                    /*
                                       94:269 method_definition=>property_name ( unique_formal_parameters ) { • function_body }
                                       94:276 method_definition=>property_name ( unique_formal_parameters ) { • }
                                    */
                                    let pk = l.copy();
                                    sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                    if(((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(pk)||defined_token_670f23e41126e00b(pk)/*[async] [await] [as]*/)||defined_token_8f5d282f35165648(pk)/*[get]*/)||defined_token_3f0cefcc8fe287e4(pk)/*[set] [super] [switch] [static]*/)||defined_token_c3524ff0dce64492(pk)/*[break]*/)||defined_token_c460df0c19b30757(pk)/*[case] [catch] [class] [const] [continue]*/)||defined_token_0b6f38e897a6033b(pk)/*[debugger] [default] [delete] [do]*/)||defined_token_eb7f69039a78f607(pk)/*[else] [export] [extends]*/)||defined_token_052b4d0bdbf4fcd7(pk)/*[finally] [for] [function] [false] [from]*/)||defined_token_b7730e2b48fe68f8(pk)/*[if] [import] [in] [instanceof] [implements] [interface]*/)||defined_token_99035833d16742d9(pk)/*[new] [null]*/)||defined_token_876f036172605c26(pk)/*[return]*/)||defined_token_9f5e0fa0456f67cf(pk)/*[this] [throw] [try] [typeof] [true] [target]*/)||defined_token_b64c7c58a10dcef3(pk)/*[var] [void]*/)||defined_token_aac16ca323764d7a(pk)/*[while] [with]*/)||defined_token_d8f9d336d83ac87c(pk)/*[yield]*/)||defined_token_dc17de0546cfa0c9(pk)/*[package] [protected] [private] [public]*/)||assert_table(pk,0x0,0x8001484,0x8000000,0x20000000)/*tbl:[ } ] [ * ] [ " ] [ ' ] [ [ ] [ ; ] [ , ]*/)||pk.END())||pk.isNum()/*[num]*/){
                                        /*peek*/
                                        /*
                                           94:276 method_definition=>property_name ( unique_formal_parameters ) { • }
                                        */
                                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                            /*--unique-id--94--DO-NOT-REPLACE*/
                                            add_reduce(state,6,158);
                                            debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                } else {
                                    /*peek-production-closure*/
                                    /*
                                       94:269 method_definition=>property_name ( unique_formal_parameters ) { • function_body }
                                    */
                                    if(state=$function_statement_list(l,state)){
                                        add_reduce(state,1,120);
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                            /*--unique-id--94--DO-NOT-REPLACE*/
                                            add_reduce(state,7,151);
                                            debug_stack.push({ name:"method_definition RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    debug_stack.push({ name:"method_definition RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: property_set_parameter_list
            grammar index: 95
            bodies:
	95:280 property_set_parameter_list=>• formal_parameter - 
            compile time: 1.475ms*/;
function $property_set_parameter_list(l,state){
    debug_stack.push({ name:"property_set_parameter_list RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$binding_element(l,state)){
        /*--unique-id--95--DO-NOT-REPLACE*/
        debug_stack.push({ name:"property_set_parameter_list RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"property_set_parameter_list RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: expression
            grammar index: 96
            bodies:
	96:281 expression=>• expression , assignment_expression - 
		96:282 expression=>• assignment_expression - 
            compile time: 1558.295ms*/;
function $expression(l,state){
    debug_stack.push({ name:"expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$assignment_expression(l,state)){
        /*--unique-id--96--DO-NOT-REPLACE*/
        return $expression_goto(l,state,96);
    }
    debug_stack.push({ name:"expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $expression_goto(l,state,prod){
    debug_stack.push({ name:"expression GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(l.utf==44/*[,]*/){
            /*peek*/
            /*
               96:281 expression=>expression • , assignment_expression
               137:419 cover_parenthesized_expression_and_arrow_parameter_list=>( expression • , )
               137:422 cover_parenthesized_expression_and_arrow_parameter_list=>( expression • , cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
               137:423 cover_parenthesized_expression_and_arrow_parameter_list=>( expression • , cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if((((defined_token_6d4f77707d3e0e5a(pk)/*[++]*/||defined_token_f2ef34011f64cef0(pk)/*[--]*/)||assert_table(pk,0x0,0xa996,0x88000000,0x48000001)/*tbl:[ + ] [ - ] [ ~ ] [ ! ] [ _ ] [ $ ] [ ( ] [ " ] [ ' ] [ [ ] [ { ] [ / ] [ ` ]*/)||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
                /*peek*/
                /*
                   96:281 expression=>expression • , assignment_expression
                */
                if(assert_consume(l,state,l.utf==44/*[,]*/)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$assignment_expression(l,state)){
                        /*--unique-id--96--DO-NOT-REPLACE*/
                        add_reduce(state,3,162);
                        prod = 96;
                        continue;
                    }
                }
            }
        }
        break;
    }
    debug_stack.push({ name:"expression GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==96);
}
/*production name: left_hand_side_expression
            grammar index: 97
            bodies:
	97:283 left_hand_side_expression=>• new_expression - 
		97:284 left_hand_side_expression=>• call_expression - 
		97:285 left_hand_side_expression=>• optional_expression - 
            compile time: 537.741ms*/;
function $left_hand_side_expression(l,state){
    debug_stack.push({ name:"left_hand_side_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if((assert_table(l,0x0,0x8194,0x88000000,0x8000001)/*tbl:[ _ ] [ $ ] [ " ] [ ' ] [ [ ] [ { ] [ / ] [ ` ] [ ( ]*/||l.isID()/*[id]*/)||l.isNum()/*[num]*/){
        /*peek*/
        /*
           97:283 left_hand_side_expression=>• new_expression
           97:284 left_hand_side_expression=>• call_expression
           97:285 left_hand_side_expression=>• optional_expression
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,defined_token_57e43262d833cfeb(l)/*[this]*/)){
            /*consume*/
            /*
               113:331 primary_expression=>τthis •
            */
            /*--unique-id--99--DO-NOT-REPLACE*/
            add_reduce(state,1,180);
            return $left_hand_side_expression_goto(l,state,99);
        } else if(defined_token_e1e77579dc125345(l)/*[async]*/){
            /*peek*/
            /*
               189:545 unreserved_word=>• τasync
               74:196 function_expression=>• τasync τfunction * binding_identifier ( formal_parameters ) { function_body }
               74:198 function_expression=>• τasync τfunction binding_identifier ( formal_parameters ) { function_body }
               74:199 function_expression=>• τasync τfunction * ( formal_parameters ) { function_body }
               74:200 function_expression=>• τasync τfunction * binding_identifier ( ) { function_body }
               74:204 function_expression=>• τasync τfunction ( formal_parameters ) { function_body }
               74:205 function_expression=>• τasync τfunction binding_identifier ( ) { function_body }
               74:206 function_expression=>• τasync τfunction * ( ) { function_body }
               74:210 function_expression=>• τasync τfunction ( ) { function_body }
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(defined_token_e043e2118bdadad0(pk)/*[function]*/){
                /*assert-production-closure*/
                /*
                   74:196 function_expression=>• τasync τfunction * binding_identifier ( formal_parameters ) { function_body }
                */
                if(state=$function_expression(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $left_hand_side_expression_goto(l,state,99);
                }
            } else {
                /*peek-production-closure*/
                /*
                   189:545 unreserved_word=>• τasync
                */
                if(state=$unreserved_word(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    add_reduce(state,1,255);
                    add_reduce(state,1,254);
                    return $left_hand_side_expression_goto(l,state,99);
                }
            }
        } else if(assert_consume(l,state,defined_token_6fe6f90f8fe15dd0(l)/*[null]*/)){
            /*consume*/
            /*
               182:534 null_literal=>τnull •
            */
            /*--unique-id--99--DO-NOT-REPLACE*/
            add_reduce(state,1,251);
            return $left_hand_side_expression_goto(l,state,99);
        } else if(l.utf==34/*["]*/){
            /*peek*/
            /*
               177:521 string_literal=>• " string_literal_HC_listbody1_121 "
               177:523 string_literal=>• " "
            */
            let pk = l.copy();
            sk_78c208d4d792ec90(pk.next()/*[ 6 ]*/);
            if((((pk.isID()/*[id]*/||pk.isNL()/*[nl]*/)||pk.isNum()/*[num]*/)||pk.isSym()/*[sym]*/)||pk.isSP()/*[ws]*/){
                /*peek-production-closure*/
                /*
                   177:521 string_literal=>• " string_literal_HC_listbody1_121 "
                   177:523 string_literal=>• " "
                */
                if(state=$string_literal(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $left_hand_side_expression_goto(l,state,99);
                }
            }
        } else if(l.utf==39/*[']*/){
            /*peek*/
            /*
               177:522 string_literal=>• ' string_literal_HC_listbody1_122 '
               177:524 string_literal=>• ' '
            */
            let pk = l.copy();
            sk_78c208d4d792ec90(pk.next()/*[ 6 ]*/);
            if((((pk.isID()/*[id]*/||pk.isNL()/*[nl]*/)||pk.isNum()/*[num]*/)||pk.isSym()/*[sym]*/)||pk.isSP()/*[ws]*/){
                /*peek-production-closure*/
                /*
                   177:522 string_literal=>• ' string_literal_HC_listbody1_122 '
                   177:524 string_literal=>• ' '
                */
                if(state=$string_literal(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $left_hand_side_expression_goto(l,state,99);
                }
            }
        } else if(l.utf==91/*[[]*/){
            /*peek*/
            /*
               160:479 array_literal=>• [ elision ]
               160:480 array_literal=>• [ element_list ]
               160:481 array_literal=>• [ element_list , elision ]
               160:482 array_literal=>• [ ]
               160:483 array_literal=>• [ element_list , ]
            */
            if(state=$array_literal(l,state)){
                /*--unique-id--99--DO-NOT-REPLACE*/
                return $left_hand_side_expression_goto(l,state,99);
            }
        } else if(l.utf==123/*[{]*/){
            /*peek*/
            /*
               152:461 object_literal=>• { }
               152:462 object_literal=>• { property_definition_list , }
               152:463 object_literal=>• { property_definition_list }
            */
            if(state=$object_literal(l,state)){
                /*--unique-id--99--DO-NOT-REPLACE*/
                return $left_hand_side_expression_goto(l,state,99);
            }
        } else if(defined_token_e043e2118bdadad0(l)/*[function]*/){
            /*peek*/
            /*
               74:197 function_expression=>• τfunction * binding_identifier ( formal_parameters ) { function_body }
               74:201 function_expression=>• τfunction binding_identifier ( formal_parameters ) { function_body }
               74:202 function_expression=>• τfunction * ( formal_parameters ) { function_body }
               74:203 function_expression=>• τfunction * binding_identifier ( ) { function_body }
               74:207 function_expression=>• τfunction ( formal_parameters ) { function_body }
               74:208 function_expression=>• τfunction binding_identifier ( ) { function_body }
               74:209 function_expression=>• τfunction * ( ) { function_body }
               74:211 function_expression=>• τfunction ( ) { function_body }
            */
            if(state=$function_expression(l,state)){
                /*--unique-id--99--DO-NOT-REPLACE*/
                return $left_hand_side_expression_goto(l,state,99);
            }
        } else if(defined_token_2d05a4070a3ebcf4(l)/*[class]*/){
            /*peek*/
            /*
               90:245 class_expression=>• τclass binding_identifier class_heritage { class_body }
               90:246 class_expression=>• τclass class_heritage { class_body }
               90:247 class_expression=>• τclass binding_identifier { class_body }
               90:248 class_expression=>• τclass binding_identifier class_heritage { }
               90:249 class_expression=>• τclass { class_body }
               90:250 class_expression=>• τclass class_heritage { }
               90:251 class_expression=>• τclass binding_identifier { }
               90:252 class_expression=>• τclass { }
            */
            if(state=$class_expression(l,state)){
                /*--unique-id--99--DO-NOT-REPLACE*/
                return $left_hand_side_expression_goto(l,state,99);
            }
        } else if(l.utf==47/*[/]*/){
            /*assert-production-closure*/
            /*
               150:458 regular_expression_literal=>• / / def$js_identifier
            */
            if(state=$regular_expression_literal(l,state)){
                /*--unique-id--99--DO-NOT-REPLACE*/
                return $left_hand_side_expression_goto(l,state,99);
            }
        } else if(l.utf==96/*[`]*/){
            /*peek*/
            /*
               165:497 no_substitute_template=>• ` `
               169:503 template_head=>• ` ${
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(pk.utf==96/*[`]*/){
                /*peek-production-closure*/
                /*
                   165:497 no_substitute_template=>• ` `
                */
                if(state=$no_substitute_template(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $left_hand_side_expression_goto(l,state,99);
                }
            } else {
                /*peek-production-closure*/
                /*
                   169:503 template_head=>• ` ${
                */
                if(state=$template_head(l,state)){
                    /*--unique-id--169--DO-NOT-REPLACE*/
                    return $left_hand_side_expression_goto(l,state,169);
                }
            }
        } else if(assert_consume(l,state,l.utf==40/*[(]*/)){
            /*consume*/
            /*
               138:425 parenthesized=>( • expression )
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$expression(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    add_reduce(state,3,204);
                    add_reduce(state,1,181);
                    return $left_hand_side_expression_goto(l,state,99);
                }
            }
        } else if(defined_token_79b82aa5b55f0605(l)/*[new]*/){
            /*peek*/
            /*
               99:294 member_expression=>• τnew member_expression arguments
               103:300 new_target=>• τnew . τtarget
               98:287 new_expression=>• τnew new_expression
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(pk.utf==46/*[.]*/){
                /*peek-production-closure*/
                /*
                   103:300 new_target=>• τnew . τtarget
                */
                if(state=$new_target(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $left_hand_side_expression_goto(l,state,99);
                }
            } else if((assert_table(pk,0x0,0x8194,0x88000000,0x8000001)/*tbl:[ _ ] [ $ ] [ " ] [ ' ] [ [ ] [ { ] [ / ] [ ` ] [ ( ]*/||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
                /*peek*/
                /*
                   99:294 member_expression=>• τnew member_expression arguments
                   98:287 new_expression=>• τnew new_expression
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_79b82aa5b55f0605(l)/*[new]*/)){
                    /*consume*/
                    /*
                       99:294 member_expression=>τnew • member_expression arguments
                       98:287 new_expression=>τnew • new_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if((assert_table(l,0x0,0x8194,0x88000000,0x8000001)/*tbl:[ _ ] [ $ ] [ " ] [ ' ] [ [ ] [ { ] [ / ] [ ` ] [ ( ]*/||l.isID()/*[id]*/)||l.isNum()/*[num]*/){
                        /*peek*/
                        /*
                           99:294 member_expression=>τnew • member_expression arguments
                           98:287 new_expression=>τnew • new_expression
                        */
                        let mk = mark();
                        let anchor = l.copy();
                        let anchor_state = state;
                        /*294,3,1,287,2,1*/
                        /*99*/
                        if(state=$member_expression(l,state)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$arguments(l,state)){
                                /*--unique-id--99--DO-NOT-REPLACE*/
                                add_reduce(state,3,167);
                                return $left_hand_side_expression_goto(l,state,99);
                            }
                        }
                        /*294,3,1,287,2,1*/
                        state = reset(mk,anchor,l,anchor_state);
                        if(state=$new_expression(l,state)){
                            /*--unique-id--97--DO-NOT-REPLACE*/
                            add_reduce(state,2,163);
                            return $left_hand_side_expression_goto(l,state,97);
                        }
                    }
                }
            }
        } else if(defined_token_8fdd5a50d81134d2(l)/*[super]*/){
            /*peek*/
            /*
               100:295 super_property=>• τsuper . identifier_name
               100:296 super_property=>• τsuper [ expression ]
               105:308 super_call=>• τsuper arguments
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(pk.utf==40/*[(]*/){
                /*peek-production-closure*/
                /*
                   105:308 super_call=>• τsuper arguments
                */
                if(state=$super_call(l,state)){
                    /*--unique-id--104--DO-NOT-REPLACE*/
                    return $left_hand_side_expression_goto(l,state,104);
                }
            } else {
                /*peek-production-closure*/
                /*
                   100:295 super_property=>• τsuper . identifier_name
                   100:296 super_property=>• τsuper [ expression ]
                */
                if(state=$super_property(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $left_hand_side_expression_goto(l,state,99);
                }
            }
        } else if(defined_token_2ed685dc4925cfa4(l)/*[import]*/){
            /*peek*/
            /*
               102:299 import_meta=>• τimport . τmeta
               106:309 import_call=>• τimport ( assignment_expression )
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(pk.utf==46/*[.]*/){
                /*peek-production-closure*/
                /*
                   102:299 import_meta=>• τimport . τmeta
                */
                if(state=$import_meta(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $left_hand_side_expression_goto(l,state,99);
                }
            } else {
                /*peek-production-closure*/
                /*
                   106:309 import_call=>• τimport ( assignment_expression )
                */
                if(state=$import_call(l,state)){
                    /*--unique-id--104--DO-NOT-REPLACE*/
                    return $left_hand_side_expression_goto(l,state,104);
                }
            }
        } else if(assert_consume(l,state,defined_token_99376be254728810(l)/*[true]*/||defined_token_57da255105f722f9(l)/*[false]*/)){
            /*consume*/
            /*
               183:535 boolean_literal=>τtrue •
               183:536 boolean_literal=>τfalse •
            */
            /*--unique-id--99--DO-NOT-REPLACE*/
            add_reduce(state,1,252);
            return $left_hand_side_expression_goto(l,state,99);
        } else if(assert_consume(l,state,((((def$js_id_symbols_tok_b3199095c9facd2b(l)||defined_token_8f5d282f35165648(l)/*[get]*/)||defined_token_5bca542dce980d9c(l)/*[set]*/)||defined_token_1cb42c7dd41b3a7e(l)/*[target]*/)||defined_token_fcc8b8fe09802878(l)/*[as]*/)||defined_token_14469127dc9c2c1f(l)/*[from]*/)){
            /*consume*/
            /*
               225:688 def$js_identifier=>tk:def$js_id_symbols •
               189:546 unreserved_word=>τget •
               189:547 unreserved_word=>τset •
               189:548 unreserved_word=>τtarget •
               189:549 unreserved_word=>τas •
               189:550 unreserved_word=>τfrom •
            */
            /*--unique-id--99--DO-NOT-REPLACE*/
            add_reduce(state,1,255);
            add_reduce(state,1,254);
            return $left_hand_side_expression_goto(l,state,99);
        } else if(l.isNum()/*[num]*/){
            /*peek*/
            /*
               181:533 numeric_literal=>• θnum
               180:532 bigint=>• θnum τn
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(pk.utf==110/*[n]*/){
                /*peek-production-closure*/
                /*
                   180:532 bigint=>• θnum τn
                */
                if(state=$bigint(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $left_hand_side_expression_goto(l,state,99);
                }
            } else {
                /*peek-production-closure*/
                /*
                   181:533 numeric_literal=>• θnum
                */
                if(state=$numeric_literal(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $left_hand_side_expression_goto(l,state,99);
                }
            }
        }
    }
    debug_stack.push({ name:"left_hand_side_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $left_hand_side_expression_goto(l,state,prod){
    debug_stack.push({ name:"left_hand_side_expression GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        switch(prod){
            case 99:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==91/*[[]*/)){
                    /*consume*/
                    /*
                       99:289 member_expression=>member_expression [ • expression ]
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$expression(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==93/*[]]*/)){
                            /*--unique-id--99--DO-NOT-REPLACE*/
                            add_reduce(state,4,164);
                            prod = 99;
                            continue;
                        }
                    }
                } else if(assert_consume(l,state,l.utf==46/*[.]*/)){
                    /*consume*/
                    /*
                       99:290 member_expression=>member_expression . • identifier_name
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$identifier_name(l,state)){
                        /*--unique-id--99--DO-NOT-REPLACE*/
                        add_reduce(state,3,165);
                        prod = 99;
                        continue;
                    }
                } else if(l.utf==96/*[`]*/){
                    /*peek-production-closure*/
                    /*
                       99:291 member_expression=>member_expression • template_literal
                    */
                    if(state=$template_literal(l,state)){
                        /*--unique-id--99--DO-NOT-REPLACE*/
                        add_reduce(state,2,166);
                        prod = 99;
                        continue;
                    }
                } else if(l.utf==40/*[(]*/){
                    /*peek-production-closure*/
                    /*
                       88:236 cover_call_expression_and_async_arrow_head=>member_expression • arguments
                    */
                    if(state=$arguments(l,state)){
                        /*--unique-id--104--DO-NOT-REPLACE*/
                        add_reduce(state,2,129);
                        prod = 104;
                        continue;
                    }
                } else if(defined_token_675b48fc93d1800c(l)/*[?.]*/){
                    /*peek-production-closure*/
                    /*
                       111:320 optional_expression=>member_expression • optional_chain
                    */
                    if(state=$optional_chain(l,state)){
                        /*--unique-id--111--DO-NOT-REPLACE*/
                        add_reduce(state,2,179);
                        prod = 111;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       98:286 new_expression=>member_expression •
                    */
                    /*--unique-id--97--DO-NOT-REPLACE*/
                    prod = 97;
                    continue;
                }
                break;
            case 104:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==46/*[.]*/)){
                    /*consume*/
                    /*
                       104:301 call_expression=>call_expression . • identifier_name
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$identifier_name(l,state)){
                        /*--unique-id--104--DO-NOT-REPLACE*/
                        add_reduce(state,3,165);
                        prod = 104;
                        continue;
                    }
                } else if(l.utf==40/*[(]*/){
                    /*peek-production-closure*/
                    /*
                       104:304 call_expression=>call_expression • arguments
                    */
                    if(state=$arguments(l,state)){
                        /*--unique-id--104--DO-NOT-REPLACE*/
                        add_reduce(state,2,172);
                        prod = 104;
                        continue;
                    }
                } else if(assert_consume(l,state,l.utf==91/*[[]*/)){
                    /*consume*/
                    /*
                       104:305 call_expression=>call_expression [ • expression ]
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$expression(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==93/*[]]*/)){
                            /*--unique-id--104--DO-NOT-REPLACE*/
                            add_reduce(state,4,164);
                            prod = 104;
                            continue;
                        }
                    }
                } else if(l.utf==96/*[`]*/){
                    /*peek-production-closure*/
                    /*
                       104:307 call_expression=>call_expression • template_literal
                    */
                    if(state=$template_literal(l,state)){
                        /*--unique-id--104--DO-NOT-REPLACE*/
                        add_reduce(state,2,173);
                        prod = 104;
                        continue;
                    }
                } else if(defined_token_675b48fc93d1800c(l)/*[?.]*/){
                    /*peek-production-closure*/
                    /*
                       111:321 optional_expression=>call_expression • optional_chain
                    */
                    if(state=$optional_chain(l,state)){
                        /*--unique-id--111--DO-NOT-REPLACE*/
                        add_reduce(state,2,179);
                        prod = 111;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       97:284 left_hand_side_expression=>call_expression •
                    */
                    /*--unique-id--97--DO-NOT-REPLACE*/
                    prod = 97;
                    continue;
                }
                break;
            case 111:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(defined_token_675b48fc93d1800c(l)/*[?.]*/){
                    /*assert-production-closure*/
                    /*
                       111:322 optional_expression=>optional_expression • optional_chain
                    */
                    if(state=$optional_chain(l,state)){
                        /*--unique-id--111--DO-NOT-REPLACE*/
                        add_reduce(state,2,179);
                        prod = 111;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       97:285 left_hand_side_expression=>optional_expression •
                    */
                    /*--unique-id--97--DO-NOT-REPLACE*/
                    prod = 97;
                    continue;
                }
                break;
            case 169:
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(l)||defined_token_d8f9d336d83ac87c(l)/*[yield]*/)||defined_token_670f23e41126e00b(l)/*[async] [as] [await]*/)||defined_token_99035833d16742d9(l)/*[new] [null]*/)||defined_token_d38e0913b811b457(l)/*[super] [set]*/)||defined_token_2ed685dc4925cfa4(l)/*[import]*/)||defined_token_ca53d8e93addfaf5(l)/*[this] [target] [true] [typeof]*/)||defined_token_7b465f3c7dd55e63(l)/*[function] [from] [false]*/)||defined_token_2d05a4070a3ebcf4(l)/*[class]*/)||defined_token_8f5d282f35165648(l)/*[get]*/)||defined_token_8ed5fb4bce429503(l)/*[delete]*/)||defined_token_042ea6dc9657ee07(l)/*[void]*/)||defined_token_6d4f77707d3e0e5a(l)/*[++]*/)||defined_token_f2ef34011f64cef0(l)/*[--]*/)||assert_table(l,0x0,0xa986,0x8000000,0x48000001)/*tbl:[ ( ] [ [ ] [ { ] [ / ] [ " ] [ ' ] [ ` ] [ + ] [ - ] [ ~ ] [ ! ]*/)||l.isNum()/*[num]*/){
                    /*assert-production-closure*/
                    /*
                       166:498 substitute_template=>template_head • expression template_spans
                    */
                    if(state=$expression(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$template_spans(l,state)){
                            /*--unique-id--99--DO-NOT-REPLACE*/
                            add_reduce(state,3,239);
                            prod = 99;
                            continue;
                        }
                    }
                }
                break;
        }
        break;
    }
    debug_stack.push({ name:"left_hand_side_expression GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==97);
}
/*production name: new_expression
            grammar index: 98
            bodies:
	98:286 new_expression=>• member_expression - 
		98:287 new_expression=>• τnew new_expression - 
            compile time: 280.601ms*/;
function $new_expression(l,state){
    debug_stack.push({ name:"new_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(defined_token_294408de292fd7e1(l)/*[new]*/){
        /*peek*/
        /*
           98:286 new_expression=>• member_expression
           98:287 new_expression=>• τnew new_expression
        */
        let pk = l.copy();
        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
        if(pk.utf==46/*[.]*/){
            /*peek-production-closure*/
            /*
               98:286 new_expression=>• member_expression
            */
            if(state=$member_expression(l,state)){
                /*--unique-id--98--DO-NOT-REPLACE*/
                return $new_expression_goto(l,state,98);
            }
        } else if((assert_table(pk,0x0,0x8194,0x88000000,0x8000001)/*tbl:[ _ ] [ $ ] [ " ] [ ' ] [ [ ] [ { ] [ / ] [ ` ] [ ( ]*/||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
            /*peek*/
            /*
               98:286 new_expression=>• member_expression
               98:287 new_expression=>• τnew new_expression
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,defined_token_79b82aa5b55f0605(l)/*[new]*/)){
                /*consume*/
                /*
                   99:294 member_expression=>τnew • member_expression arguments
                   98:287 new_expression=>τnew • new_expression
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if((assert_table(l,0x0,0x8194,0x88000000,0x8000001)/*tbl:[ _ ] [ $ ] [ " ] [ ' ] [ [ ] [ { ] [ / ] [ ` ] [ ( ]*/||l.isID()/*[id]*/)||l.isNum()/*[num]*/){
                    /*peek*/
                    /*
                       99:294 member_expression=>τnew • member_expression arguments
                       98:287 new_expression=>τnew • new_expression
                    */
                    let mk = mark();
                    let anchor = l.copy();
                    let anchor_state = state;
                    /*294,3,1,287,2,1*/
                    /*99*/
                    if(state=$member_expression(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$arguments(l,state)){
                            /*--unique-id--99--DO-NOT-REPLACE*/
                            add_reduce(state,3,167);
                            return $new_expression_goto(l,state,99);
                        }
                    }
                    /*294,3,1,287,2,1*/
                    state = reset(mk,anchor,l,anchor_state);
                    if(state=$new_expression(l,state)){
                        /*--unique-id--98--DO-NOT-REPLACE*/
                        add_reduce(state,2,163);
                        return $new_expression_goto(l,state,98);
                    }
                }
            }
        }
    } else {
        /*peek-production-closure*/
        /*
           98:286 new_expression=>• member_expression
        */
        if(state=$member_expression(l,state)){
            /*--unique-id--98--DO-NOT-REPLACE*/
            return $new_expression_goto(l,state,98);
        }
    }
    debug_stack.push({ name:"new_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $new_expression_goto(l,state,prod){
    debug_stack.push({ name:"new_expression GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==91/*[[]*/)){
            /*consume*/
            /*
               99:289 member_expression=>member_expression [ • expression ]
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$expression(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==93/*[]]*/)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    add_reduce(state,4,164);
                    prod = 99;
                    continue;
                }
            }
        } else if(assert_consume(l,state,l.utf==46/*[.]*/)){
            /*consume*/
            /*
               99:290 member_expression=>member_expression . • identifier_name
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$identifier_name(l,state)){
                /*--unique-id--99--DO-NOT-REPLACE*/
                add_reduce(state,3,165);
                prod = 99;
                continue;
            }
        } else if(l.utf==96/*[`]*/){
            /*peek-production-closure*/
            /*
               99:291 member_expression=>member_expression • template_literal
            */
            if(state=$template_literal(l,state)){
                /*--unique-id--99--DO-NOT-REPLACE*/
                add_reduce(state,2,166);
                prod = 99;
                continue;
            }
        } else {
            /*assert-end*/
            /*
               98:286 new_expression=>member_expression •
            */
            /*--unique-id--98--DO-NOT-REPLACE*/
            prod = 98;
            continue;
        }
        break;
    }
    debug_stack.push({ name:"new_expression GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==98);
}
/*production name: member_expression
            grammar index: 99
            bodies:
	99:288 member_expression=>• primary_expression - 
		99:289 member_expression=>• member_expression [ expression ] - 
		99:290 member_expression=>• member_expression . identifier_name - 
		99:291 member_expression=>• member_expression template_literal - 
		99:292 member_expression=>• super_property - 
		99:293 member_expression=>• meta_property - 
		99:294 member_expression=>• τnew member_expression arguments - 
            compile time: 29.238ms*/;
function $member_expression(l,state){
    debug_stack.push({ name:"member_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(defined_token_cb1a40816016c1ec(l)/*[super]*/){
        /*peek-production-closure*/
        /*
           99:292 member_expression=>• super_property
        */
        if(state=$super_property(l,state)){
            /*--unique-id--99--DO-NOT-REPLACE*/
            return $member_expression_goto(l,state,99);
        }
    } else if(defined_token_294408de292fd7e1(l)/*[new]*/){
        /*peek*/
        /*
           99:293 member_expression=>• meta_property
           99:294 member_expression=>• τnew member_expression arguments
        */
        let pk = l.copy();
        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
        if(pk.utf==46/*[.]*/){
            /*peek-production-closure*/
            /*
               99:293 member_expression=>• meta_property
            */
            if(state=$meta_property(l,state)){
                /*--unique-id--99--DO-NOT-REPLACE*/
                return $member_expression_goto(l,state,99);
            }
        } else {
            /*peek-production-closure*/
            /*
               99:294 member_expression=>• τnew member_expression arguments
            */
            if(assert_consume(l,state,defined_token_79b82aa5b55f0605(l)/*[new]*/)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(state=$member_expression(l,state)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$arguments(l,state)){
                        /*--unique-id--99--DO-NOT-REPLACE*/
                        add_reduce(state,3,167);
                        return $member_expression_goto(l,state,99);
                    }
                }
            }
        }
    } else if(defined_token_2408972de31435b0(l)/*[import]*/){
        /*peek-production-closure*/
        /*
           99:293 member_expression=>• meta_property
        */
        if(state=$meta_property(l,state)){
            /*--unique-id--99--DO-NOT-REPLACE*/
            return $member_expression_goto(l,state,99);
        }
    } else {
        /*peek-production-closure*/
        /*
           99:288 member_expression=>• primary_expression
        */
        if(state=$primary_expression(l,state)){
            /*--unique-id--99--DO-NOT-REPLACE*/
            return $member_expression_goto(l,state,99);
        }
    }
    debug_stack.push({ name:"member_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $member_expression_goto(l,state,prod){
    debug_stack.push({ name:"member_expression GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(non_capture_bde7550a3d6b8d46(l)/*[nl]*/){
            return state;
        }
        if(assert_consume(l,state,l.utf==91/*[[]*/)){
            /*consume*/
            /*
               99:289 member_expression=>member_expression [ • expression ]
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$expression(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==93/*[]]*/)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    add_reduce(state,4,164);
                    prod = 99;
                    continue;
                }
            }
        } else if(assert_consume(l,state,l.utf==46/*[.]*/)){
            /*consume*/
            /*
               99:290 member_expression=>member_expression . • identifier_name
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$identifier_name(l,state)){
                /*--unique-id--99--DO-NOT-REPLACE*/
                add_reduce(state,3,165);
                prod = 99;
                continue;
            }
        } else if(l.utf==96/*[`]*/){
            /*peek-production-closure*/
            /*
               99:291 member_expression=>member_expression • template_literal
            */
            if(state=$template_literal(l,state)){
                /*--unique-id--99--DO-NOT-REPLACE*/
                add_reduce(state,2,166);
                prod = 99;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"member_expression GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==99);
}
/*production name: super_property
            grammar index: 100
            bodies:
	100:295 super_property=>• τsuper . identifier_name - 
		100:296 super_property=>• τsuper [ expression ] - 
            compile time: 9.795ms*/;
function $super_property(l,state){
    debug_stack.push({ name:"super_property RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_8fdd5a50d81134d2(l)/*[super]*/)){
        /*consume*/
        /*
           100:295 super_property=>τsuper • . identifier_name
           100:296 super_property=>τsuper • [ expression ]
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==46/*[.]*/)){
            /*consume*/
            /*
               100:295 super_property=>τsuper . • identifier_name
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$identifier_name(l,state)){
                /*--unique-id--100--DO-NOT-REPLACE*/
                add_reduce(state,3,168);
                debug_stack.push({ name:"super_property RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else if(assert_consume(l,state,l.utf==91/*[[]*/)){
            /*consume*/
            /*
               100:296 super_property=>τsuper [ • expression ]
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$expression(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==93/*[]]*/)){
                    /*--unique-id--100--DO-NOT-REPLACE*/
                    add_reduce(state,4,169);
                    debug_stack.push({ name:"super_property RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        }
    }
    debug_stack.push({ name:"super_property RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: meta_property
            grammar index: 101
            bodies:
	101:297 meta_property=>• new_target - 
		101:298 meta_property=>• import_meta - 
            compile time: 1.339ms*/;
function $meta_property(l,state){
    debug_stack.push({ name:"meta_property RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(defined_token_79b82aa5b55f0605(l)/*[new]*/){
        /*peek-production-closure*/
        /*
           101:297 meta_property=>• new_target
        */
        if(state=$new_target(l,state)){
            /*--unique-id--101--DO-NOT-REPLACE*/
            debug_stack.push({ name:"meta_property RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           101:298 meta_property=>• import_meta
        */
        if(state=$import_meta(l,state)){
            /*--unique-id--101--DO-NOT-REPLACE*/
            debug_stack.push({ name:"meta_property RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"meta_property RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: import_meta
            grammar index: 102
            bodies:
	102:299 import_meta=>• τimport . τmeta - 
            compile time: 2.356ms*/;
function $import_meta(l,state){
    debug_stack.push({ name:"import_meta RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_2ed685dc4925cfa4(l)/*[import]*/)){
        /*consume*/
        /*
           102:299 import_meta=>τimport • . τmeta
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==46/*[.]*/)){
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,defined_token_7a48bf3a46a95de4(l)/*[meta]*/)){
                /*--unique-id--102--DO-NOT-REPLACE*/
                add_reduce(state,3,170);
                debug_stack.push({ name:"import_meta RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    }
    debug_stack.push({ name:"import_meta RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: new_target
            grammar index: 103
            bodies:
	103:300 new_target=>• τnew . τtarget - 
            compile time: 3.104ms*/;
function $new_target(l,state){
    debug_stack.push({ name:"new_target RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_79b82aa5b55f0605(l)/*[new]*/)){
        /*consume*/
        /*
           103:300 new_target=>τnew • . τtarget
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==46/*[.]*/)){
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,defined_token_1cb42c7dd41b3a7e(l)/*[target]*/)){
                /*--unique-id--103--DO-NOT-REPLACE*/
                add_reduce(state,3,171);
                debug_stack.push({ name:"new_target RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    }
    debug_stack.push({ name:"new_target RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: super_call
            grammar index: 105
            bodies:
	105:308 super_call=>• τsuper arguments - 
            compile time: 7.741ms*/;
function $super_call(l,state){
    debug_stack.push({ name:"super_call RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_8fdd5a50d81134d2(l)/*[super]*/)){
        /*consume*/
        /*
           105:308 super_call=>τsuper • arguments
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$arguments(l,state)){
            /*--unique-id--105--DO-NOT-REPLACE*/
            add_reduce(state,2,174);
            debug_stack.push({ name:"super_call RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"super_call RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: import_call
            grammar index: 106
            bodies:
	106:309 import_call=>• τimport ( assignment_expression ) - 
            compile time: 3.156ms*/;
function $import_call(l,state){
    debug_stack.push({ name:"import_call RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_2ed685dc4925cfa4(l)/*[import]*/)){
        /*consume*/
        /*
           106:309 import_call=>τimport • ( assignment_expression )
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==40/*[(]*/)){
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$assignment_expression(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                    /*--unique-id--106--DO-NOT-REPLACE*/
                    add_reduce(state,4,175);
                    debug_stack.push({ name:"import_call RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        }
    }
    debug_stack.push({ name:"import_call RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: arguments
            grammar index: 107
            bodies:
	107:310 arguments=>• ( argument_list , ) - 
		107:311 arguments=>• ( , ) - 
		107:312 arguments=>• ( argument_list ) - 
		107:313 arguments=>• ( ) - 
            compile time: 165.242ms*/;
function $arguments(l,state){
    debug_stack.push({ name:"arguments RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==40/*[(]*/)){
        /*consume*/
        /*
           107:310 arguments=>( • argument_list , )
           107:311 arguments=>( • , )
           107:312 arguments=>( • argument_list )
           107:313 arguments=>( • )
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==44/*[,]*/)){
            /*consume*/
            /*
               107:311 arguments=>( , • )
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                /*--unique-id--107--DO-NOT-REPLACE*/
                add_reduce(state,3,177);
                debug_stack.push({ name:"arguments RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else if(assert_consume(l,state,l.utf==41/*[)]*/)){
            /*consume*/
            /*
               107:313 arguments=>( ) •
            */
            /*--unique-id--107--DO-NOT-REPLACE*/
            add_reduce(state,2,177);
            debug_stack.push({ name:"arguments RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        } else {
            /*peek-production-closure*/
            /*
               107:310 arguments=>( • argument_list , )
               107:312 arguments=>( • argument_list )
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$argument_list(l,state)){
                /*assert*/
                /*
                   107:310 arguments=>( • argument_list , )
                   107:312 arguments=>( • argument_list )
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==44/*[,]*/)){
                    /*consume*/
                    /*
                       107:310 arguments=>( argument_list , • )
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==41/*[)]*/)){
                        /*--unique-id--107--DO-NOT-REPLACE*/
                        add_reduce(state,4,176);
                        debug_stack.push({ name:"arguments RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                } else if(assert_consume(l,state,l.utf==41/*[)]*/)){
                    /*consume*/
                    /*
                       107:312 arguments=>( argument_list ) •
                    */
                    /*--unique-id--107--DO-NOT-REPLACE*/
                    add_reduce(state,3,176);
                    debug_stack.push({ name:"arguments RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        }
    }
    debug_stack.push({ name:"arguments RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: argument_list_group_1196_116
            grammar index: 108
            bodies:
	108:314 argument_list_group_1196_116=>• assignment_expression - 
		108:315 argument_list_group_1196_116=>• ... assignment_expression - 
            compile time: 17.344ms*/;
function $argument_list_group_1196_116(l,state){
    debug_stack.push({ name:"argument_list_group_1196_116 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_f47f6de2d28c24e5(l)/*[...]*/)){
        /*consume*/
        /*
           108:315 argument_list_group_1196_116=>... • assignment_expression
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$assignment_expression(l,state)){
            /*--unique-id--108--DO-NOT-REPLACE*/
            add_reduce(state,2,178);
            debug_stack.push({ name:"argument_list_group_1196_116 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           108:314 argument_list_group_1196_116=>• assignment_expression
        */
        if(state=$assignment_expression(l,state)){
            /*--unique-id--108--DO-NOT-REPLACE*/
            debug_stack.push({ name:"argument_list_group_1196_116 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"argument_list_group_1196_116 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: argument_list
            grammar index: 110
            bodies:
	110:318 argument_list=>• argument_list , argument_list_group_1196_116 - 
		110:319 argument_list=>• argument_list_group_1196_116 - 
            compile time: 21.063ms*/;
function $argument_list(l,state){
    debug_stack.push({ name:"argument_list RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$argument_list_group_1196_116(l,state)){
        /*--unique-id--110--DO-NOT-REPLACE*/
        add_reduce(state,1,4);
        return $argument_list_goto(l,state,110);
    }
    debug_stack.push({ name:"argument_list RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $argument_list_goto(l,state,prod){
    debug_stack.push({ name:"argument_list GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(l.utf==44/*[,]*/){
            /*peek*/
            /*
               110:318 argument_list=>argument_list • , argument_list_group_1196_116
               107:310 arguments=>( argument_list • , )
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(((((defined_token_6d4f77707d3e0e5a(pk)/*[++]*/||defined_token_f2ef34011f64cef0(pk)/*[--]*/)||defined_token_f47f6de2d28c24e5(pk)/*[...]*/)||assert_table(pk,0x0,0xa996,0x88000000,0x48000001)/*tbl:[ + ] [ - ] [ ~ ] [ ! ] [ _ ] [ $ ] [ ( ] [ " ] [ ' ] [ [ ] [ { ] [ / ] [ ` ]*/)||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
                /*peek*/
                /*
                   110:318 argument_list=>argument_list • , argument_list_group_1196_116
                */
                if(assert_consume(l,state,l.utf==44/*[,]*/)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$argument_list_group_1196_116(l,state)){
                        /*--unique-id--110--DO-NOT-REPLACE*/
                        add_reduce(state,3,11);
                        prod = 110;
                        continue;
                    }
                }
            }
        }
        break;
    }
    debug_stack.push({ name:"argument_list GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==110);
}
/*production name: optional_chain
            grammar index: 112
            bodies:
	112:323 optional_chain=>• ?. arguments - 
		112:324 optional_chain=>• ?. [ expression ] - 
		112:325 optional_chain=>• ?. identifier_name - 
		112:326 optional_chain=>• ?. template_literal - 
		112:327 optional_chain=>• optional_chain arguments - 
		112:328 optional_chain=>• optional_chain [ expression ] - 
		112:329 optional_chain=>• optional_chain . identifier_name - 
		112:330 optional_chain=>• optional_chain template_literal - 
            compile time: 27.866ms*/;
function $optional_chain(l,state){
    debug_stack.push({ name:"optional_chain RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_3eff041ba9fc8573(l)/*[?.]*/)){
        /*consume*/
        /*
           112:323 optional_chain=>?. • arguments
           112:324 optional_chain=>?. • [ expression ]
           112:325 optional_chain=>?. • identifier_name
           112:326 optional_chain=>?. • template_literal
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(l.utf==40/*[(]*/){
            /*peek-production-closure*/
            /*
               112:323 optional_chain=>?. • arguments
            */
            if(state=$arguments(l,state)){
                /*--unique-id--112--DO-NOT-REPLACE*/
                add_reduce(state,2,0);
                return $optional_chain_goto(l,state,112);
            }
        } else if(assert_consume(l,state,l.utf==91/*[[]*/)){
            /*consume*/
            /*
               112:324 optional_chain=>?. [ • expression ]
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$expression(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==93/*[]]*/)){
                    /*--unique-id--112--DO-NOT-REPLACE*/
                    add_reduce(state,4,0);
                    return $optional_chain_goto(l,state,112);
                }
            }
        } else if(l.utf==96/*[`]*/){
            /*peek-production-closure*/
            /*
               112:326 optional_chain=>?. • template_literal
            */
            if(state=$template_literal(l,state)){
                /*--unique-id--112--DO-NOT-REPLACE*/
                add_reduce(state,2,0);
                return $optional_chain_goto(l,state,112);
            }
        } else {
            /*peek-production-closure*/
            /*
               112:325 optional_chain=>?. • identifier_name
            */
            if(state=$identifier_name(l,state)){
                /*--unique-id--112--DO-NOT-REPLACE*/
                add_reduce(state,2,0);
                return $optional_chain_goto(l,state,112);
            }
        }
    }
    debug_stack.push({ name:"optional_chain RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $optional_chain_goto(l,state,prod){
    debug_stack.push({ name:"optional_chain GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(non_capture_bde7550a3d6b8d46(l)/*[nl]*/){
            return state;
        }
        if(l.utf==40/*[(]*/){
            /*peek-production-closure*/
            /*
               112:327 optional_chain=>optional_chain • arguments
            */
            if(state=$arguments(l,state)){
                /*--unique-id--112--DO-NOT-REPLACE*/
                add_reduce(state,2,172);
                prod = 112;
                continue;
            }
        } else if(assert_consume(l,state,l.utf==91/*[[]*/)){
            /*consume*/
            /*
               112:328 optional_chain=>optional_chain [ • expression ]
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$expression(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==93/*[]]*/)){
                    /*--unique-id--112--DO-NOT-REPLACE*/
                    add_reduce(state,4,164);
                    prod = 112;
                    continue;
                }
            }
        } else if(assert_consume(l,state,l.utf==46/*[.]*/)){
            /*consume*/
            /*
               112:329 optional_chain=>optional_chain . • identifier_name
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$identifier_name(l,state)){
                /*--unique-id--112--DO-NOT-REPLACE*/
                add_reduce(state,3,165);
                prod = 112;
                continue;
            }
        } else if(l.utf==96/*[`]*/){
            /*peek-production-closure*/
            /*
               112:330 optional_chain=>optional_chain • template_literal
            */
            if(state=$template_literal(l,state)){
                /*--unique-id--112--DO-NOT-REPLACE*/
                add_reduce(state,2,166);
                prod = 112;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"optional_chain GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==112);
}
/*production name: primary_expression
            grammar index: 113
            bodies:
	113:331 primary_expression=>• τthis - 
		113:332 primary_expression=>• identifier_reference - 
		113:333 primary_expression=>• literal - 
		113:334 primary_expression=>• array_literal - 
		113:335 primary_expression=>• object_literal - 
		113:336 primary_expression=>• function_expression - 
		113:337 primary_expression=>• class_expression - 
		113:338 primary_expression=>• regular_expression_literal - 
		113:339 primary_expression=>• template_literal - 
		113:340 primary_expression=>• parenthesized - 
            compile time: 28.372ms*/;
function $primary_expression(l,state){
    debug_stack.push({ name:"primary_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_9c56be6039102106(l)/*[this]*/)){
        /*consume*/
        /*
           113:331 primary_expression=>τthis •
        */
        /*--unique-id--113--DO-NOT-REPLACE*/
        add_reduce(state,1,180);
        debug_stack.push({ name:"primary_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    } else if(defined_token_172adec61d2dc160(l)/*[async]*/){
        /*peek*/
        /*
           113:332 primary_expression=>• identifier_reference
           113:336 primary_expression=>• function_expression
        */
        let pk = l.copy();
        sk_532e3acfd819c8d6(pk.next()/*[ ws ][ 6 ]*/);
        if(defined_token_e043e2118bdadad0(pk)/*[function]*/){
            /*peek-production-closure*/
            /*
               113:336 primary_expression=>• function_expression
            */
            if(state=$function_expression(l,state)){
                /*--unique-id--113--DO-NOT-REPLACE*/
                debug_stack.push({ name:"primary_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else {
            /*peek-production-closure*/
            /*
               113:332 primary_expression=>• identifier_reference
            */
            if(state=$identifier(l,state)){
                /*--unique-id--113--DO-NOT-REPLACE*/
                add_reduce(state,1,254);
                debug_stack.push({ name:"primary_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    } else if(l.utf==91/*[[]*/){
        /*peek-production-closure*/
        /*
           113:334 primary_expression=>• array_literal
        */
        if(state=$array_literal(l,state)){
            /*--unique-id--113--DO-NOT-REPLACE*/
            debug_stack.push({ name:"primary_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else if(l.utf==123/*[{]*/){
        /*peek-production-closure*/
        /*
           113:335 primary_expression=>• object_literal
        */
        if(state=$object_literal(l,state)){
            /*--unique-id--113--DO-NOT-REPLACE*/
            debug_stack.push({ name:"primary_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else if(defined_token_aa9a90ddc84fac92(l)/*[function]*/){
        /*peek-production-closure*/
        /*
           113:336 primary_expression=>• function_expression
        */
        if(state=$function_expression(l,state)){
            /*--unique-id--113--DO-NOT-REPLACE*/
            debug_stack.push({ name:"primary_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else if(defined_token_7865c7b5645d7910(l)/*[class]*/){
        /*peek-production-closure*/
        /*
           113:337 primary_expression=>• class_expression
        */
        if(state=$class_expression(l,state)){
            /*--unique-id--113--DO-NOT-REPLACE*/
            debug_stack.push({ name:"primary_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else if(l.utf==47/*[/]*/){
        /*peek-production-closure*/
        /*
           113:338 primary_expression=>• regular_expression_literal
        */
        if(state=$regular_expression_literal(l,state)){
            /*--unique-id--113--DO-NOT-REPLACE*/
            debug_stack.push({ name:"primary_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else if(l.utf==96/*[`]*/){
        /*peek-production-closure*/
        /*
           113:339 primary_expression=>• template_literal
        */
        if(state=$template_literal(l,state)){
            /*--unique-id--113--DO-NOT-REPLACE*/
            debug_stack.push({ name:"primary_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else if(l.utf==40/*[(]*/){
        /*peek-production-closure*/
        /*
           113:340 primary_expression=>• parenthesized
        */
        if(state=$parenthesized(l,state)){
            /*--unique-id--113--DO-NOT-REPLACE*/
            add_reduce(state,1,181);
            debug_stack.push({ name:"primary_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else if(((((defined_token_3592049377da822b(l)/*[true]*/||defined_token_57193d8fefd013e4(l)/*[false]*/)||defined_token_96ff725e67a4b342(l)/*[null]*/)||(l.utf==34/*["]*/))||(l.utf==39/*[']*/))||l.isNum()/*[num]*/){
        /*peek-production-closure*/
        /*
           113:333 primary_expression=>• literal
        */
        if(state=$literal(l,state)){
            /*--unique-id--113--DO-NOT-REPLACE*/
            debug_stack.push({ name:"primary_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           113:332 primary_expression=>• identifier_reference
        */
        if(state=$identifier(l,state)){
            /*--unique-id--113--DO-NOT-REPLACE*/
            add_reduce(state,1,254);
            debug_stack.push({ name:"primary_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"primary_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: await_expression
            grammar index: 114
            bodies:
	114:341 await_expression=>• τawait unary_expression - 
            compile time: 3.344ms*/;
function $await_expression(l,state){
    debug_stack.push({ name:"await_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_ded0f96a7228c7c5(l)/*[await]*/)){
        /*consume*/
        /*
           114:341 await_expression=>τawait • unary_expression
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$unary_expression(l,state)){
            /*--unique-id--114--DO-NOT-REPLACE*/
            add_reduce(state,2,182);
            debug_stack.push({ name:"await_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"await_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: assignment_expression
            grammar index: 115
            bodies:
	115:342 assignment_expression=>• conditional_expression - 
		115:343 assignment_expression=>• yield_expression - 
		115:344 assignment_expression=>• arrow_function - 
		115:345 assignment_expression=>• left_hand_side_expression = assignment_expression - 
		115:346 assignment_expression=>• left_hand_side_expression assignment_operator assignment_expression - 
            compile time: 728.213ms*/;
function $assignment_expression(l,state){
    debug_stack.push({ name:"assignment_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(defined_token_172adec61d2dc160(l)/*[async]*/){
        /*peek*/
        /*
           115:342 assignment_expression=>• conditional_expression
           115:344 assignment_expression=>• arrow_function
           115:345 assignment_expression=>• left_hand_side_expression = assignment_expression
           115:346 assignment_expression=>• left_hand_side_expression assignment_operator assignment_expression
        */
        let pk = l.copy();
        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
        if(defined_token_aa9a90ddc84fac92(pk)/*[function]*/){
            /*assert-production-closure*/
            /*
               74:196 function_expression=>• τasync τfunction * binding_identifier ( formal_parameters ) { function_body }
            */
            if(state=$function_expression(l,state)){
                /*--unique-id--99--DO-NOT-REPLACE*/
                return $assignment_expression_goto(l,state,99);
            }
        } else if((((((((((((((defined_token_f5b15d408b6280ad(pk)/*[?.] [??]*/||defined_token_7330fb2be3dc26eb(pk)/*[++] [+=]*/)||defined_token_8c647931e6bf0c07(pk)/*[--] [-=]*/)||defined_token_37edf5ebc00dbfe6(pk)/*[/=]*/)||defined_token_2c342d130718e813(pk)/*[%=]*/)||defined_token_318c95b1e64de46d(pk)/*[<<=] [<<] [<=]*/)||defined_token_3be2267a053f0395(pk)/*[>>=] [>>>=] [>>] [>>>] [>=]*/)||defined_token_c7d7983a743dfb89(pk)/*[&=]*/)||defined_token_8c2d44d7057fe753(pk)/*[^=]*/)||defined_token_d1de557e71993f67(pk)/*[|=] [||]*/)||defined_token_485338d34f29b52a(pk)/*[asteriskasterisk=] [asteriskasterisk]*/)||defined_token_265afb3bd124d12f(pk)/*[in] [instanceof]*/)||defined_token_4df9552a310b74e2(pk)/*[==] [===]*/)||defined_token_04e94f0279c3936b(pk)/*[!=] [!==]*/)||assert_table(pk,0x0,0xf000ed60,0x48000000,0x10000001)/*tbl:[ = ] [ [ ] [ . ] [ ` ] [ ( ] [ * ] [ / ] [ % ] [ - ] [ + ] [ > ] [ < ] [ & ] [ ^ ] [ | ] [ ? ]*/){
            /*peek*/
            /*
               115:342 assignment_expression=>• conditional_expression
               115:344 assignment_expression=>• arrow_function
               115:345 assignment_expression=>• left_hand_side_expression = assignment_expression
               115:346 assignment_expression=>• left_hand_side_expression assignment_operator assignment_expression
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,defined_token_d4a7e22f69f4ee35(l)/*[async]*/)){
                /*consume*/
                /*
                   189:545 unreserved_word=>τasync •
                   85:230 arrow_function=>τasync • arrow_parameters = > concise_body
                */
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if((((((def$js_id_symbols_tok_b3199095c9facd2b(l)||defined_token_845a30f46ac258a6(l)/*[async] [as]*/)||defined_token_8f5d282f35165648(l)/*[get]*/)||defined_token_5bca542dce980d9c(l)/*[set]*/)||defined_token_1cb42c7dd41b3a7e(l)/*[target]*/)||defined_token_14469127dc9c2c1f(l)/*[from]*/)||(l.utf==40/*[(]*/)){
                    /*assert-production-closure*/
                    /*
                       85:230 arrow_function=>τasync • arrow_parameters = > concise_body
                    */
                    if(state=$arrow_parameters(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==61/*[=]*/)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==62/*[>]*/)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(state=$concise_body(l,state)){
                                    /*--unique-id--115--DO-NOT-REPLACE*/
                                    add_reduce(state,5,124);
                                    return $assignment_expression_goto(l,state,115);
                                }
                            }
                        }
                    }
                } else {
                    /*assert-end*/
                    /*
                       189:545 unreserved_word=>τasync •
                    */
                    /*--unique-id--185--DO-NOT-REPLACE*/
                    add_reduce(state,1,255);
                    add_reduce(state,1,254);
                    return $assignment_expression_goto(l,state,185);
                }
            }
        } else {
            /*peek-production-closure*/
            /*
               115:344 assignment_expression=>• arrow_function
            */
            if(state=$arrow_function(l,state)){
                /*--unique-id--115--DO-NOT-REPLACE*/
                return $assignment_expression_goto(l,state,115);
            }
        }
    } else if(defined_token_202a14414fc7633f(l)/*[yield]*/){
        /*peek-production-closure*/
        /*
           115:343 assignment_expression=>• yield_expression
        */
        if(state=$yield_expression(l,state)){
            /*--unique-id--115--DO-NOT-REPLACE*/
            return $assignment_expression_goto(l,state,115);
        }
    } else if((((((defined_token_6d4f77707d3e0e5a(l)/*[++]*/||defined_token_f2ef34011f64cef0(l)/*[--]*/)||defined_token_139af7e0759e829f(l)/*[delete]*/)||defined_token_330b5cfc72831f04(l)/*[void]*/)||defined_token_c3b14b29a9dcf48e(l)/*[typeof]*/)||defined_token_44aa3f48541f3402(l)/*[await]*/)||assert_table(l,0x0,0x2802,0x0,0x40000000)/*tbl:[ + ] [ - ] [ ~ ] [ ! ]*/){
        /*peek-production-closure*/
        /*
           115:342 assignment_expression=>• conditional_expression
        */
        if(state=$conditional_expression(l,state)){
            /*--unique-id--115--DO-NOT-REPLACE*/
            return $assignment_expression_goto(l,state,115);
        }
    } else if(((((((defined_token_febda2dce7bfd219(l)/*[this] [true]*/||defined_token_27afa3af0568507f(l)/*[false] [function]*/)||defined_token_4755eae578aa37bc(l)/*[null] [new]*/)||defined_token_7865c7b5645d7910(l)/*[class]*/)||defined_token_cb1a40816016c1ec(l)/*[super]*/)||defined_token_2408972de31435b0(l)/*[import]*/)||assert_table(l,0x0,0x8084,0x8000000,0x8000001)/*tbl:[ " ] [ ' ] [ [ ] [ { ] [ / ] [ ` ]*/)||l.isNum()/*[num]*/){
        /*peek*/
        /*
           115:342 assignment_expression=>• conditional_expression
           115:345 assignment_expression=>• left_hand_side_expression = assignment_expression
           115:346 assignment_expression=>• left_hand_side_expression assignment_operator assignment_expression
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,defined_token_57e43262d833cfeb(l)/*[this]*/)){
            /*consume*/
            /*
               113:331 primary_expression=>τthis •
            */
            /*--unique-id--99--DO-NOT-REPLACE*/
            add_reduce(state,1,180);
            return $assignment_expression_goto(l,state,99);
        } else if(assert_consume(l,state,defined_token_6fe6f90f8fe15dd0(l)/*[null]*/)){
            /*consume*/
            /*
               182:534 null_literal=>τnull •
            */
            /*--unique-id--99--DO-NOT-REPLACE*/
            add_reduce(state,1,251);
            return $assignment_expression_goto(l,state,99);
        } else if(l.utf==34/*["]*/){
            /*peek*/
            /*
               177:521 string_literal=>• " string_literal_HC_listbody1_121 "
               177:523 string_literal=>• " "
            */
            let pk = l.copy();
            sk_78c208d4d792ec90(pk.next()/*[ 6 ]*/);
            if((((pk.isID()/*[id]*/||pk.isNL()/*[nl]*/)||pk.isNum()/*[num]*/)||pk.isSym()/*[sym]*/)||pk.isSP()/*[ws]*/){
                /*peek-production-closure*/
                /*
                   177:521 string_literal=>• " string_literal_HC_listbody1_121 "
                   177:523 string_literal=>• " "
                */
                if(state=$string_literal(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $assignment_expression_goto(l,state,99);
                }
            }
        } else if(l.utf==39/*[']*/){
            /*peek*/
            /*
               177:522 string_literal=>• ' string_literal_HC_listbody1_122 '
               177:524 string_literal=>• ' '
            */
            let pk = l.copy();
            sk_78c208d4d792ec90(pk.next()/*[ 6 ]*/);
            if((((pk.isID()/*[id]*/||pk.isNL()/*[nl]*/)||pk.isNum()/*[num]*/)||pk.isSym()/*[sym]*/)||pk.isSP()/*[ws]*/){
                /*peek-production-closure*/
                /*
                   177:522 string_literal=>• ' string_literal_HC_listbody1_122 '
                   177:524 string_literal=>• ' '
                */
                if(state=$string_literal(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $assignment_expression_goto(l,state,99);
                }
            }
        } else if(l.utf==91/*[[]*/){
            /*peek*/
            /*
               160:479 array_literal=>• [ elision ]
               160:480 array_literal=>• [ element_list ]
               160:481 array_literal=>• [ element_list , elision ]
               160:482 array_literal=>• [ ]
               160:483 array_literal=>• [ element_list , ]
            */
            if(state=$array_literal(l,state)){
                /*--unique-id--99--DO-NOT-REPLACE*/
                return $assignment_expression_goto(l,state,99);
            }
        } else if(l.utf==123/*[{]*/){
            /*peek*/
            /*
               152:461 object_literal=>• { }
               152:462 object_literal=>• { property_definition_list , }
               152:463 object_literal=>• { property_definition_list }
            */
            if(state=$object_literal(l,state)){
                /*--unique-id--99--DO-NOT-REPLACE*/
                return $assignment_expression_goto(l,state,99);
            }
        } else if(defined_token_e043e2118bdadad0(l)/*[function]*/){
            /*peek*/
            /*
               74:197 function_expression=>• τfunction * binding_identifier ( formal_parameters ) { function_body }
               74:201 function_expression=>• τfunction binding_identifier ( formal_parameters ) { function_body }
               74:202 function_expression=>• τfunction * ( formal_parameters ) { function_body }
               74:203 function_expression=>• τfunction * binding_identifier ( ) { function_body }
               74:207 function_expression=>• τfunction ( formal_parameters ) { function_body }
               74:208 function_expression=>• τfunction binding_identifier ( ) { function_body }
               74:209 function_expression=>• τfunction * ( ) { function_body }
               74:211 function_expression=>• τfunction ( ) { function_body }
            */
            if(state=$function_expression(l,state)){
                /*--unique-id--99--DO-NOT-REPLACE*/
                return $assignment_expression_goto(l,state,99);
            }
        } else if(defined_token_2d05a4070a3ebcf4(l)/*[class]*/){
            /*peek*/
            /*
               90:245 class_expression=>• τclass binding_identifier class_heritage { class_body }
               90:246 class_expression=>• τclass class_heritage { class_body }
               90:247 class_expression=>• τclass binding_identifier { class_body }
               90:248 class_expression=>• τclass binding_identifier class_heritage { }
               90:249 class_expression=>• τclass { class_body }
               90:250 class_expression=>• τclass class_heritage { }
               90:251 class_expression=>• τclass binding_identifier { }
               90:252 class_expression=>• τclass { }
            */
            if(state=$class_expression(l,state)){
                /*--unique-id--99--DO-NOT-REPLACE*/
                return $assignment_expression_goto(l,state,99);
            }
        } else if(l.utf==47/*[/]*/){
            /*assert-production-closure*/
            /*
               150:458 regular_expression_literal=>• / / def$js_identifier
            */
            if(state=$regular_expression_literal(l,state)){
                /*--unique-id--99--DO-NOT-REPLACE*/
                return $assignment_expression_goto(l,state,99);
            }
        } else if(l.utf==96/*[`]*/){
            /*peek*/
            /*
               165:497 no_substitute_template=>• ` `
               169:503 template_head=>• ` ${
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(pk.utf==96/*[`]*/){
                /*peek-production-closure*/
                /*
                   165:497 no_substitute_template=>• ` `
                */
                if(state=$no_substitute_template(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $assignment_expression_goto(l,state,99);
                }
            } else {
                /*peek-production-closure*/
                /*
                   169:503 template_head=>• ` ${
                */
                if(state=$template_head(l,state)){
                    /*--unique-id--169--DO-NOT-REPLACE*/
                    return $assignment_expression_goto(l,state,169);
                }
            }
        } else if(defined_token_79b82aa5b55f0605(l)/*[new]*/){
            /*peek*/
            /*
               99:294 member_expression=>• τnew member_expression arguments
               103:300 new_target=>• τnew . τtarget
               98:287 new_expression=>• τnew new_expression
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(pk.utf==46/*[.]*/){
                /*peek-production-closure*/
                /*
                   103:300 new_target=>• τnew . τtarget
                */
                if(state=$new_target(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $assignment_expression_goto(l,state,99);
                }
            } else if((assert_table(pk,0x0,0x8194,0x88000000,0x8000001)/*tbl:[ _ ] [ $ ] [ " ] [ ' ] [ [ ] [ { ] [ / ] [ ` ] [ ( ]*/||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
                /*peek*/
                /*
                   99:294 member_expression=>• τnew member_expression arguments
                   98:287 new_expression=>• τnew new_expression
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_79b82aa5b55f0605(l)/*[new]*/)){
                    /*consume*/
                    /*
                       99:294 member_expression=>τnew • member_expression arguments
                       98:287 new_expression=>τnew • new_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if((assert_table(l,0x0,0x8194,0x88000000,0x8000001)/*tbl:[ _ ] [ $ ] [ " ] [ ' ] [ [ ] [ { ] [ / ] [ ` ] [ ( ]*/||l.isID()/*[id]*/)||l.isNum()/*[num]*/){
                        /*peek*/
                        /*
                           99:294 member_expression=>τnew • member_expression arguments
                           98:287 new_expression=>τnew • new_expression
                        */
                        let mk = mark();
                        let anchor = l.copy();
                        let anchor_state = state;
                        /*294,3,1,287,2,1*/
                        /*99*/
                        if(state=$member_expression(l,state)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$arguments(l,state)){
                                /*--unique-id--99--DO-NOT-REPLACE*/
                                add_reduce(state,3,167);
                                return $assignment_expression_goto(l,state,99);
                            }
                        }
                        /*294,3,1,287,2,1*/
                        state = reset(mk,anchor,l,anchor_state);
                        if(state=$new_expression(l,state)){
                            /*--unique-id--97--DO-NOT-REPLACE*/
                            add_reduce(state,2,163);
                            return $assignment_expression_goto(l,state,97);
                        }
                    }
                }
            }
        } else if(defined_token_8fdd5a50d81134d2(l)/*[super]*/){
            /*peek*/
            /*
               100:295 super_property=>• τsuper . identifier_name
               100:296 super_property=>• τsuper [ expression ]
               105:308 super_call=>• τsuper arguments
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(pk.utf==40/*[(]*/){
                /*peek-production-closure*/
                /*
                   105:308 super_call=>• τsuper arguments
                */
                if(state=$super_call(l,state)){
                    /*--unique-id--104--DO-NOT-REPLACE*/
                    return $assignment_expression_goto(l,state,104);
                }
            } else {
                /*peek-production-closure*/
                /*
                   100:295 super_property=>• τsuper . identifier_name
                   100:296 super_property=>• τsuper [ expression ]
                */
                if(state=$super_property(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $assignment_expression_goto(l,state,99);
                }
            }
        } else if(defined_token_2ed685dc4925cfa4(l)/*[import]*/){
            /*peek*/
            /*
               102:299 import_meta=>• τimport . τmeta
               106:309 import_call=>• τimport ( assignment_expression )
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(pk.utf==46/*[.]*/){
                /*peek-production-closure*/
                /*
                   102:299 import_meta=>• τimport . τmeta
                */
                if(state=$import_meta(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $assignment_expression_goto(l,state,99);
                }
            } else {
                /*peek-production-closure*/
                /*
                   106:309 import_call=>• τimport ( assignment_expression )
                */
                if(state=$import_call(l,state)){
                    /*--unique-id--104--DO-NOT-REPLACE*/
                    return $assignment_expression_goto(l,state,104);
                }
            }
        } else if(assert_consume(l,state,defined_token_99376be254728810(l)/*[true]*/||defined_token_57da255105f722f9(l)/*[false]*/)){
            /*consume*/
            /*
               183:535 boolean_literal=>τtrue •
               183:536 boolean_literal=>τfalse •
            */
            /*--unique-id--99--DO-NOT-REPLACE*/
            add_reduce(state,1,252);
            return $assignment_expression_goto(l,state,99);
        } else if(l.isNum()/*[num]*/){
            /*peek*/
            /*
               181:533 numeric_literal=>• θnum
               180:532 bigint=>• θnum τn
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(pk.utf==110/*[n]*/){
                /*peek-production-closure*/
                /*
                   180:532 bigint=>• θnum τn
                */
                if(state=$bigint(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $assignment_expression_goto(l,state,99);
                }
            } else {
                /*peek-production-closure*/
                /*
                   181:533 numeric_literal=>• θnum
                */
                if(state=$numeric_literal(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $assignment_expression_goto(l,state,99);
                }
            }
        }
    } else if(assert_table(l,0x0,0x110,0x80000000,0x0)/*tbl:[ _ ] [ $ ] [ ( ]*/||l.isID()/*[id]*/){
        /*peek*/
        /*
           115:342 assignment_expression=>• conditional_expression
           115:344 assignment_expression=>• arrow_function
           115:345 assignment_expression=>• left_hand_side_expression = assignment_expression
           115:346 assignment_expression=>• left_hand_side_expression assignment_operator assignment_expression
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(l.utf==40/*[(]*/){
            /*peek*/
            /*
               138:425 parenthesized=>• ( expression )
               137:418 cover_parenthesized_expression_and_arrow_parameter_list=>• ( )
               137:419 cover_parenthesized_expression_and_arrow_parameter_list=>• ( expression , )
               137:420 cover_parenthesized_expression_and_arrow_parameter_list=>• ( cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
               137:421 cover_parenthesized_expression_and_arrow_parameter_list=>• ( cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
               137:422 cover_parenthesized_expression_and_arrow_parameter_list=>• ( expression , cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
               137:423 cover_parenthesized_expression_and_arrow_parameter_list=>• ( expression , cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(defined_token_f47f6de2d28c24e5(pk)/*[...]*/||(pk.utf==41/*[)]*/)){
                /*peek-production-closure,assert-production-closure*/
                /*
                   137:418 cover_parenthesized_expression_and_arrow_parameter_list=>• ( )
                   137:420 cover_parenthesized_expression_and_arrow_parameter_list=>• ( cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
                */
                if(state=$cover_parenthesized_expression_and_arrow_parameter_list(l,state)){
                    /*--unique-id--86--DO-NOT-REPLACE*/
                    add_reduce(state,1,127);
                    return $assignment_expression_goto(l,state,86);
                }
            } else if((((defined_token_6d4f77707d3e0e5a(pk)/*[++]*/||defined_token_f2ef34011f64cef0(pk)/*[--]*/)||assert_table(pk,0x0,0xa996,0x88000000,0x48000001)/*tbl:[ ( ] [ [ ] [ { ] [ / ] [ " ] [ ' ] [ ` ] [ _ ] [ $ ] [ + ] [ - ] [ ~ ] [ ! ]*/)||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
                /*peek*/
                /*
                   138:425 parenthesized=>• ( expression )
                   137:419 cover_parenthesized_expression_and_arrow_parameter_list=>• ( expression , )
                   137:422 cover_parenthesized_expression_and_arrow_parameter_list=>• ( expression , cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
                   137:423 cover_parenthesized_expression_and_arrow_parameter_list=>• ( expression , cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==40/*[(]*/)){
                    /*consume*/
                    /*
                       138:425 parenthesized=>( • expression )
                       137:419 cover_parenthesized_expression_and_arrow_parameter_list=>( • expression , )
                       137:422 cover_parenthesized_expression_and_arrow_parameter_list=>( • expression , cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
                       137:423 cover_parenthesized_expression_and_arrow_parameter_list=>( • expression , cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$expression(l,state)){
                        /*assert*/
                        /*
                           138:425 parenthesized=>( • expression )
                           137:419 cover_parenthesized_expression_and_arrow_parameter_list=>( • expression , )
                           137:422 cover_parenthesized_expression_and_arrow_parameter_list=>( • expression , cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
                           137:423 cover_parenthesized_expression_and_arrow_parameter_list=>( • expression , cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==41/*[)]*/)){
                            /*consume*/
                            /*
                               138:425 parenthesized=>( expression ) •
                            */
                            /*--unique-id--138--DO-NOT-REPLACE*/
                            add_reduce(state,3,204);
                            return $assignment_expression_goto(l,state,138);
                        } else if(l.utf==44/*[,]*/){
                            /*peek*/
                            /*
                               137:419 cover_parenthesized_expression_and_arrow_parameter_list=>( expression • , )
                               137:422 cover_parenthesized_expression_and_arrow_parameter_list=>( expression • , cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
                               137:423 cover_parenthesized_expression_and_arrow_parameter_list=>( expression • , cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
                            */
                            let pk = l.copy();
                            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                            if(pk.utf==41/*[)]*/){
                                /*peek*/
                                /*
                                   137:419 cover_parenthesized_expression_and_arrow_parameter_list=>( expression • , )
                                */
                                if(assert_consume(l,state,l.utf==44/*[,]*/)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                        /*--unique-id--86--DO-NOT-REPLACE*/
                                        add_reduce(state,4,204);
                                        add_reduce(state,1,127);
                                        return $assignment_expression_goto(l,state,86);
                                    }
                                }
                            } else if(defined_token_f47f6de2d28c24e5(pk)/*[...]*/){
                                /*peek*/
                                /*
                                   137:422 cover_parenthesized_expression_and_arrow_parameter_list=>( expression • , cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
                                   137:423 cover_parenthesized_expression_and_arrow_parameter_list=>( expression • , cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==44/*[,]*/)){
                                    /*consume*/
                                    /*
                                       137:422 cover_parenthesized_expression_and_arrow_parameter_list=>( expression , • cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
                                       137:423 cover_parenthesized_expression_and_arrow_parameter_list=>( expression , • cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(defined_token_f47f6de2d28c24e5(l)/*[...]*/){
                                        /*peek*/
                                        /*
                                           137:422 cover_parenthesized_expression_and_arrow_parameter_list=>( expression , • cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
                                           137:423 cover_parenthesized_expression_and_arrow_parameter_list=>( expression , • cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
                                        */
                                        let pk = l.copy();
                                        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                        if((pk.utf==123/*[{]*/)||(pk.utf==91/*[[]*/)){
                                            /*peek-production-closure*/
                                            /*
                                               137:423 cover_parenthesized_expression_and_arrow_parameter_list=>( expression , • cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
                                            */
                                            if(state=$cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120(l,state)){
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                    /*--unique-id--86--DO-NOT-REPLACE*/
                                                    add_reduce(state,5,205);
                                                    add_reduce(state,1,127);
                                                    return $assignment_expression_goto(l,state,86);
                                                }
                                            }
                                        } else {
                                            /*peek-production-closure*/
                                            /*
                                               137:422 cover_parenthesized_expression_and_arrow_parameter_list=>( expression , • cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
                                            */
                                            if(state=$cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119(l,state)){
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                    /*--unique-id--86--DO-NOT-REPLACE*/
                                                    add_reduce(state,5,205);
                                                    add_reduce(state,1,127);
                                                    return $assignment_expression_goto(l,state,86);
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } else if(assert_consume(l,state,((((def$js_id_symbols_tok_b3199095c9facd2b(l)||defined_token_8f5d282f35165648(l)/*[get]*/)||defined_token_5bca542dce980d9c(l)/*[set]*/)||defined_token_1cb42c7dd41b3a7e(l)/*[target]*/)||defined_token_fcc8b8fe09802878(l)/*[as]*/)||defined_token_14469127dc9c2c1f(l)/*[from]*/)){
            /*consume*/
            /*
               225:688 def$js_identifier=>tk:def$js_id_symbols •
               189:546 unreserved_word=>τget •
               189:547 unreserved_word=>τset •
               189:548 unreserved_word=>τtarget •
               189:549 unreserved_word=>τas •
               189:550 unreserved_word=>τfrom •
            */
            /*--unique-id--185--DO-NOT-REPLACE*/
            add_reduce(state,1,255);
            add_reduce(state,1,254);
            return $assignment_expression_goto(l,state,185);
        }
    }
    debug_stack.push({ name:"assignment_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $assignment_expression_goto(l,state,prod){
    debug_stack.push({ name:"assignment_expression GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        switch(prod){
            case 86:
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==61/*[=]*/)){
                    /*consume*/
                    /*
                       85:231 arrow_function=>arrow_parameters = • > concise_body
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==62/*[>]*/)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$concise_body(l,state)){
                            /*--unique-id--115--DO-NOT-REPLACE*/
                            add_reduce(state,4,125);
                            prod = 115;
                            continue;
                        }
                    }
                }
                break;
            case 97:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==61/*[=]*/)){
                    /*consume*/
                    /*
                       115:345 assignment_expression=>left_hand_side_expression = • assignment_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$assignment_expression(l,state)){
                        /*--unique-id--115--DO-NOT-REPLACE*/
                        add_reduce(state,3,183);
                        prod = 115;
                        continue;
                    }
                } else if(assert_consume(l,state,defined_token_6d4f77707d3e0e5a(l)/*[++]*/||defined_token_f2ef34011f64cef0(l)/*[--]*/)){
                    /*consume*/
                    /*
                       134:412 update_expression=>left_hand_side_expression ++ •
                       134:413 update_expression=>left_hand_side_expression -- •
                    */
                    /*--unique-id--133--DO-NOT-REPLACE*/
                    add_reduce(state,2,201);
                    prod = 133;
                    continue;
                } else if((((((((((defined_token_37edf5ebc00dbfe6(l)/*[/=]*/||defined_token_2c342d130718e813(l)/*[%=]*/)||defined_token_97755a959607b02c(l)/*[+=]*/)||defined_token_eac5c307c1a80303(l)/*[-=]*/)||defined_token_5892ddf818179b1b(l)/*[<<=]*/)||defined_token_eaad0114272c4ffc(l)/*[>>=] [>>>=]*/)||defined_token_c7d7983a743dfb89(l)/*[&=]*/)||defined_token_8c2d44d7057fe753(l)/*[^=]*/)||defined_token_cf21971e32338a79(l)/*[|=]*/)||defined_token_aaa75300a4a9f79d(l)/*[asteriskasterisk=]*/)||(l.utf==42/*[*]*/)){
                    /*peek-production-closure*/
                    /*
                       115:346 assignment_expression=>left_hand_side_expression • assignment_operator assignment_expression
                    */
                    if(state=$assignment_operator(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$assignment_expression(l,state)){
                            /*--unique-id--115--DO-NOT-REPLACE*/
                            add_reduce(state,3,184);
                            prod = 115;
                            continue;
                        }
                    }
                } else {
                    /*assert-end*/
                    /*
                       134:411 update_expression=>left_hand_side_expression •
                    */
                    /*--unique-id--133--DO-NOT-REPLACE*/
                    prod = 133;
                    continue;
                }
                break;
            case 99:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==91/*[[]*/)){
                    /*consume*/
                    /*
                       99:289 member_expression=>member_expression [ • expression ]
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$expression(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==93/*[]]*/)){
                            /*--unique-id--99--DO-NOT-REPLACE*/
                            add_reduce(state,4,164);
                            prod = 99;
                            continue;
                        }
                    }
                } else if(assert_consume(l,state,l.utf==46/*[.]*/)){
                    /*consume*/
                    /*
                       99:290 member_expression=>member_expression . • identifier_name
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$identifier_name(l,state)){
                        /*--unique-id--99--DO-NOT-REPLACE*/
                        add_reduce(state,3,165);
                        prod = 99;
                        continue;
                    }
                } else if(l.utf==96/*[`]*/){
                    /*peek-production-closure*/
                    /*
                       99:291 member_expression=>member_expression • template_literal
                    */
                    if(state=$template_literal(l,state)){
                        /*--unique-id--99--DO-NOT-REPLACE*/
                        add_reduce(state,2,166);
                        prod = 99;
                        continue;
                    }
                } else if(l.utf==40/*[(]*/){
                    /*peek-production-closure*/
                    /*
                       88:236 cover_call_expression_and_async_arrow_head=>member_expression • arguments
                    */
                    if(state=$arguments(l,state)){
                        /*--unique-id--104--DO-NOT-REPLACE*/
                        add_reduce(state,2,129);
                        prod = 104;
                        continue;
                    }
                } else if(defined_token_675b48fc93d1800c(l)/*[?.]*/){
                    /*peek-production-closure*/
                    /*
                       111:320 optional_expression=>member_expression • optional_chain
                    */
                    if(state=$optional_chain(l,state)){
                        /*--unique-id--111--DO-NOT-REPLACE*/
                        add_reduce(state,2,179);
                        prod = 111;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       98:286 new_expression=>member_expression •
                    */
                    /*--unique-id--97--DO-NOT-REPLACE*/
                    prod = 97;
                    continue;
                }
                break;
            case 104:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==46/*[.]*/)){
                    /*consume*/
                    /*
                       104:301 call_expression=>call_expression . • identifier_name
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$identifier_name(l,state)){
                        /*--unique-id--104--DO-NOT-REPLACE*/
                        add_reduce(state,3,165);
                        prod = 104;
                        continue;
                    }
                } else if(l.utf==40/*[(]*/){
                    /*peek-production-closure*/
                    /*
                       104:304 call_expression=>call_expression • arguments
                    */
                    if(state=$arguments(l,state)){
                        /*--unique-id--104--DO-NOT-REPLACE*/
                        add_reduce(state,2,172);
                        prod = 104;
                        continue;
                    }
                } else if(assert_consume(l,state,l.utf==91/*[[]*/)){
                    /*consume*/
                    /*
                       104:305 call_expression=>call_expression [ • expression ]
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$expression(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==93/*[]]*/)){
                            /*--unique-id--104--DO-NOT-REPLACE*/
                            add_reduce(state,4,164);
                            prod = 104;
                            continue;
                        }
                    }
                } else if(l.utf==96/*[`]*/){
                    /*peek-production-closure*/
                    /*
                       104:307 call_expression=>call_expression • template_literal
                    */
                    if(state=$template_literal(l,state)){
                        /*--unique-id--104--DO-NOT-REPLACE*/
                        add_reduce(state,2,173);
                        prod = 104;
                        continue;
                    }
                } else if(defined_token_675b48fc93d1800c(l)/*[?.]*/){
                    /*peek-production-closure*/
                    /*
                       111:321 optional_expression=>call_expression • optional_chain
                    */
                    if(state=$optional_chain(l,state)){
                        /*--unique-id--111--DO-NOT-REPLACE*/
                        add_reduce(state,2,179);
                        prod = 111;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       97:284 left_hand_side_expression=>call_expression •
                    */
                    /*--unique-id--97--DO-NOT-REPLACE*/
                    prod = 97;
                    continue;
                }
                break;
            case 111:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(defined_token_675b48fc93d1800c(l)/*[?.]*/){
                    /*assert-production-closure*/
                    /*
                       111:322 optional_expression=>optional_expression • optional_chain
                    */
                    if(state=$optional_chain(l,state)){
                        /*--unique-id--111--DO-NOT-REPLACE*/
                        add_reduce(state,2,179);
                        prod = 111;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       97:285 left_hand_side_expression=>optional_expression •
                    */
                    /*--unique-id--97--DO-NOT-REPLACE*/
                    prod = 97;
                    continue;
                }
                break;
            case 118:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==63/*[?]*/)){
                    /*consume*/
                    /*
                       117:360 conditional_expression=>short_circuit_expression ? • assignment_expression : assignment_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$assignment_expression(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==58/*[:]*/)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$assignment_expression(l,state)){
                                /*--unique-id--115--DO-NOT-REPLACE*/
                                add_reduce(state,5,185);
                                prod = 115;
                                continue;
                            }
                        }
                    }
                } else {
                    /*assert-end*/
                    /*
                       117:359 conditional_expression=>short_circuit_expression •
                    */
                    /*--unique-id--115--DO-NOT-REPLACE*/
                    prod = 115;
                    continue;
                }
                break;
            case 119:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_62e66454a337f212(l)/*[||]*/)){
                    /*consume*/
                    /*
                       119:364 logical_or_expression=>logical_or_expression || • logical_and_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$logical_and_expression(l,state)){
                        /*--unique-id--119--DO-NOT-REPLACE*/
                        add_reduce(state,3,186);
                        prod = 119;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       118:361 short_circuit_expression=>logical_or_expression •
                    */
                    /*--unique-id--118--DO-NOT-REPLACE*/
                    prod = 118;
                    continue;
                }
                break;
            case 120:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==38/*[&]*/)){
                    /*consume*/
                    /*
                       120:366 logical_and_expression=>logical_and_expression & • & bitwise_or_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==38/*[&]*/)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$bitwise_or_expression(l,state)){
                            /*--unique-id--120--DO-NOT-REPLACE*/
                            add_reduce(state,4,186);
                            prod = 120;
                            continue;
                        }
                    }
                } else {
                    /*assert-end*/
                    /*
                       119:363 logical_or_expression=>logical_and_expression •
                    */
                    /*--unique-id--119--DO-NOT-REPLACE*/
                    prod = 119;
                    continue;
                }
                break;
            case 121:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(l.utf==63/*[?]*/){
                    /*assert-end*/
                    /*
                       118:362 short_circuit_expression=>coalesce_expression •
                    */
                    /*--unique-id--118--DO-NOT-REPLACE*/
                    prod = 118;
                    continue;
                } else {
                    /*assert-end*/
                    /*
                       122:368 coalesce_expression_head_group_0247_118=>coalesce_expression •
                    */
                    /*--unique-id--123--DO-NOT-REPLACE*/
                    prod = 123;
                    continue;
                }
                break;
            case 123:
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_87b2bbc4cf92dae2(l)/*[??]*/)){
                    /*consume*/
                    /*
                       121:367 coalesce_expression=>coalesce_expression_head ?? • bitwise_or_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$bitwise_or_expression(l,state)){
                        /*--unique-id--121--DO-NOT-REPLACE*/
                        add_reduce(state,3,187);
                        prod = 121;
                        continue;
                    }
                }
                break;
            case 124:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==124/*[|]*/)){
                    /*consume*/
                    /*
                       124:372 bitwise_or_expression=>bitwise_or_expression | • bitwise_xor_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$bitwise_xor_expression(l,state)){
                        /*--unique-id--124--DO-NOT-REPLACE*/
                        add_reduce(state,3,188);
                        prod = 124;
                        continue;
                    }
                } else if(defined_token_bfaf50116b98d6b4(l)/*[??]*/){
                    /*assert-end*/
                    /*
                       122:369 coalesce_expression_head_group_0247_118=>bitwise_or_expression •
                    */
                    /*--unique-id--123--DO-NOT-REPLACE*/
                    prod = 123;
                    continue;
                } else {
                    /*assert-end*/
                    /*
                       120:365 logical_and_expression=>bitwise_or_expression •
                    */
                    /*--unique-id--120--DO-NOT-REPLACE*/
                    prod = 120;
                    continue;
                }
                break;
            case 125:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==94/*[^]*/)){
                    /*consume*/
                    /*
                       125:374 bitwise_xor_expression=>bitwise_xor_expression ^ • bitwise_and_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$bitwise_and_expression(l,state)){
                        /*--unique-id--125--DO-NOT-REPLACE*/
                        add_reduce(state,3,188);
                        prod = 125;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       124:371 bitwise_or_expression=>bitwise_xor_expression •
                    */
                    /*--unique-id--124--DO-NOT-REPLACE*/
                    prod = 124;
                    continue;
                }
                break;
            case 126:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==38/*[&]*/)){
                    /*consume*/
                    /*
                       126:376 bitwise_and_expression=>bitwise_and_expression & • equality_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$equality_expression(l,state)){
                        /*--unique-id--126--DO-NOT-REPLACE*/
                        add_reduce(state,3,188);
                        prod = 126;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       125:373 bitwise_xor_expression=>bitwise_and_expression •
                    */
                    /*--unique-id--125--DO-NOT-REPLACE*/
                    prod = 125;
                    continue;
                }
                break;
            case 127:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_4df9552a310b74e2(l)/*[==] [===]*/||defined_token_04e94f0279c3936b(l)/*[!=] [!==]*/)){
                    /*consume*/
                    /*
                       127:378 equality_expression=>equality_expression == • relational_expression
                       127:379 equality_expression=>equality_expression != • relational_expression
                       127:380 equality_expression=>equality_expression === • relational_expression
                       127:381 equality_expression=>equality_expression !== • relational_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$relational_expression(l,state)){
                        /*--unique-id--127--DO-NOT-REPLACE*/
                        add_reduce(state,3,189);
                        prod = 127;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       126:375 bitwise_and_expression=>equality_expression •
                    */
                    /*--unique-id--126--DO-NOT-REPLACE*/
                    prod = 126;
                    continue;
                }
                break;
            case 128:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_8bbb4e33781aec74(l)/*[instanceof]*/)){
                    /*consume*/
                    /*
                       128:387 relational_expression=>relational_expression τinstanceof • shift_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$shift_expression(l,state)){
                        /*--unique-id--128--DO-NOT-REPLACE*/
                        add_reduce(state,3,191);
                        prod = 128;
                        continue;
                    }
                } else if(assert_consume(l,state,defined_token_b910302f4210711c(l)/*[in]*/)){
                    /*consume*/
                    /*
                       128:388 relational_expression=>relational_expression τin • shift_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$shift_expression(l,state)){
                        /*--unique-id--128--DO-NOT-REPLACE*/
                        add_reduce(state,3,192);
                        prod = 128;
                        continue;
                    }
                } else if(assert_consume(l,state,((defined_token_7c7dc8357e27bfc9(l)/*[<=]*/||defined_token_dad2c38b0a2035e1(l)/*[>=]*/)||(l.utf==60/*[<]*/))||(l.utf==62/*[>]*/))){
                    /*consume*/
                    /*
                       128:383 relational_expression=>relational_expression < • shift_expression
                       128:384 relational_expression=>relational_expression > • shift_expression
                       128:385 relational_expression=>relational_expression <= • shift_expression
                       128:386 relational_expression=>relational_expression >= • shift_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$shift_expression(l,state)){
                        /*--unique-id--128--DO-NOT-REPLACE*/
                        add_reduce(state,3,190);
                        prod = 128;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       127:377 equality_expression=>relational_expression •
                    */
                    /*--unique-id--127--DO-NOT-REPLACE*/
                    prod = 127;
                    continue;
                }
                break;
            case 129:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_bc9f32cdea34416c(l)/*[<<]*/||defined_token_910c81aa02511c5e(l)/*[>>] [>>>]*/)){
                    /*consume*/
                    /*
                       129:390 shift_expression=>shift_expression << • additive_expression
                       129:391 shift_expression=>shift_expression >> • additive_expression
                       129:392 shift_expression=>shift_expression >>> • additive_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$additive_expression(l,state)){
                        /*--unique-id--129--DO-NOT-REPLACE*/
                        add_reduce(state,3,193);
                        prod = 129;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       128:382 relational_expression=>shift_expression •
                    */
                    /*--unique-id--128--DO-NOT-REPLACE*/
                    prod = 128;
                    continue;
                }
                break;
            case 130:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,(l.utf==43/*[+]*/)||(l.utf==45/*[-]*/))){
                    /*consume*/
                    /*
                       130:394 additive_expression=>additive_expression + • multiplicative_expression
                       130:395 additive_expression=>additive_expression - • multiplicative_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$multiplicative_expression(l,state)){
                        /*--unique-id--130--DO-NOT-REPLACE*/
                        add_reduce(state,3,194);
                        prod = 130;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       129:389 shift_expression=>additive_expression •
                    */
                    /*--unique-id--129--DO-NOT-REPLACE*/
                    prod = 129;
                    continue;
                }
                break;
            case 131:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,assert_table(l,0x0,0x8420,0x0,0x0)/*tbl:[ * ] [ / ] [ % ]*/)){
                    /*consume*/
                    /*
                       131:397 multiplicative_expression=>multiplicative_expression * • exponentiation_expression
                       131:398 multiplicative_expression=>multiplicative_expression / • exponentiation_expression
                       131:399 multiplicative_expression=>multiplicative_expression % • exponentiation_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$exponentiation_expression(l,state)){
                        /*--unique-id--131--DO-NOT-REPLACE*/
                        add_reduce(state,3,195);
                        prod = 131;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       130:393 additive_expression=>multiplicative_expression •
                    */
                    /*--unique-id--130--DO-NOT-REPLACE*/
                    prod = 130;
                    continue;
                }
                break;
            case 133:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_1fa4a9b14e1fe8cc(l)/*[asteriskasterisk]*/)){
                    /*consume*/
                    /*
                       132:401 exponentiation_expression=>unary_expression ** • exponentiation_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$exponentiation_expression(l,state)){
                        /*--unique-id--131--DO-NOT-REPLACE*/
                        add_reduce(state,3,196);
                        prod = 131;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       132:400 exponentiation_expression=>unary_expression •
                    */
                    /*--unique-id--131--DO-NOT-REPLACE*/
                    prod = 131;
                    continue;
                }
                break;
            case 138:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(l.utf==61/*[=]*/){
                    /*peek*/
                    /*
                       113:340 primary_expression=>parenthesized •
                       137:424 cover_parenthesized_expression_and_arrow_parameter_list=>parenthesized •
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(l.utf==62/*[>]*/){
                        /*assert-end*/
                        /*
                           137:424 cover_parenthesized_expression_and_arrow_parameter_list=>parenthesized •
                        */
                        /*--unique-id--86--DO-NOT-REPLACE*/
                        add_reduce(state,1,127);
                        prod = 86;
                        continue;
                    } else {
                        /*assert-end*/
                        /*
                           113:340 primary_expression=>parenthesized •
                        */
                        /*--unique-id--99--DO-NOT-REPLACE*/
                        add_reduce(state,1,181);
                        prod = 99;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       113:340 primary_expression=>parenthesized •
                    */
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    add_reduce(state,1,181);
                    prod = 99;
                    continue;
                }
                break;
            case 169:
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(l)||defined_token_d8f9d336d83ac87c(l)/*[yield]*/)||defined_token_670f23e41126e00b(l)/*[async] [as] [await]*/)||defined_token_99035833d16742d9(l)/*[new] [null]*/)||defined_token_d38e0913b811b457(l)/*[super] [set]*/)||defined_token_2ed685dc4925cfa4(l)/*[import]*/)||defined_token_ca53d8e93addfaf5(l)/*[this] [target] [true] [typeof]*/)||defined_token_7b465f3c7dd55e63(l)/*[function] [from] [false]*/)||defined_token_2d05a4070a3ebcf4(l)/*[class]*/)||defined_token_8f5d282f35165648(l)/*[get]*/)||defined_token_8ed5fb4bce429503(l)/*[delete]*/)||defined_token_042ea6dc9657ee07(l)/*[void]*/)||defined_token_6d4f77707d3e0e5a(l)/*[++]*/)||defined_token_f2ef34011f64cef0(l)/*[--]*/)||assert_table(l,0x0,0xa986,0x8000000,0x48000001)/*tbl:[ ( ] [ [ ] [ { ] [ / ] [ " ] [ ' ] [ ` ] [ + ] [ - ] [ ~ ] [ ! ]*/)||l.isNum()/*[num]*/){
                    /*assert-production-closure*/
                    /*
                       166:498 substitute_template=>template_head • expression template_spans
                    */
                    if(state=$expression(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$template_spans(l,state)){
                            /*--unique-id--99--DO-NOT-REPLACE*/
                            add_reduce(state,3,239);
                            prod = 99;
                            continue;
                        }
                    }
                }
                break;
            case 185:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(l.utf==61/*[=]*/){
                    /*peek*/
                    /*
                       86:232 arrow_parameters=>identifier_reference •
                       113:332 primary_expression=>identifier_reference •
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(l.utf==62/*[>]*/){
                        /*assert-end*/
                        /*
                           86:232 arrow_parameters=>identifier_reference •
                        */
                        /*--unique-id--86--DO-NOT-REPLACE*/
                        add_reduce(state,1,126);
                        prod = 86;
                        continue;
                    } else {
                        /*assert-end*/
                        /*
                           113:332 primary_expression=>identifier_reference •
                        */
                        /*--unique-id--99--DO-NOT-REPLACE*/
                        prod = 99;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       113:332 primary_expression=>identifier_reference •
                    */
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    prod = 99;
                    continue;
                }
                break;
        }
        break;
    }
    debug_stack.push({ name:"assignment_expression GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==115);
}
/*production name: assignment_operator
            grammar index: 116
            bodies:
	116:347 assignment_operator=>• * = - 
		116:348 assignment_operator=>• /= - 
		116:349 assignment_operator=>• %= - 
		116:350 assignment_operator=>• += - 
		116:351 assignment_operator=>• -= - 
		116:352 assignment_operator=>• <<= - 
		116:353 assignment_operator=>• >>= - 
		116:354 assignment_operator=>• >>>= - 
		116:355 assignment_operator=>• &= - 
		116:356 assignment_operator=>• ^= - 
		116:357 assignment_operator=>• |= - 
		116:358 assignment_operator=>• **= - 
            compile time: 4.833ms*/;
function $assignment_operator(l,state){
    debug_stack.push({ name:"assignment_operator RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==42/*[*]*/)){
        /*consume*/
        /*
           116:347 assignment_operator=>* • =
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==61/*[=]*/)){
            /*--unique-id--116--DO-NOT-REPLACE*/
            add_reduce(state,2,0);
            debug_stack.push({ name:"assignment_operator RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else if(assert_consume(l,state,((((((((defined_token_97774f2b5bfeb250(l)/*[/=]*/||defined_token_4733e5135a271ed8(l)/*[%=]*/)||defined_token_c24c5cb9b7913dbc(l)/*[+=]*/)||defined_token_9d56a2003e2b2110(l)/*[-=]*/)||defined_token_b4440dba03e6daa2(l)/*[<<=]*/)||defined_token_b821a301e2038a49(l)/*[>>=] [>>>=]*/)||defined_token_8d305de3f9ddde92(l)/*[&=]*/)||defined_token_87cd28843f68bc2f(l)/*[^=]*/)||defined_token_fa8b90636881e66b(l)/*[|=]*/)||defined_token_3e1cfcd85fb122d2(l)/*[asteriskasterisk=]*/)){
        /*consume*/
        /*
           116:348 assignment_operator=>/= •
           116:349 assignment_operator=>%= •
           116:350 assignment_operator=>+= •
           116:351 assignment_operator=>-= •
           116:352 assignment_operator=><<= •
           116:353 assignment_operator=>>>= •
           116:354 assignment_operator=>>>>= •
           116:355 assignment_operator=>&= •
           116:356 assignment_operator=>^= •
           116:357 assignment_operator=>|= •
           116:358 assignment_operator=>**= •
        */
        /*--unique-id--116--DO-NOT-REPLACE*/
        debug_stack.push({ name:"assignment_operator RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"assignment_operator RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: conditional_expression
            grammar index: 117
            bodies:
	117:359 conditional_expression=>• short_circuit_expression - 
		117:360 conditional_expression=>• short_circuit_expression ? assignment_expression : assignment_expression - 
            compile time: 9.016ms*/;
function $conditional_expression(l,state){
    debug_stack.push({ name:"conditional_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$short_circuit_expression(l,state)){
        /*assert*/
        /*
           117:359 conditional_expression=>• short_circuit_expression
           117:360 conditional_expression=>• short_circuit_expression ? assignment_expression : assignment_expression
        */
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==63/*[?]*/)){
            /*consume*/
            /*
               117:360 conditional_expression=>short_circuit_expression ? • assignment_expression : assignment_expression
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$assignment_expression(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==58/*[:]*/)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$assignment_expression(l,state)){
                        /*--unique-id--117--DO-NOT-REPLACE*/
                        add_reduce(state,5,185);
                        debug_stack.push({ name:"conditional_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                }
            }
        } else {
            /*assert-end*/
            /*
               117:359 conditional_expression=>short_circuit_expression •
            */
            /*--unique-id--117--DO-NOT-REPLACE*/
            debug_stack.push({ name:"conditional_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"conditional_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: short_circuit_expression
            grammar index: 118
            bodies:
	118:361 short_circuit_expression=>• logical_or_expression - 
		118:362 short_circuit_expression=>• coalesce_expression - 
            compile time: 686.138ms*/;
function $short_circuit_expression(l,state){
    debug_stack.push({ name:"short_circuit_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if((((defined_token_6d4f77707d3e0e5a(l)/*[++]*/||defined_token_f2ef34011f64cef0(l)/*[--]*/)||assert_table(l,0x0,0xa996,0x88000000,0x48000001)/*tbl:[ _ ] [ $ ] [ " ] [ ' ] [ [ ] [ { ] [ / ] [ ` ] [ ( ] [ + ] [ - ] [ ~ ] [ ! ]*/)||l.isID()/*[id]*/)||l.isNum()/*[num]*/){
        /*peek*/
        /*
           118:361 short_circuit_expression=>• logical_or_expression
           118:362 short_circuit_expression=>• coalesce_expression
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,defined_token_57e43262d833cfeb(l)/*[this]*/)){
            /*consume*/
            /*
               113:331 primary_expression=>τthis •
            */
            /*--unique-id--99--DO-NOT-REPLACE*/
            add_reduce(state,1,180);
            return $short_circuit_expression_goto(l,state,99);
        } else if(defined_token_e1e77579dc125345(l)/*[async]*/){
            /*peek*/
            /*
               189:545 unreserved_word=>• τasync
               74:196 function_expression=>• τasync τfunction * binding_identifier ( formal_parameters ) { function_body }
               74:198 function_expression=>• τasync τfunction binding_identifier ( formal_parameters ) { function_body }
               74:199 function_expression=>• τasync τfunction * ( formal_parameters ) { function_body }
               74:200 function_expression=>• τasync τfunction * binding_identifier ( ) { function_body }
               74:204 function_expression=>• τasync τfunction ( formal_parameters ) { function_body }
               74:205 function_expression=>• τasync τfunction binding_identifier ( ) { function_body }
               74:206 function_expression=>• τasync τfunction * ( ) { function_body }
               74:210 function_expression=>• τasync τfunction ( ) { function_body }
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(defined_token_e043e2118bdadad0(pk)/*[function]*/){
                /*assert-production-closure*/
                /*
                   74:196 function_expression=>• τasync τfunction * binding_identifier ( formal_parameters ) { function_body }
                */
                if(state=$function_expression(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $short_circuit_expression_goto(l,state,99);
                }
            } else {
                /*peek-production-closure*/
                /*
                   189:545 unreserved_word=>• τasync
                */
                if(state=$unreserved_word(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    add_reduce(state,1,255);
                    add_reduce(state,1,254);
                    return $short_circuit_expression_goto(l,state,99);
                }
            }
        } else if(assert_consume(l,state,defined_token_6fe6f90f8fe15dd0(l)/*[null]*/)){
            /*consume*/
            /*
               182:534 null_literal=>τnull •
            */
            /*--unique-id--99--DO-NOT-REPLACE*/
            add_reduce(state,1,251);
            return $short_circuit_expression_goto(l,state,99);
        } else if(l.utf==34/*["]*/){
            /*peek*/
            /*
               177:521 string_literal=>• " string_literal_HC_listbody1_121 "
               177:523 string_literal=>• " "
            */
            let pk = l.copy();
            sk_78c208d4d792ec90(pk.next()/*[ 6 ]*/);
            if((((pk.isID()/*[id]*/||pk.isNL()/*[nl]*/)||pk.isNum()/*[num]*/)||pk.isSym()/*[sym]*/)||pk.isSP()/*[ws]*/){
                /*peek-production-closure*/
                /*
                   177:521 string_literal=>• " string_literal_HC_listbody1_121 "
                   177:523 string_literal=>• " "
                */
                if(state=$string_literal(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $short_circuit_expression_goto(l,state,99);
                }
            }
        } else if(l.utf==39/*[']*/){
            /*peek*/
            /*
               177:522 string_literal=>• ' string_literal_HC_listbody1_122 '
               177:524 string_literal=>• ' '
            */
            let pk = l.copy();
            sk_78c208d4d792ec90(pk.next()/*[ 6 ]*/);
            if((((pk.isID()/*[id]*/||pk.isNL()/*[nl]*/)||pk.isNum()/*[num]*/)||pk.isSym()/*[sym]*/)||pk.isSP()/*[ws]*/){
                /*peek-production-closure*/
                /*
                   177:522 string_literal=>• ' string_literal_HC_listbody1_122 '
                   177:524 string_literal=>• ' '
                */
                if(state=$string_literal(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $short_circuit_expression_goto(l,state,99);
                }
            }
        } else if(l.utf==91/*[[]*/){
            /*peek*/
            /*
               160:479 array_literal=>• [ elision ]
               160:480 array_literal=>• [ element_list ]
               160:481 array_literal=>• [ element_list , elision ]
               160:482 array_literal=>• [ ]
               160:483 array_literal=>• [ element_list , ]
            */
            if(state=$array_literal(l,state)){
                /*--unique-id--99--DO-NOT-REPLACE*/
                return $short_circuit_expression_goto(l,state,99);
            }
        } else if(l.utf==123/*[{]*/){
            /*peek*/
            /*
               152:461 object_literal=>• { }
               152:462 object_literal=>• { property_definition_list , }
               152:463 object_literal=>• { property_definition_list }
            */
            if(state=$object_literal(l,state)){
                /*--unique-id--99--DO-NOT-REPLACE*/
                return $short_circuit_expression_goto(l,state,99);
            }
        } else if(defined_token_e043e2118bdadad0(l)/*[function]*/){
            /*peek*/
            /*
               74:197 function_expression=>• τfunction * binding_identifier ( formal_parameters ) { function_body }
               74:201 function_expression=>• τfunction binding_identifier ( formal_parameters ) { function_body }
               74:202 function_expression=>• τfunction * ( formal_parameters ) { function_body }
               74:203 function_expression=>• τfunction * binding_identifier ( ) { function_body }
               74:207 function_expression=>• τfunction ( formal_parameters ) { function_body }
               74:208 function_expression=>• τfunction binding_identifier ( ) { function_body }
               74:209 function_expression=>• τfunction * ( ) { function_body }
               74:211 function_expression=>• τfunction ( ) { function_body }
            */
            if(state=$function_expression(l,state)){
                /*--unique-id--99--DO-NOT-REPLACE*/
                return $short_circuit_expression_goto(l,state,99);
            }
        } else if(defined_token_2d05a4070a3ebcf4(l)/*[class]*/){
            /*peek*/
            /*
               90:245 class_expression=>• τclass binding_identifier class_heritage { class_body }
               90:246 class_expression=>• τclass class_heritage { class_body }
               90:247 class_expression=>• τclass binding_identifier { class_body }
               90:248 class_expression=>• τclass binding_identifier class_heritage { }
               90:249 class_expression=>• τclass { class_body }
               90:250 class_expression=>• τclass class_heritage { }
               90:251 class_expression=>• τclass binding_identifier { }
               90:252 class_expression=>• τclass { }
            */
            if(state=$class_expression(l,state)){
                /*--unique-id--99--DO-NOT-REPLACE*/
                return $short_circuit_expression_goto(l,state,99);
            }
        } else if(l.utf==47/*[/]*/){
            /*assert-production-closure*/
            /*
               150:458 regular_expression_literal=>• / / def$js_identifier
            */
            if(state=$regular_expression_literal(l,state)){
                /*--unique-id--99--DO-NOT-REPLACE*/
                return $short_circuit_expression_goto(l,state,99);
            }
        } else if(l.utf==96/*[`]*/){
            /*peek*/
            /*
               165:497 no_substitute_template=>• ` `
               169:503 template_head=>• ` ${
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(pk.utf==96/*[`]*/){
                /*peek-production-closure*/
                /*
                   165:497 no_substitute_template=>• ` `
                */
                if(state=$no_substitute_template(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $short_circuit_expression_goto(l,state,99);
                }
            } else {
                /*peek-production-closure*/
                /*
                   169:503 template_head=>• ` ${
                */
                if(state=$template_head(l,state)){
                    /*--unique-id--169--DO-NOT-REPLACE*/
                    return $short_circuit_expression_goto(l,state,169);
                }
            }
        } else if(assert_consume(l,state,l.utf==40/*[(]*/)){
            /*consume*/
            /*
               138:425 parenthesized=>( • expression )
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$expression(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    add_reduce(state,3,204);
                    add_reduce(state,1,181);
                    return $short_circuit_expression_goto(l,state,99);
                }
            }
        } else if(defined_token_79b82aa5b55f0605(l)/*[new]*/){
            /*peek*/
            /*
               99:294 member_expression=>• τnew member_expression arguments
               103:300 new_target=>• τnew . τtarget
               98:287 new_expression=>• τnew new_expression
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(pk.utf==46/*[.]*/){
                /*peek-production-closure*/
                /*
                   103:300 new_target=>• τnew . τtarget
                */
                if(state=$new_target(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $short_circuit_expression_goto(l,state,99);
                }
            } else if((assert_table(pk,0x0,0x8194,0x88000000,0x8000001)/*tbl:[ _ ] [ $ ] [ " ] [ ' ] [ [ ] [ { ] [ / ] [ ` ] [ ( ]*/||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
                /*peek*/
                /*
                   99:294 member_expression=>• τnew member_expression arguments
                   98:287 new_expression=>• τnew new_expression
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_79b82aa5b55f0605(l)/*[new]*/)){
                    /*consume*/
                    /*
                       99:294 member_expression=>τnew • member_expression arguments
                       98:287 new_expression=>τnew • new_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if((assert_table(l,0x0,0x8194,0x88000000,0x8000001)/*tbl:[ _ ] [ $ ] [ " ] [ ' ] [ [ ] [ { ] [ / ] [ ` ] [ ( ]*/||l.isID()/*[id]*/)||l.isNum()/*[num]*/){
                        /*peek*/
                        /*
                           99:294 member_expression=>τnew • member_expression arguments
                           98:287 new_expression=>τnew • new_expression
                        */
                        let mk = mark();
                        let anchor = l.copy();
                        let anchor_state = state;
                        /*294,3,1,287,2,1*/
                        /*99*/
                        if(state=$member_expression(l,state)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$arguments(l,state)){
                                /*--unique-id--99--DO-NOT-REPLACE*/
                                add_reduce(state,3,167);
                                return $short_circuit_expression_goto(l,state,99);
                            }
                        }
                        /*294,3,1,287,2,1*/
                        state = reset(mk,anchor,l,anchor_state);
                        if(state=$new_expression(l,state)){
                            /*--unique-id--97--DO-NOT-REPLACE*/
                            add_reduce(state,2,163);
                            return $short_circuit_expression_goto(l,state,97);
                        }
                    }
                }
            }
        } else if(defined_token_8fdd5a50d81134d2(l)/*[super]*/){
            /*peek*/
            /*
               100:295 super_property=>• τsuper . identifier_name
               100:296 super_property=>• τsuper [ expression ]
               105:308 super_call=>• τsuper arguments
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(pk.utf==40/*[(]*/){
                /*peek-production-closure*/
                /*
                   105:308 super_call=>• τsuper arguments
                */
                if(state=$super_call(l,state)){
                    /*--unique-id--104--DO-NOT-REPLACE*/
                    return $short_circuit_expression_goto(l,state,104);
                }
            } else {
                /*peek-production-closure*/
                /*
                   100:295 super_property=>• τsuper . identifier_name
                   100:296 super_property=>• τsuper [ expression ]
                */
                if(state=$super_property(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $short_circuit_expression_goto(l,state,99);
                }
            }
        } else if(defined_token_2ed685dc4925cfa4(l)/*[import]*/){
            /*peek*/
            /*
               102:299 import_meta=>• τimport . τmeta
               106:309 import_call=>• τimport ( assignment_expression )
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(pk.utf==46/*[.]*/){
                /*peek-production-closure*/
                /*
                   102:299 import_meta=>• τimport . τmeta
                */
                if(state=$import_meta(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $short_circuit_expression_goto(l,state,99);
                }
            } else {
                /*peek-production-closure*/
                /*
                   106:309 import_call=>• τimport ( assignment_expression )
                */
                if(state=$import_call(l,state)){
                    /*--unique-id--104--DO-NOT-REPLACE*/
                    return $short_circuit_expression_goto(l,state,104);
                }
            }
        } else if(assert_consume(l,state,defined_token_8ed5fb4bce429503(l)/*[delete]*/)){
            /*consume*/
            /*
               133:403 unary_expression=>τdelete • unary_expression
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$unary_expression(l,state)){
                /*--unique-id--133--DO-NOT-REPLACE*/
                add_reduce(state,2,197);
                return $short_circuit_expression_goto(l,state,133);
            }
        } else if(assert_consume(l,state,defined_token_042ea6dc9657ee07(l)/*[void]*/)){
            /*consume*/
            /*
               133:404 unary_expression=>τvoid • unary_expression
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$unary_expression(l,state)){
                /*--unique-id--133--DO-NOT-REPLACE*/
                add_reduce(state,2,198);
                return $short_circuit_expression_goto(l,state,133);
            }
        } else if(assert_consume(l,state,defined_token_9451180aac506098(l)/*[typeof]*/)){
            /*consume*/
            /*
               133:405 unary_expression=>τtypeof • unary_expression
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$unary_expression(l,state)){
                /*--unique-id--133--DO-NOT-REPLACE*/
                add_reduce(state,2,199);
                return $short_circuit_expression_goto(l,state,133);
            }
        } else if(assert_consume(l,state,defined_token_ded0f96a7228c7c5(l)/*[await]*/)){
            /*consume*/
            /*
               114:341 await_expression=>τawait • unary_expression
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$unary_expression(l,state)){
                /*--unique-id--133--DO-NOT-REPLACE*/
                add_reduce(state,2,182);
                return $short_circuit_expression_goto(l,state,133);
            }
        } else if(assert_consume(l,state,defined_token_99376be254728810(l)/*[true]*/||defined_token_57da255105f722f9(l)/*[false]*/)){
            /*consume*/
            /*
               183:535 boolean_literal=>τtrue •
               183:536 boolean_literal=>τfalse •
            */
            /*--unique-id--99--DO-NOT-REPLACE*/
            add_reduce(state,1,252);
            return $short_circuit_expression_goto(l,state,99);
        } else if(assert_consume(l,state,defined_token_6d4f77707d3e0e5a(l)/*[++]*/||defined_token_f2ef34011f64cef0(l)/*[--]*/)){
            /*consume*/
            /*
               134:414 update_expression=>++ • unary_expression
               134:415 update_expression=>-- • unary_expression
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$unary_expression(l,state)){
                /*--unique-id--133--DO-NOT-REPLACE*/
                add_reduce(state,2,202);
                return $short_circuit_expression_goto(l,state,133);
            }
        } else if(assert_consume(l,state,assert_table(l,0x0,0x2802,0x0,0x40000000)/*tbl:[ + ] [ - ] [ ~ ] [ ! ]*/)){
            /*consume*/
            /*
               133:406 unary_expression=>+ • unary_expression
               133:407 unary_expression=>- • unary_expression
               133:408 unary_expression=>~ • unary_expression
               133:409 unary_expression=>! • unary_expression
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$unary_expression(l,state)){
                /*--unique-id--133--DO-NOT-REPLACE*/
                add_reduce(state,2,200);
                return $short_circuit_expression_goto(l,state,133);
            }
        } else if(assert_consume(l,state,((((def$js_id_symbols_tok_b3199095c9facd2b(l)||defined_token_8f5d282f35165648(l)/*[get]*/)||defined_token_5bca542dce980d9c(l)/*[set]*/)||defined_token_1cb42c7dd41b3a7e(l)/*[target]*/)||defined_token_fcc8b8fe09802878(l)/*[as]*/)||defined_token_14469127dc9c2c1f(l)/*[from]*/)){
            /*consume*/
            /*
               225:688 def$js_identifier=>tk:def$js_id_symbols •
               189:546 unreserved_word=>τget •
               189:547 unreserved_word=>τset •
               189:548 unreserved_word=>τtarget •
               189:549 unreserved_word=>τas •
               189:550 unreserved_word=>τfrom •
            */
            /*--unique-id--99--DO-NOT-REPLACE*/
            add_reduce(state,1,255);
            add_reduce(state,1,254);
            return $short_circuit_expression_goto(l,state,99);
        } else if(l.isNum()/*[num]*/){
            /*peek*/
            /*
               181:533 numeric_literal=>• θnum
               180:532 bigint=>• θnum τn
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(pk.utf==110/*[n]*/){
                /*peek-production-closure*/
                /*
                   180:532 bigint=>• θnum τn
                */
                if(state=$bigint(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $short_circuit_expression_goto(l,state,99);
                }
            } else {
                /*peek-production-closure*/
                /*
                   181:533 numeric_literal=>• θnum
                */
                if(state=$numeric_literal(l,state)){
                    /*--unique-id--99--DO-NOT-REPLACE*/
                    return $short_circuit_expression_goto(l,state,99);
                }
            }
        }
    }
    debug_stack.push({ name:"short_circuit_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $short_circuit_expression_goto(l,state,prod){
    debug_stack.push({ name:"short_circuit_expression GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        switch(prod){
            case 97:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_6d4f77707d3e0e5a(l)/*[++]*/||defined_token_f2ef34011f64cef0(l)/*[--]*/)){
                    /*consume*/
                    /*
                       134:412 update_expression=>left_hand_side_expression ++ •
                       134:413 update_expression=>left_hand_side_expression -- •
                    */
                    /*--unique-id--133--DO-NOT-REPLACE*/
                    add_reduce(state,2,201);
                    prod = 133;
                    continue;
                } else {
                    /*assert-end*/
                    /*
                       134:411 update_expression=>left_hand_side_expression •
                    */
                    /*--unique-id--133--DO-NOT-REPLACE*/
                    prod = 133;
                    continue;
                }
                break;
            case 99:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==91/*[[]*/)){
                    /*consume*/
                    /*
                       99:289 member_expression=>member_expression [ • expression ]
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$expression(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==93/*[]]*/)){
                            /*--unique-id--99--DO-NOT-REPLACE*/
                            add_reduce(state,4,164);
                            prod = 99;
                            continue;
                        }
                    }
                } else if(assert_consume(l,state,l.utf==46/*[.]*/)){
                    /*consume*/
                    /*
                       99:290 member_expression=>member_expression . • identifier_name
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$identifier_name(l,state)){
                        /*--unique-id--99--DO-NOT-REPLACE*/
                        add_reduce(state,3,165);
                        prod = 99;
                        continue;
                    }
                } else if(l.utf==96/*[`]*/){
                    /*peek-production-closure*/
                    /*
                       99:291 member_expression=>member_expression • template_literal
                    */
                    if(state=$template_literal(l,state)){
                        /*--unique-id--99--DO-NOT-REPLACE*/
                        add_reduce(state,2,166);
                        prod = 99;
                        continue;
                    }
                } else if(l.utf==40/*[(]*/){
                    /*peek-production-closure*/
                    /*
                       88:236 cover_call_expression_and_async_arrow_head=>member_expression • arguments
                    */
                    if(state=$arguments(l,state)){
                        /*--unique-id--104--DO-NOT-REPLACE*/
                        add_reduce(state,2,129);
                        prod = 104;
                        continue;
                    }
                } else if(defined_token_675b48fc93d1800c(l)/*[?.]*/){
                    /*peek-production-closure*/
                    /*
                       111:320 optional_expression=>member_expression • optional_chain
                    */
                    if(state=$optional_chain(l,state)){
                        /*--unique-id--111--DO-NOT-REPLACE*/
                        add_reduce(state,2,179);
                        prod = 111;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       98:286 new_expression=>member_expression •
                    */
                    /*--unique-id--97--DO-NOT-REPLACE*/
                    prod = 97;
                    continue;
                }
                break;
            case 104:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==46/*[.]*/)){
                    /*consume*/
                    /*
                       104:301 call_expression=>call_expression . • identifier_name
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$identifier_name(l,state)){
                        /*--unique-id--104--DO-NOT-REPLACE*/
                        add_reduce(state,3,165);
                        prod = 104;
                        continue;
                    }
                } else if(l.utf==40/*[(]*/){
                    /*peek-production-closure*/
                    /*
                       104:304 call_expression=>call_expression • arguments
                    */
                    if(state=$arguments(l,state)){
                        /*--unique-id--104--DO-NOT-REPLACE*/
                        add_reduce(state,2,172);
                        prod = 104;
                        continue;
                    }
                } else if(assert_consume(l,state,l.utf==91/*[[]*/)){
                    /*consume*/
                    /*
                       104:305 call_expression=>call_expression [ • expression ]
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$expression(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==93/*[]]*/)){
                            /*--unique-id--104--DO-NOT-REPLACE*/
                            add_reduce(state,4,164);
                            prod = 104;
                            continue;
                        }
                    }
                } else if(l.utf==96/*[`]*/){
                    /*peek-production-closure*/
                    /*
                       104:307 call_expression=>call_expression • template_literal
                    */
                    if(state=$template_literal(l,state)){
                        /*--unique-id--104--DO-NOT-REPLACE*/
                        add_reduce(state,2,173);
                        prod = 104;
                        continue;
                    }
                } else if(defined_token_675b48fc93d1800c(l)/*[?.]*/){
                    /*peek-production-closure*/
                    /*
                       111:321 optional_expression=>call_expression • optional_chain
                    */
                    if(state=$optional_chain(l,state)){
                        /*--unique-id--111--DO-NOT-REPLACE*/
                        add_reduce(state,2,179);
                        prod = 111;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       97:284 left_hand_side_expression=>call_expression •
                    */
                    /*--unique-id--97--DO-NOT-REPLACE*/
                    prod = 97;
                    continue;
                }
                break;
            case 111:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(defined_token_675b48fc93d1800c(l)/*[?.]*/){
                    /*assert-production-closure*/
                    /*
                       111:322 optional_expression=>optional_expression • optional_chain
                    */
                    if(state=$optional_chain(l,state)){
                        /*--unique-id--111--DO-NOT-REPLACE*/
                        add_reduce(state,2,179);
                        prod = 111;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       97:285 left_hand_side_expression=>optional_expression •
                    */
                    /*--unique-id--97--DO-NOT-REPLACE*/
                    prod = 97;
                    continue;
                }
                break;
            case 119:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_62e66454a337f212(l)/*[||]*/)){
                    /*consume*/
                    /*
                       119:364 logical_or_expression=>logical_or_expression || • logical_and_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$logical_and_expression(l,state)){
                        /*--unique-id--119--DO-NOT-REPLACE*/
                        add_reduce(state,3,186);
                        prod = 119;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       118:361 short_circuit_expression=>logical_or_expression •
                    */
                    /*--unique-id--118--DO-NOT-REPLACE*/
                    prod = 118;
                    continue;
                }
                break;
            case 120:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==38/*[&]*/)){
                    /*consume*/
                    /*
                       120:366 logical_and_expression=>logical_and_expression & • & bitwise_or_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==38/*[&]*/)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$bitwise_or_expression(l,state)){
                            /*--unique-id--120--DO-NOT-REPLACE*/
                            add_reduce(state,4,186);
                            prod = 120;
                            continue;
                        }
                    }
                } else {
                    /*assert-end*/
                    /*
                       119:363 logical_or_expression=>logical_and_expression •
                    */
                    /*--unique-id--119--DO-NOT-REPLACE*/
                    prod = 119;
                    continue;
                }
                break;
            case 121:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(defined_token_bfaf50116b98d6b4(l)/*[??]*/){
                    /*assert-end*/
                    /*
                       122:368 coalesce_expression_head_group_0247_118=>coalesce_expression •
                    */
                    /*--unique-id--123--DO-NOT-REPLACE*/
                    prod = 123;
                    continue;
                } else {
                    /*assert-end*/
                    /*
                       118:362 short_circuit_expression=>coalesce_expression •
                    */
                    /*--unique-id--118--DO-NOT-REPLACE*/
                    prod = 118;
                    continue;
                }
                break;
            case 123:
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_87b2bbc4cf92dae2(l)/*[??]*/)){
                    /*consume*/
                    /*
                       121:367 coalesce_expression=>coalesce_expression_head ?? • bitwise_or_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$bitwise_or_expression(l,state)){
                        /*--unique-id--121--DO-NOT-REPLACE*/
                        add_reduce(state,3,187);
                        prod = 121;
                        continue;
                    }
                }
                break;
            case 124:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==124/*[|]*/)){
                    /*consume*/
                    /*
                       124:372 bitwise_or_expression=>bitwise_or_expression | • bitwise_xor_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$bitwise_xor_expression(l,state)){
                        /*--unique-id--124--DO-NOT-REPLACE*/
                        add_reduce(state,3,188);
                        prod = 124;
                        continue;
                    }
                } else if(defined_token_87b2bbc4cf92dae2(l)/*[??]*/){
                    /*assert-end*/
                    /*
                       122:369 coalesce_expression_head_group_0247_118=>bitwise_or_expression •
                    */
                    /*--unique-id--123--DO-NOT-REPLACE*/
                    prod = 123;
                    continue;
                } else {
                    /*assert-end*/
                    /*
                       120:365 logical_and_expression=>bitwise_or_expression •
                    */
                    /*--unique-id--120--DO-NOT-REPLACE*/
                    prod = 120;
                    continue;
                }
                break;
            case 125:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==94/*[^]*/)){
                    /*consume*/
                    /*
                       125:374 bitwise_xor_expression=>bitwise_xor_expression ^ • bitwise_and_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$bitwise_and_expression(l,state)){
                        /*--unique-id--125--DO-NOT-REPLACE*/
                        add_reduce(state,3,188);
                        prod = 125;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       124:371 bitwise_or_expression=>bitwise_xor_expression •
                    */
                    /*--unique-id--124--DO-NOT-REPLACE*/
                    prod = 124;
                    continue;
                }
                break;
            case 126:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==38/*[&]*/)){
                    /*consume*/
                    /*
                       126:376 bitwise_and_expression=>bitwise_and_expression & • equality_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$equality_expression(l,state)){
                        /*--unique-id--126--DO-NOT-REPLACE*/
                        add_reduce(state,3,188);
                        prod = 126;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       125:373 bitwise_xor_expression=>bitwise_and_expression •
                    */
                    /*--unique-id--125--DO-NOT-REPLACE*/
                    prod = 125;
                    continue;
                }
                break;
            case 127:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_4df9552a310b74e2(l)/*[==] [===]*/||defined_token_04e94f0279c3936b(l)/*[!=] [!==]*/)){
                    /*consume*/
                    /*
                       127:378 equality_expression=>equality_expression == • relational_expression
                       127:379 equality_expression=>equality_expression != • relational_expression
                       127:380 equality_expression=>equality_expression === • relational_expression
                       127:381 equality_expression=>equality_expression !== • relational_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$relational_expression(l,state)){
                        /*--unique-id--127--DO-NOT-REPLACE*/
                        add_reduce(state,3,189);
                        prod = 127;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       126:375 bitwise_and_expression=>equality_expression •
                    */
                    /*--unique-id--126--DO-NOT-REPLACE*/
                    prod = 126;
                    continue;
                }
                break;
            case 128:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_8bbb4e33781aec74(l)/*[instanceof]*/)){
                    /*consume*/
                    /*
                       128:387 relational_expression=>relational_expression τinstanceof • shift_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$shift_expression(l,state)){
                        /*--unique-id--128--DO-NOT-REPLACE*/
                        add_reduce(state,3,191);
                        prod = 128;
                        continue;
                    }
                } else if(assert_consume(l,state,defined_token_b910302f4210711c(l)/*[in]*/)){
                    /*consume*/
                    /*
                       128:388 relational_expression=>relational_expression τin • shift_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$shift_expression(l,state)){
                        /*--unique-id--128--DO-NOT-REPLACE*/
                        add_reduce(state,3,192);
                        prod = 128;
                        continue;
                    }
                } else if(assert_consume(l,state,((defined_token_7c7dc8357e27bfc9(l)/*[<=]*/||defined_token_dad2c38b0a2035e1(l)/*[>=]*/)||(l.utf==60/*[<]*/))||(l.utf==62/*[>]*/))){
                    /*consume*/
                    /*
                       128:383 relational_expression=>relational_expression < • shift_expression
                       128:384 relational_expression=>relational_expression > • shift_expression
                       128:385 relational_expression=>relational_expression <= • shift_expression
                       128:386 relational_expression=>relational_expression >= • shift_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$shift_expression(l,state)){
                        /*--unique-id--128--DO-NOT-REPLACE*/
                        add_reduce(state,3,190);
                        prod = 128;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       127:377 equality_expression=>relational_expression •
                    */
                    /*--unique-id--127--DO-NOT-REPLACE*/
                    prod = 127;
                    continue;
                }
                break;
            case 129:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_bc9f32cdea34416c(l)/*[<<]*/||defined_token_910c81aa02511c5e(l)/*[>>] [>>>]*/)){
                    /*consume*/
                    /*
                       129:390 shift_expression=>shift_expression << • additive_expression
                       129:391 shift_expression=>shift_expression >> • additive_expression
                       129:392 shift_expression=>shift_expression >>> • additive_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$additive_expression(l,state)){
                        /*--unique-id--129--DO-NOT-REPLACE*/
                        add_reduce(state,3,193);
                        prod = 129;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       128:382 relational_expression=>shift_expression •
                    */
                    /*--unique-id--128--DO-NOT-REPLACE*/
                    prod = 128;
                    continue;
                }
                break;
            case 130:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,(l.utf==43/*[+]*/)||(l.utf==45/*[-]*/))){
                    /*consume*/
                    /*
                       130:394 additive_expression=>additive_expression + • multiplicative_expression
                       130:395 additive_expression=>additive_expression - • multiplicative_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$multiplicative_expression(l,state)){
                        /*--unique-id--130--DO-NOT-REPLACE*/
                        add_reduce(state,3,194);
                        prod = 130;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       129:389 shift_expression=>additive_expression •
                    */
                    /*--unique-id--129--DO-NOT-REPLACE*/
                    prod = 129;
                    continue;
                }
                break;
            case 131:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,assert_table(l,0x0,0x8420,0x0,0x0)/*tbl:[ * ] [ / ] [ % ]*/)){
                    /*consume*/
                    /*
                       131:397 multiplicative_expression=>multiplicative_expression * • exponentiation_expression
                       131:398 multiplicative_expression=>multiplicative_expression / • exponentiation_expression
                       131:399 multiplicative_expression=>multiplicative_expression % • exponentiation_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$exponentiation_expression(l,state)){
                        /*--unique-id--131--DO-NOT-REPLACE*/
                        add_reduce(state,3,195);
                        prod = 131;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       130:393 additive_expression=>multiplicative_expression •
                    */
                    /*--unique-id--130--DO-NOT-REPLACE*/
                    prod = 130;
                    continue;
                }
                break;
            case 133:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(assert_consume(l,state,defined_token_1fa4a9b14e1fe8cc(l)/*[asteriskasterisk]*/)){
                    /*consume*/
                    /*
                       132:401 exponentiation_expression=>unary_expression ** • exponentiation_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$exponentiation_expression(l,state)){
                        /*--unique-id--131--DO-NOT-REPLACE*/
                        add_reduce(state,3,196);
                        prod = 131;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       132:400 exponentiation_expression=>unary_expression •
                    */
                    /*--unique-id--131--DO-NOT-REPLACE*/
                    prod = 131;
                    continue;
                }
                break;
            case 169:
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(l)||defined_token_d8f9d336d83ac87c(l)/*[yield]*/)||defined_token_670f23e41126e00b(l)/*[async] [as] [await]*/)||defined_token_99035833d16742d9(l)/*[new] [null]*/)||defined_token_d38e0913b811b457(l)/*[super] [set]*/)||defined_token_2ed685dc4925cfa4(l)/*[import]*/)||defined_token_ca53d8e93addfaf5(l)/*[this] [target] [true] [typeof]*/)||defined_token_7b465f3c7dd55e63(l)/*[function] [from] [false]*/)||defined_token_2d05a4070a3ebcf4(l)/*[class]*/)||defined_token_8f5d282f35165648(l)/*[get]*/)||defined_token_8ed5fb4bce429503(l)/*[delete]*/)||defined_token_042ea6dc9657ee07(l)/*[void]*/)||defined_token_6d4f77707d3e0e5a(l)/*[++]*/)||defined_token_f2ef34011f64cef0(l)/*[--]*/)||assert_table(l,0x0,0xa986,0x8000000,0x48000001)/*tbl:[ ( ] [ [ ] [ { ] [ / ] [ " ] [ ' ] [ ` ] [ + ] [ - ] [ ~ ] [ ! ]*/)||l.isNum()/*[num]*/){
                    /*assert-production-closure*/
                    /*
                       166:498 substitute_template=>template_head • expression template_spans
                    */
                    if(state=$expression(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$template_spans(l,state)){
                            /*--unique-id--99--DO-NOT-REPLACE*/
                            add_reduce(state,3,239);
                            prod = 99;
                            continue;
                        }
                    }
                }
                break;
        }
        break;
    }
    debug_stack.push({ name:"short_circuit_expression GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==118);
}
/*production name: logical_and_expression
            grammar index: 120
            bodies:
	120:365 logical_and_expression=>• bitwise_or_expression - 
		120:366 logical_and_expression=>• logical_and_expression & & bitwise_or_expression - 
            compile time: 14.126ms*/;
function $logical_and_expression(l,state){
    debug_stack.push({ name:"logical_and_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$bitwise_or_expression(l,state)){
        /*--unique-id--120--DO-NOT-REPLACE*/
        return $logical_and_expression_goto(l,state,120);
    }
    debug_stack.push({ name:"logical_and_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $logical_and_expression_goto(l,state,prod){
    debug_stack.push({ name:"logical_and_expression GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(non_capture_bde7550a3d6b8d46(l)/*[nl]*/){
            return state;
        }
        if(assert_consume(l,state,l.utf==38/*[&]*/)){
            /*consume*/
            /*
               120:366 logical_and_expression=>logical_and_expression & • & bitwise_or_expression
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,l.utf==38/*[&]*/)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(state=$bitwise_or_expression(l,state)){
                    /*--unique-id--120--DO-NOT-REPLACE*/
                    add_reduce(state,4,186);
                    prod = 120;
                    continue;
                }
            }
        }
        break;
    }
    debug_stack.push({ name:"logical_and_expression GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==120);
}
/*production name: bitwise_or_expression
            grammar index: 124
            bodies:
	124:371 bitwise_or_expression=>• bitwise_xor_expression - 
		124:372 bitwise_or_expression=>• bitwise_or_expression | bitwise_xor_expression - 
            compile time: 14.1ms*/;
function $bitwise_or_expression(l,state){
    debug_stack.push({ name:"bitwise_or_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$bitwise_xor_expression(l,state)){
        /*--unique-id--124--DO-NOT-REPLACE*/
        return $bitwise_or_expression_goto(l,state,124);
    }
    debug_stack.push({ name:"bitwise_or_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $bitwise_or_expression_goto(l,state,prod){
    debug_stack.push({ name:"bitwise_or_expression GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(non_capture_bde7550a3d6b8d46(l)/*[nl]*/||defined_token_06a0f520696bd72c(l)/*[||]*/){
            return state;
        }
        if(assert_consume(l,state,l.utf==124/*[|]*/)){
            /*consume*/
            /*
               124:372 bitwise_or_expression=>bitwise_or_expression | • bitwise_xor_expression
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$bitwise_xor_expression(l,state)){
                /*--unique-id--124--DO-NOT-REPLACE*/
                add_reduce(state,3,188);
                prod = 124;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"bitwise_or_expression GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==124);
}
/*production name: bitwise_xor_expression
            grammar index: 125
            bodies:
	125:373 bitwise_xor_expression=>• bitwise_and_expression - 
		125:374 bitwise_xor_expression=>• bitwise_xor_expression ^ bitwise_and_expression - 
            compile time: 14.387ms*/;
function $bitwise_xor_expression(l,state){
    debug_stack.push({ name:"bitwise_xor_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$bitwise_and_expression(l,state)){
        /*--unique-id--125--DO-NOT-REPLACE*/
        return $bitwise_xor_expression_goto(l,state,125);
    }
    debug_stack.push({ name:"bitwise_xor_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $bitwise_xor_expression_goto(l,state,prod){
    debug_stack.push({ name:"bitwise_xor_expression GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(non_capture_bde7550a3d6b8d46(l)/*[nl]*/){
            return state;
        }
        if(assert_consume(l,state,l.utf==94/*[^]*/)){
            /*consume*/
            /*
               125:374 bitwise_xor_expression=>bitwise_xor_expression ^ • bitwise_and_expression
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$bitwise_and_expression(l,state)){
                /*--unique-id--125--DO-NOT-REPLACE*/
                add_reduce(state,3,188);
                prod = 125;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"bitwise_xor_expression GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==125);
}
/*production name: bitwise_and_expression
            grammar index: 126
            bodies:
	126:375 bitwise_and_expression=>• equality_expression - 
		126:376 bitwise_and_expression=>• bitwise_and_expression & equality_expression - 
            compile time: 12.447ms*/;
function $bitwise_and_expression(l,state){
    debug_stack.push({ name:"bitwise_and_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$equality_expression(l,state)){
        /*--unique-id--126--DO-NOT-REPLACE*/
        return $bitwise_and_expression_goto(l,state,126);
    }
    debug_stack.push({ name:"bitwise_and_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $bitwise_and_expression_goto(l,state,prod){
    debug_stack.push({ name:"bitwise_and_expression GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(non_capture_bde7550a3d6b8d46(l)/*[nl]*/){
            return state;
        }
        if(assert_consume(l,state,l.utf==38/*[&]*/)){
            /*consume*/
            /*
               126:376 bitwise_and_expression=>bitwise_and_expression & • equality_expression
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$equality_expression(l,state)){
                /*--unique-id--126--DO-NOT-REPLACE*/
                add_reduce(state,3,188);
                prod = 126;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"bitwise_and_expression GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==126);
}
/*production name: equality_expression
            grammar index: 127
            bodies:
	127:377 equality_expression=>• relational_expression - 
		127:378 equality_expression=>• equality_expression == relational_expression - 
		127:379 equality_expression=>• equality_expression != relational_expression - 
		127:380 equality_expression=>• equality_expression === relational_expression - 
		127:381 equality_expression=>• equality_expression !== relational_expression - 
            compile time: 16.68ms*/;
function $equality_expression(l,state){
    debug_stack.push({ name:"equality_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$relational_expression(l,state)){
        /*--unique-id--127--DO-NOT-REPLACE*/
        return $equality_expression_goto(l,state,127);
    }
    debug_stack.push({ name:"equality_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $equality_expression_goto(l,state,prod){
    debug_stack.push({ name:"equality_expression GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(non_capture_bde7550a3d6b8d46(l)/*[nl]*/){
            return state;
        }
        if(assert_consume(l,state,defined_token_4df9552a310b74e2(l)/*[==] [===]*/||defined_token_04e94f0279c3936b(l)/*[!=] [!==]*/)){
            /*consume*/
            /*
               127:378 equality_expression=>equality_expression == • relational_expression
               127:379 equality_expression=>equality_expression != • relational_expression
               127:380 equality_expression=>equality_expression === • relational_expression
               127:381 equality_expression=>equality_expression !== • relational_expression
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$relational_expression(l,state)){
                /*--unique-id--127--DO-NOT-REPLACE*/
                add_reduce(state,3,189);
                prod = 127;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"equality_expression GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==127);
}
/*production name: relational_expression
            grammar index: 128
            bodies:
	128:382 relational_expression=>• shift_expression - 
		128:383 relational_expression=>• relational_expression < shift_expression - 
		128:384 relational_expression=>• relational_expression > shift_expression - 
		128:385 relational_expression=>• relational_expression <= shift_expression - 
		128:386 relational_expression=>• relational_expression >= shift_expression - 
		128:387 relational_expression=>• relational_expression τinstanceof shift_expression - 
		128:388 relational_expression=>• relational_expression τin shift_expression - 
            compile time: 26.414ms*/;
function $relational_expression(l,state){
    debug_stack.push({ name:"relational_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$shift_expression(l,state)){
        /*--unique-id--128--DO-NOT-REPLACE*/
        return $relational_expression_goto(l,state,128);
    }
    debug_stack.push({ name:"relational_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $relational_expression_goto(l,state,prod){
    debug_stack.push({ name:"relational_expression GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(non_capture_bde7550a3d6b8d46(l)/*[nl]*/){
            return state;
        }
        if(assert_consume(l,state,defined_token_8bbb4e33781aec74(l)/*[instanceof]*/)){
            /*consume*/
            /*
               128:387 relational_expression=>relational_expression τinstanceof • shift_expression
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$shift_expression(l,state)){
                /*--unique-id--128--DO-NOT-REPLACE*/
                add_reduce(state,3,191);
                prod = 128;
                continue;
            }
        } else if(assert_consume(l,state,defined_token_b910302f4210711c(l)/*[in]*/)){
            /*consume*/
            /*
               128:388 relational_expression=>relational_expression τin • shift_expression
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$shift_expression(l,state)){
                /*--unique-id--128--DO-NOT-REPLACE*/
                add_reduce(state,3,192);
                prod = 128;
                continue;
            }
        } else if(assert_consume(l,state,((defined_token_7c7dc8357e27bfc9(l)/*[<=]*/||defined_token_dad2c38b0a2035e1(l)/*[>=]*/)||(l.utf==60/*[<]*/))||(l.utf==62/*[>]*/))){
            /*consume*/
            /*
               128:383 relational_expression=>relational_expression < • shift_expression
               128:384 relational_expression=>relational_expression > • shift_expression
               128:385 relational_expression=>relational_expression <= • shift_expression
               128:386 relational_expression=>relational_expression >= • shift_expression
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$shift_expression(l,state)){
                /*--unique-id--128--DO-NOT-REPLACE*/
                add_reduce(state,3,190);
                prod = 128;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"relational_expression GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==128);
}
/*production name: shift_expression
            grammar index: 129
            bodies:
	129:389 shift_expression=>• additive_expression - 
		129:390 shift_expression=>• shift_expression << additive_expression - 
		129:391 shift_expression=>• shift_expression >> additive_expression - 
		129:392 shift_expression=>• shift_expression >>> additive_expression - 
            compile time: 13.353ms*/;
function $shift_expression(l,state){
    debug_stack.push({ name:"shift_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$additive_expression(l,state)){
        /*--unique-id--129--DO-NOT-REPLACE*/
        return $shift_expression_goto(l,state,129);
    }
    debug_stack.push({ name:"shift_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $shift_expression_goto(l,state,prod){
    debug_stack.push({ name:"shift_expression GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(non_capture_bde7550a3d6b8d46(l)/*[nl]*/){
            return state;
        }
        if(assert_consume(l,state,defined_token_1110717de6c46549(l)/*[<<]*/||defined_token_910c81aa02511c5e(l)/*[>>] [>>>]*/)){
            /*consume*/
            /*
               129:390 shift_expression=>shift_expression << • additive_expression
               129:391 shift_expression=>shift_expression >> • additive_expression
               129:392 shift_expression=>shift_expression >>> • additive_expression
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$additive_expression(l,state)){
                /*--unique-id--129--DO-NOT-REPLACE*/
                add_reduce(state,3,193);
                prod = 129;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"shift_expression GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==129);
}
/*production name: additive_expression
            grammar index: 130
            bodies:
	130:393 additive_expression=>• multiplicative_expression - 
		130:394 additive_expression=>• additive_expression + multiplicative_expression - 
		130:395 additive_expression=>• additive_expression - multiplicative_expression - 
            compile time: 11.404ms*/;
function $additive_expression(l,state){
    debug_stack.push({ name:"additive_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$multiplicative_expression(l,state)){
        /*--unique-id--130--DO-NOT-REPLACE*/
        return $additive_expression_goto(l,state,130);
    }
    debug_stack.push({ name:"additive_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $additive_expression_goto(l,state,prod){
    debug_stack.push({ name:"additive_expression GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(non_capture_bde7550a3d6b8d46(l)/*[nl]*/){
            return state;
        }
        if(assert_consume(l,state,(l.utf==43/*[+]*/)||(l.utf==45/*[-]*/))){
            /*consume*/
            /*
               130:394 additive_expression=>additive_expression + • multiplicative_expression
               130:395 additive_expression=>additive_expression - • multiplicative_expression
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$multiplicative_expression(l,state)){
                /*--unique-id--130--DO-NOT-REPLACE*/
                add_reduce(state,3,194);
                prod = 130;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"additive_expression GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==130);
}
/*production name: multiplicative_expression
            grammar index: 131
            bodies:
	131:396 multiplicative_expression=>• exponentiation_expression - 
		131:397 multiplicative_expression=>• multiplicative_expression * exponentiation_expression - 
		131:398 multiplicative_expression=>• multiplicative_expression / exponentiation_expression - 
		131:399 multiplicative_expression=>• multiplicative_expression % exponentiation_expression - 
            compile time: 19.717ms*/;
function $multiplicative_expression(l,state){
    debug_stack.push({ name:"multiplicative_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$exponentiation_expression(l,state)){
        /*--unique-id--131--DO-NOT-REPLACE*/
        return $multiplicative_expression_goto(l,state,131);
    }
    debug_stack.push({ name:"multiplicative_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $multiplicative_expression_goto(l,state,prod){
    debug_stack.push({ name:"multiplicative_expression GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(non_capture_bde7550a3d6b8d46(l)/*[nl]*/){
            return state;
        }
        if(assert_consume(l,state,assert_table(l,0x0,0x8420,0x0,0x0)/*tbl:[ * ] [ / ] [ % ]*/)){
            /*consume*/
            /*
               131:397 multiplicative_expression=>multiplicative_expression * • exponentiation_expression
               131:398 multiplicative_expression=>multiplicative_expression / • exponentiation_expression
               131:399 multiplicative_expression=>multiplicative_expression % • exponentiation_expression
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$exponentiation_expression(l,state)){
                /*--unique-id--131--DO-NOT-REPLACE*/
                add_reduce(state,3,195);
                prod = 131;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"multiplicative_expression GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==131);
}
/*production name: exponentiation_expression
            grammar index: 132
            bodies:
	132:400 exponentiation_expression=>• unary_expression - 
		132:401 exponentiation_expression=>• unary_expression ** exponentiation_expression - 
            compile time: 8.026ms*/;
function $exponentiation_expression(l,state){
    debug_stack.push({ name:"exponentiation_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$unary_expression(l,state)){
        /*assert*/
        /*
           132:400 exponentiation_expression=>• unary_expression
           132:401 exponentiation_expression=>• unary_expression ** exponentiation_expression
        */
        sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
        if(assert_consume(l,state,defined_token_1fa4a9b14e1fe8cc(l)/*[asteriskasterisk]*/)){
            /*consume*/
            /*
               132:401 exponentiation_expression=>unary_expression ** • exponentiation_expression
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$exponentiation_expression(l,state)){
                /*--unique-id--132--DO-NOT-REPLACE*/
                add_reduce(state,3,196);
                debug_stack.push({ name:"exponentiation_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else {
            /*assert-end*/
            /*
               132:400 exponentiation_expression=>unary_expression •
            */
            /*--unique-id--132--DO-NOT-REPLACE*/
            debug_stack.push({ name:"exponentiation_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"exponentiation_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: unary_expression
            grammar index: 133
            bodies:
	133:402 unary_expression=>• update_expression - 
		133:403 unary_expression=>• τdelete unary_expression - 
		133:404 unary_expression=>• τvoid unary_expression - 
		133:405 unary_expression=>• τtypeof unary_expression - 
		133:406 unary_expression=>• + unary_expression - 
		133:407 unary_expression=>• - unary_expression - 
		133:408 unary_expression=>• ~ unary_expression - 
		133:409 unary_expression=>• ! unary_expression - 
		133:410 unary_expression=>• await_expression - 
            compile time: 17.359ms*/;
function $unary_expression(l,state){
    debug_stack.push({ name:"unary_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_139af7e0759e829f(l)/*[delete]*/)){
        /*consume*/
        /*
           133:403 unary_expression=>τdelete • unary_expression
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$unary_expression(l,state)){
            /*--unique-id--133--DO-NOT-REPLACE*/
            add_reduce(state,2,197);
            debug_stack.push({ name:"unary_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else if(assert_consume(l,state,defined_token_330b5cfc72831f04(l)/*[void]*/)){
        /*consume*/
        /*
           133:404 unary_expression=>τvoid • unary_expression
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$unary_expression(l,state)){
            /*--unique-id--133--DO-NOT-REPLACE*/
            add_reduce(state,2,198);
            debug_stack.push({ name:"unary_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else if(assert_consume(l,state,defined_token_c3b14b29a9dcf48e(l)/*[typeof]*/)){
        /*consume*/
        /*
           133:405 unary_expression=>τtypeof • unary_expression
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$unary_expression(l,state)){
            /*--unique-id--133--DO-NOT-REPLACE*/
            add_reduce(state,2,199);
            debug_stack.push({ name:"unary_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else if(defined_token_44aa3f48541f3402(l)/*[await]*/){
        /*peek-production-closure*/
        /*
           133:410 unary_expression=>• await_expression
        */
        if(state=$await_expression(l,state)){
            /*--unique-id--133--DO-NOT-REPLACE*/
            debug_stack.push({ name:"unary_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else if(assert_consume(l,state,assert_table(l,0x0,0x2802,0x0,0x40000000)/*tbl:[ + ] [ - ] [ ~ ] [ ! ]*/)){
        /*consume*/
        /*
           133:406 unary_expression=>+ • unary_expression
           133:407 unary_expression=>- • unary_expression
           133:408 unary_expression=>~ • unary_expression
           133:409 unary_expression=>! • unary_expression
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$unary_expression(l,state)){
            /*--unique-id--133--DO-NOT-REPLACE*/
            add_reduce(state,2,200);
            debug_stack.push({ name:"unary_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           133:402 unary_expression=>• update_expression
        */
        if(state=$update_expression(l,state)){
            /*--unique-id--133--DO-NOT-REPLACE*/
            debug_stack.push({ name:"unary_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"unary_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: update_expression
            grammar index: 134
            bodies:
	134:411 update_expression=>• left_hand_side_expression - 
		134:412 update_expression=>• left_hand_side_expression ++ - 
		134:413 update_expression=>• left_hand_side_expression -- - 
		134:414 update_expression=>• ++ unary_expression - 
		134:415 update_expression=>• -- unary_expression - 
            compile time: 132.836ms*/;
function $update_expression(l,state){
    debug_stack.push({ name:"update_expression RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_67a732a27c736a2f(l)/*[++]*/||defined_token_fe70b6f5a727a201(l)/*[--]*/)){
        /*consume*/
        /*
           134:414 update_expression=>++ • unary_expression
           134:415 update_expression=>-- • unary_expression
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$unary_expression(l,state)){
            /*--unique-id--134--DO-NOT-REPLACE*/
            add_reduce(state,2,202);
            debug_stack.push({ name:"update_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           134:411 update_expression=>• left_hand_side_expression
           134:412 update_expression=>• left_hand_side_expression ++
           134:413 update_expression=>• left_hand_side_expression --
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$left_hand_side_expression(l,state)){
            /*assert*/
            /*
               134:411 update_expression=>• left_hand_side_expression
               134:412 update_expression=>• left_hand_side_expression ++
               134:413 update_expression=>• left_hand_side_expression --
            */
            sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
            if(assert_consume(l,state,defined_token_6d4f77707d3e0e5a(l)/*[++]*/||defined_token_f2ef34011f64cef0(l)/*[--]*/)){
                /*consume*/
                /*
                   134:412 update_expression=>left_hand_side_expression ++ •
                   134:413 update_expression=>left_hand_side_expression -- •
                */
                /*--unique-id--134--DO-NOT-REPLACE*/
                add_reduce(state,2,201);
                debug_stack.push({ name:"update_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            } else {
                /*assert-end*/
                /*
                   134:411 update_expression=>left_hand_side_expression •
                */
                /*--unique-id--134--DO-NOT-REPLACE*/
                debug_stack.push({ name:"update_expression RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    }
    debug_stack.push({ name:"update_expression RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119
            grammar index: 135
            bodies:
	135:416 cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119=>• ... binding_identifier - 
            compile time: 3.369ms*/;
function $cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119(l,state){
    debug_stack.push({ name:"cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_f47f6de2d28c24e5(l)/*[...]*/)){
        /*consume*/
        /*
           135:416 cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119=>... • binding_identifier
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$identifier(l,state)){
            /*--unique-id--135--DO-NOT-REPLACE*/
            add_reduce(state,1,126);
            add_reduce(state,2,178);
            debug_stack.push({ name:"cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120
            grammar index: 136
            bodies:
	136:417 cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120=>• ... binding_pattern - 
            compile time: 2.506ms*/;
function $cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120(l,state){
    debug_stack.push({ name:"cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_f47f6de2d28c24e5(l)/*[...]*/)){
        /*consume*/
        /*
           136:417 cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120=>... • binding_pattern
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$binding_pattern(l,state)){
            /*--unique-id--136--DO-NOT-REPLACE*/
            add_reduce(state,2,178);
            debug_stack.push({ name:"cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: cover_parenthesized_expression_and_arrow_parameter_list
            grammar index: 137
            bodies:
	137:418 cover_parenthesized_expression_and_arrow_parameter_list=>• ( ) - 
		137:419 cover_parenthesized_expression_and_arrow_parameter_list=>• ( expression , ) - 
		137:420 cover_parenthesized_expression_and_arrow_parameter_list=>• ( cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 ) - 
		137:421 cover_parenthesized_expression_and_arrow_parameter_list=>• ( cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 ) - 
		137:422 cover_parenthesized_expression_and_arrow_parameter_list=>• ( expression , cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 ) - 
		137:423 cover_parenthesized_expression_and_arrow_parameter_list=>• ( expression , cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 ) - 
		137:424 cover_parenthesized_expression_and_arrow_parameter_list=>• parenthesized - 
            compile time: 50.833ms*/;
function $cover_parenthesized_expression_and_arrow_parameter_list(l,state){
    debug_stack.push({ name:"cover_parenthesized_expression_and_arrow_parameter_list RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(l.utf==40/*[(]*/){
        /*peek*/
        /*
           137:418 cover_parenthesized_expression_and_arrow_parameter_list=>• ( )
           137:419 cover_parenthesized_expression_and_arrow_parameter_list=>• ( expression , )
           137:420 cover_parenthesized_expression_and_arrow_parameter_list=>• ( cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
           137:421 cover_parenthesized_expression_and_arrow_parameter_list=>• ( cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
           137:422 cover_parenthesized_expression_and_arrow_parameter_list=>• ( expression , cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
           137:423 cover_parenthesized_expression_and_arrow_parameter_list=>• ( expression , cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
           137:424 cover_parenthesized_expression_and_arrow_parameter_list=>• parenthesized
        */
        let pk = l.copy();
        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
        if(pk.utf==41/*[)]*/){
            /*peek-production-closure*/
            /*
               137:418 cover_parenthesized_expression_and_arrow_parameter_list=>• ( )
            */
            if(assert_consume(l,state,l.utf==40/*[(]*/)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                    /*--unique-id--137--DO-NOT-REPLACE*/
                    add_reduce(state,2,203);
                    debug_stack.push({ name:"cover_parenthesized_expression_and_arrow_parameter_list RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        } else if(defined_token_f47f6de2d28c24e5(pk)/*[...]*/){
            /*peek*/
            /*
               137:420 cover_parenthesized_expression_and_arrow_parameter_list=>• ( cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
               137:421 cover_parenthesized_expression_and_arrow_parameter_list=>• ( cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,l.utf==40/*[(]*/)){
                /*consume*/
                /*
                   137:420 cover_parenthesized_expression_and_arrow_parameter_list=>( • cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
                   137:421 cover_parenthesized_expression_and_arrow_parameter_list=>( • cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(defined_token_f47f6de2d28c24e5(l)/*[...]*/){
                    /*peek*/
                    /*
                       137:420 cover_parenthesized_expression_and_arrow_parameter_list=>( • cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
                       137:421 cover_parenthesized_expression_and_arrow_parameter_list=>( • cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
                    */
                    let pk = l.copy();
                    sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                    if((pk.utf==123/*[{]*/)||(pk.utf==91/*[[]*/)){
                        /*peek-production-closure*/
                        /*
                           137:421 cover_parenthesized_expression_and_arrow_parameter_list=>( • cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
                        */
                        if(state=$cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120(l,state)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                /*--unique-id--137--DO-NOT-REPLACE*/
                                add_reduce(state,3,204);
                                debug_stack.push({ name:"cover_parenthesized_expression_and_arrow_parameter_list RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                return state;
                            }
                        }
                    } else {
                        /*peek-production-closure*/
                        /*
                           137:420 cover_parenthesized_expression_and_arrow_parameter_list=>( • cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
                        */
                        if(state=$cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119(l,state)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                /*--unique-id--137--DO-NOT-REPLACE*/
                                add_reduce(state,3,204);
                                debug_stack.push({ name:"cover_parenthesized_expression_and_arrow_parameter_list RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                return state;
                            }
                        }
                    }
                }
            }
        } else if((((defined_token_6d4f77707d3e0e5a(pk)/*[++]*/||defined_token_f2ef34011f64cef0(pk)/*[--]*/)||assert_table(pk,0x0,0xa996,0x88000000,0x48000001)/*tbl:[ ( ] [ [ ] [ { ] [ / ] [ " ] [ ' ] [ ` ] [ _ ] [ $ ] [ + ] [ - ] [ ~ ] [ ! ]*/)||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
            /*peek*/
            /*
               137:419 cover_parenthesized_expression_and_arrow_parameter_list=>• ( expression , )
               137:422 cover_parenthesized_expression_and_arrow_parameter_list=>• ( expression , cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
               137:423 cover_parenthesized_expression_and_arrow_parameter_list=>• ( expression , cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
               137:424 cover_parenthesized_expression_and_arrow_parameter_list=>• parenthesized
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,l.utf==40/*[(]*/)){
                /*consume*/
                /*
                   137:419 cover_parenthesized_expression_and_arrow_parameter_list=>( • expression , )
                   137:422 cover_parenthesized_expression_and_arrow_parameter_list=>( • expression , cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
                   137:423 cover_parenthesized_expression_and_arrow_parameter_list=>( • expression , cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
                   138:425 parenthesized=>( • expression )
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(state=$expression(l,state)){
                    /*assert*/
                    /*
                       137:419 cover_parenthesized_expression_and_arrow_parameter_list=>( • expression , )
                       137:422 cover_parenthesized_expression_and_arrow_parameter_list=>( • expression , cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
                       137:423 cover_parenthesized_expression_and_arrow_parameter_list=>( • expression , cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
                       138:425 parenthesized=>( • expression )
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(l.utf==44/*[,]*/){
                        /*peek*/
                        /*
                           137:419 cover_parenthesized_expression_and_arrow_parameter_list=>( expression • , )
                           137:422 cover_parenthesized_expression_and_arrow_parameter_list=>( expression • , cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
                           137:423 cover_parenthesized_expression_and_arrow_parameter_list=>( expression • , cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
                        */
                        let pk = l.copy();
                        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                        if(pk.utf==41/*[)]*/){
                            /*peek*/
                            /*
                               137:419 cover_parenthesized_expression_and_arrow_parameter_list=>( expression • , )
                            */
                            if(assert_consume(l,state,l.utf==44/*[,]*/)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                    /*--unique-id--137--DO-NOT-REPLACE*/
                                    add_reduce(state,4,204);
                                    debug_stack.push({ name:"cover_parenthesized_expression_and_arrow_parameter_list RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                    return state;
                                }
                            }
                        } else if(defined_token_f47f6de2d28c24e5(pk)/*[...]*/){
                            /*peek*/
                            /*
                               137:422 cover_parenthesized_expression_and_arrow_parameter_list=>( expression • , cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
                               137:423 cover_parenthesized_expression_and_arrow_parameter_list=>( expression • , cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==44/*[,]*/)){
                                /*consume*/
                                /*
                                   137:422 cover_parenthesized_expression_and_arrow_parameter_list=>( expression , • cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
                                   137:423 cover_parenthesized_expression_and_arrow_parameter_list=>( expression , • cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(defined_token_f47f6de2d28c24e5(l)/*[...]*/){
                                    /*peek*/
                                    /*
                                       137:422 cover_parenthesized_expression_and_arrow_parameter_list=>( expression , • cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
                                       137:423 cover_parenthesized_expression_and_arrow_parameter_list=>( expression , • cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
                                    */
                                    let pk = l.copy();
                                    sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                    if((pk.utf==123/*[{]*/)||(pk.utf==91/*[[]*/)){
                                        /*peek-production-closure*/
                                        /*
                                           137:423 cover_parenthesized_expression_and_arrow_parameter_list=>( expression , • cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120 )
                                        */
                                        if(state=$cover_parenthesized_expression_and_arrow_parameter_list_group_1298_120(l,state)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                /*--unique-id--137--DO-NOT-REPLACE*/
                                                add_reduce(state,5,205);
                                                debug_stack.push({ name:"cover_parenthesized_expression_and_arrow_parameter_list RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    } else {
                                        /*peek-production-closure*/
                                        /*
                                           137:422 cover_parenthesized_expression_and_arrow_parameter_list=>( expression , • cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119 )
                                        */
                                        if(state=$cover_parenthesized_expression_and_arrow_parameter_list_group_1296_119(l,state)){
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                                /*--unique-id--137--DO-NOT-REPLACE*/
                                                add_reduce(state,5,205);
                                                debug_stack.push({ name:"cover_parenthesized_expression_and_arrow_parameter_list RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                                return state;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } else if(assert_consume(l,state,l.utf==41/*[)]*/)){
                        /*consume*/
                        /*
                           138:425 parenthesized=>( expression ) •
                        */
                        /*--unique-id--137--DO-NOT-REPLACE*/
                        add_reduce(state,3,204);
                        debug_stack.push({ name:"cover_parenthesized_expression_and_arrow_parameter_list RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                }
            }
        }
    }
    debug_stack.push({ name:"cover_parenthesized_expression_and_arrow_parameter_list RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: parenthesized
            grammar index: 138
            bodies:
	138:425 parenthesized=>• ( expression ) - 
            compile time: 1.75ms*/;
function $parenthesized(l,state){
    debug_stack.push({ name:"parenthesized RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==40/*[(]*/)){
        /*consume*/
        /*
           138:425 parenthesized=>( • expression )
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$expression(l,state)){
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                /*--unique-id--138--DO-NOT-REPLACE*/
                add_reduce(state,3,204);
                debug_stack.push({ name:"parenthesized RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    }
    debug_stack.push({ name:"parenthesized RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: binding_pattern
            grammar index: 139
            bodies:
	139:426 binding_pattern=>• object_binding_pattern - 
		139:427 binding_pattern=>• array_binding_pattern - 
            compile time: 2.898ms*/;
function $binding_pattern(l,state){
    debug_stack.push({ name:"binding_pattern RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(l.utf==123/*[{]*/){
        /*peek-production-closure*/
        /*
           139:426 binding_pattern=>• object_binding_pattern
        */
        if(state=$object_binding_pattern(l,state)){
            /*--unique-id--139--DO-NOT-REPLACE*/
            debug_stack.push({ name:"binding_pattern RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           139:427 binding_pattern=>• array_binding_pattern
        */
        if(state=$array_binding_pattern(l,state)){
            /*--unique-id--139--DO-NOT-REPLACE*/
            debug_stack.push({ name:"binding_pattern RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"binding_pattern RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: object_binding_pattern
            grammar index: 140
            bodies:
	140:428 object_binding_pattern=>• { } - 
		140:429 object_binding_pattern=>• { binding_rest_property } - 
		140:430 object_binding_pattern=>• { binding_property_list } - 
		140:431 object_binding_pattern=>• { binding_property_list , binding_rest_property } - 
		140:432 object_binding_pattern=>• { binding_property_list , } - 
            compile time: 104.758ms*/;
function $object_binding_pattern(l,state){
    debug_stack.push({ name:"object_binding_pattern RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==123/*[{]*/)){
        /*consume*/
        /*
           140:428 object_binding_pattern=>{ • }
           140:429 object_binding_pattern=>{ • binding_rest_property }
           140:430 object_binding_pattern=>{ • binding_property_list }
           140:431 object_binding_pattern=>{ • binding_property_list , binding_rest_property }
           140:432 object_binding_pattern=>{ • binding_property_list , }
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==125/*[}]*/)){
            /*consume*/
            /*
               140:428 object_binding_pattern=>{ } •
            */
            /*--unique-id--140--DO-NOT-REPLACE*/
            add_reduce(state,2,206);
            debug_stack.push({ name:"object_binding_pattern RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        } else if(defined_token_f47f6de2d28c24e5(l)/*[...]*/){
            /*peek-production-closure*/
            /*
               140:429 object_binding_pattern=>{ • binding_rest_property }
            */
            if(state=$binding_rest_property(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==125/*[}]*/)){
                    /*--unique-id--140--DO-NOT-REPLACE*/
                    add_reduce(state,3,207);
                    debug_stack.push({ name:"object_binding_pattern RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        } else {
            /*peek-production-closure*/
            /*
               140:430 object_binding_pattern=>{ • binding_property_list }
               140:431 object_binding_pattern=>{ • binding_property_list , binding_rest_property }
               140:432 object_binding_pattern=>{ • binding_property_list , }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$binding_property_list(l,state)){
                /*assert*/
                /*
                   140:430 object_binding_pattern=>{ • binding_property_list }
                   140:431 object_binding_pattern=>{ • binding_property_list , binding_rest_property }
                   140:432 object_binding_pattern=>{ • binding_property_list , }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==125/*[}]*/)){
                    /*consume*/
                    /*
                       140:430 object_binding_pattern=>{ binding_property_list } •
                    */
                    /*--unique-id--140--DO-NOT-REPLACE*/
                    add_reduce(state,3,208);
                    debug_stack.push({ name:"object_binding_pattern RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                } else if(l.utf==44/*[,]*/){
                    /*peek*/
                    /*
                       140:431 object_binding_pattern=>{ binding_property_list • , binding_rest_property }
                       140:432 object_binding_pattern=>{ binding_property_list • , }
                    */
                    let pk = l.copy();
                    sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                    if(defined_token_f47f6de2d28c24e5(pk)/*[...]*/){
                        /*peek*/
                        /*
                           140:431 object_binding_pattern=>{ binding_property_list • , binding_rest_property }
                        */
                        if(assert_consume(l,state,l.utf==44/*[,]*/)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$binding_rest_property(l,state)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                    /*--unique-id--140--DO-NOT-REPLACE*/
                                    add_reduce(state,5,209);
                                    debug_stack.push({ name:"object_binding_pattern RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                    return state;
                                }
                            }
                        }
                    } else if(pk.utf==125/*[}]*/){
                        /*peek*/
                        /*
                           140:432 object_binding_pattern=>{ binding_property_list • , }
                        */
                        if(assert_consume(l,state,l.utf==44/*[,]*/)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                /*--unique-id--140--DO-NOT-REPLACE*/
                                add_reduce(state,4,208);
                                debug_stack.push({ name:"object_binding_pattern RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                return state;
                            }
                        }
                    }
                }
            }
        }
    }
    debug_stack.push({ name:"object_binding_pattern RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: array_binding_pattern
            grammar index: 141
            bodies:
	141:433 array_binding_pattern=>• [ elision binding_rest_element ] - 
		141:434 array_binding_pattern=>• [ binding_element_list ] - 
		141:435 array_binding_pattern=>• [ binding_element_list , elision binding_rest_element ] - 
		141:436 array_binding_pattern=>• [ binding_rest_element ] - 
		141:437 array_binding_pattern=>• [ elision ] - 
		141:438 array_binding_pattern=>• [ binding_element_list , binding_rest_element ] - 
		141:439 array_binding_pattern=>• [ binding_element_list , elision ] - 
		141:440 array_binding_pattern=>• [ ] - 
		141:441 array_binding_pattern=>• [ binding_element_list , ] - 
            compile time: 228.994ms*/;
function $array_binding_pattern(l,state){
    debug_stack.push({ name:"array_binding_pattern RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==91/*[[]*/)){
        /*consume*/
        /*
           141:433 array_binding_pattern=>[ • elision binding_rest_element ]
           141:434 array_binding_pattern=>[ • binding_element_list ]
           141:435 array_binding_pattern=>[ • binding_element_list , elision binding_rest_element ]
           141:436 array_binding_pattern=>[ • binding_rest_element ]
           141:437 array_binding_pattern=>[ • elision ]
           141:438 array_binding_pattern=>[ • binding_element_list , binding_rest_element ]
           141:439 array_binding_pattern=>[ • binding_element_list , elision ]
           141:440 array_binding_pattern=>[ • ]
           141:441 array_binding_pattern=>[ • binding_element_list , ]
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(l.utf==44/*[,]*/){
            /*peek*/
            /*
               141:433 array_binding_pattern=>[ • elision binding_rest_element ]
               141:434 array_binding_pattern=>[ • binding_element_list ]
               141:435 array_binding_pattern=>[ • binding_element_list , elision binding_rest_element ]
               141:437 array_binding_pattern=>[ • elision ]
               141:438 array_binding_pattern=>[ • binding_element_list , binding_rest_element ]
               141:439 array_binding_pattern=>[ • binding_element_list , elision ]
               141:441 array_binding_pattern=>[ • binding_element_list , ]
            */
            let mk = mark();
            let anchor = l.copy();
            let anchor_state = state;
            /*433,4,1,434,3,1,435,6,1,437,3,1,438,5,1,439,5,1,441,4,1*/
            /*141*/
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$elision(l,state)){
                /*assert*/
                /*
                   141:433 array_binding_pattern=>[ • elision binding_rest_element ]
                   141:437 array_binding_pattern=>[ • elision ]
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(defined_token_f47f6de2d28c24e5(l)/*[...]*/){
                    /*peek-production-closure*/
                    /*
                       141:433 array_binding_pattern=>[ elision • binding_rest_element ]
                    */
                    if(state=$binding_rest_element(l,state)){
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==93/*[]]*/)){
                            /*--unique-id--141--DO-NOT-REPLACE*/
                            add_reduce(state,4,210);
                            debug_stack.push({ name:"array_binding_pattern RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                            return state;
                        }
                    }
                } else if(assert_consume(l,state,l.utf==93/*[]]*/)){
                    /*consume*/
                    /*
                       141:437 array_binding_pattern=>[ elision ] •
                    */
                    /*--unique-id--141--DO-NOT-REPLACE*/
                    add_reduce(state,3,213);
                    debug_stack.push({ name:"array_binding_pattern RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
            /*433,4,1,434,3,1,435,6,1,437,3,1,438,5,1,439,5,1,441,4,1*/
            state = reset(mk,anchor,l,anchor_state);
            if(state=$binding_element_list(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==93/*[]]*/)){
                    /*--unique-id--141--DO-NOT-REPLACE*/
                    add_reduce(state,3,211);
                    debug_stack.push({ name:"array_binding_pattern RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
            /*433,4,1,434,3,1,435,6,1,437,3,1,438,5,1,439,5,1,441,4,1*/
            state = reset(mk,anchor,l,anchor_state);
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$binding_element_list(l,state)){
                /*assert*/
                /*
                   141:435 array_binding_pattern=>[ • binding_element_list , elision binding_rest_element ]
                   141:438 array_binding_pattern=>[ • binding_element_list , binding_rest_element ]
                   141:439 array_binding_pattern=>[ • binding_element_list , elision ]
                   141:441 array_binding_pattern=>[ • binding_element_list , ]
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==44/*[,]*/)){
                    /*consume*/
                    /*
                       141:435 array_binding_pattern=>[ binding_element_list , • elision binding_rest_element ]
                       141:438 array_binding_pattern=>[ binding_element_list , • binding_rest_element ]
                       141:439 array_binding_pattern=>[ binding_element_list , • elision ]
                       141:441 array_binding_pattern=>[ binding_element_list , • ]
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(l.utf==44/*[,]*/){
                        /*peek-production-closure*/
                        /*
                           141:435 array_binding_pattern=>[ binding_element_list , • elision binding_rest_element ]
                           141:439 array_binding_pattern=>[ binding_element_list , • elision ]
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(state=$elision(l,state)){
                            /*assert*/
                            /*
                               141:435 array_binding_pattern=>[ binding_element_list , • elision binding_rest_element ]
                               141:439 array_binding_pattern=>[ binding_element_list , • elision ]
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(defined_token_f47f6de2d28c24e5(l)/*[...]*/){
                                /*peek-production-closure*/
                                /*
                                   141:435 array_binding_pattern=>[ binding_element_list , elision • binding_rest_element ]
                                */
                                if(state=$binding_rest_element(l,state)){
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==93/*[]]*/)){
                                        /*--unique-id--141--DO-NOT-REPLACE*/
                                        add_reduce(state,6,212);
                                        debug_stack.push({ name:"array_binding_pattern RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                        return state;
                                    }
                                }
                            } else if(assert_consume(l,state,l.utf==93/*[]]*/)){
                                /*consume*/
                                /*
                                   141:439 array_binding_pattern=>[ binding_element_list , elision ] •
                                */
                                /*--unique-id--141--DO-NOT-REPLACE*/
                                add_reduce(state,5,214);
                                debug_stack.push({ name:"array_binding_pattern RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                return state;
                            }
                        }
                    } else if(defined_token_f47f6de2d28c24e5(l)/*[...]*/){
                        /*peek-production-closure*/
                        /*
                           141:438 array_binding_pattern=>[ binding_element_list , • binding_rest_element ]
                        */
                        if(state=$binding_rest_element(l,state)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==93/*[]]*/)){
                                /*--unique-id--141--DO-NOT-REPLACE*/
                                add_reduce(state,5,214);
                                debug_stack.push({ name:"array_binding_pattern RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                return state;
                            }
                        }
                    } else if(assert_consume(l,state,l.utf==93/*[]]*/)){
                        /*consume*/
                        /*
                           141:441 array_binding_pattern=>[ binding_element_list , ] •
                        */
                        /*--unique-id--141--DO-NOT-REPLACE*/
                        add_reduce(state,4,211);
                        debug_stack.push({ name:"array_binding_pattern RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                }
            }
        } else if(defined_token_f47f6de2d28c24e5(l)/*[...]*/){
            /*peek-production-closure*/
            /*
               141:436 array_binding_pattern=>[ • binding_rest_element ]
            */
            if(state=$binding_rest_element(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==93/*[]]*/)){
                    /*--unique-id--141--DO-NOT-REPLACE*/
                    add_reduce(state,3,213);
                    debug_stack.push({ name:"array_binding_pattern RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        } else if(assert_consume(l,state,l.utf==93/*[]]*/)){
            /*consume*/
            /*
               141:440 array_binding_pattern=>[ ] •
            */
            /*--unique-id--141--DO-NOT-REPLACE*/
            add_reduce(state,2,215);
            debug_stack.push({ name:"array_binding_pattern RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        } else {
            /*peek-production-closure*/
            /*
               141:434 array_binding_pattern=>[ • binding_element_list ]
               141:435 array_binding_pattern=>[ • binding_element_list , elision binding_rest_element ]
               141:438 array_binding_pattern=>[ • binding_element_list , binding_rest_element ]
               141:439 array_binding_pattern=>[ • binding_element_list , elision ]
               141:441 array_binding_pattern=>[ • binding_element_list , ]
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$binding_element_list(l,state)){
                /*assert*/
                /*
                   141:434 array_binding_pattern=>[ • binding_element_list ]
                   141:435 array_binding_pattern=>[ • binding_element_list , elision binding_rest_element ]
                   141:438 array_binding_pattern=>[ • binding_element_list , binding_rest_element ]
                   141:439 array_binding_pattern=>[ • binding_element_list , elision ]
                   141:441 array_binding_pattern=>[ • binding_element_list , ]
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==93/*[]]*/)){
                    /*consume*/
                    /*
                       141:434 array_binding_pattern=>[ binding_element_list ] •
                    */
                    /*--unique-id--141--DO-NOT-REPLACE*/
                    add_reduce(state,3,211);
                    debug_stack.push({ name:"array_binding_pattern RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                } else if(l.utf==44/*[,]*/){
                    /*peek*/
                    /*
                       141:435 array_binding_pattern=>[ binding_element_list • , elision binding_rest_element ]
                       141:438 array_binding_pattern=>[ binding_element_list • , binding_rest_element ]
                       141:439 array_binding_pattern=>[ binding_element_list • , elision ]
                       141:441 array_binding_pattern=>[ binding_element_list • , ]
                    */
                    let pk = l.copy();
                    sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                    if(pk.utf==44/*[,]*/){
                        /*peek*/
                        /*
                           141:435 array_binding_pattern=>[ binding_element_list • , elision binding_rest_element ]
                           141:439 array_binding_pattern=>[ binding_element_list • , elision ]
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==44/*[,]*/)){
                            /*consume*/
                            /*
                               141:435 array_binding_pattern=>[ binding_element_list , • elision binding_rest_element ]
                               141:439 array_binding_pattern=>[ binding_element_list , • elision ]
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$elision(l,state)){
                                /*assert*/
                                /*
                                   141:435 array_binding_pattern=>[ binding_element_list , • elision binding_rest_element ]
                                   141:439 array_binding_pattern=>[ binding_element_list , • elision ]
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(defined_token_f47f6de2d28c24e5(l)/*[...]*/){
                                    /*peek-production-closure*/
                                    /*
                                       141:435 array_binding_pattern=>[ binding_element_list , elision • binding_rest_element ]
                                    */
                                    if(state=$binding_rest_element(l,state)){
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(assert_consume(l,state,l.utf==93/*[]]*/)){
                                            /*--unique-id--141--DO-NOT-REPLACE*/
                                            add_reduce(state,6,212);
                                            debug_stack.push({ name:"array_binding_pattern RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                            return state;
                                        }
                                    }
                                } else if(assert_consume(l,state,l.utf==93/*[]]*/)){
                                    /*consume*/
                                    /*
                                       141:439 array_binding_pattern=>[ binding_element_list , elision ] •
                                    */
                                    /*--unique-id--141--DO-NOT-REPLACE*/
                                    add_reduce(state,5,214);
                                    debug_stack.push({ name:"array_binding_pattern RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                    return state;
                                }
                            }
                        }
                    } else if(defined_token_f47f6de2d28c24e5(pk)/*[...]*/){
                        /*peek*/
                        /*
                           141:438 array_binding_pattern=>[ binding_element_list • , binding_rest_element ]
                        */
                        if(assert_consume(l,state,l.utf==44/*[,]*/)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$binding_rest_element(l,state)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==93/*[]]*/)){
                                    /*--unique-id--141--DO-NOT-REPLACE*/
                                    add_reduce(state,5,214);
                                    debug_stack.push({ name:"array_binding_pattern RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                    return state;
                                }
                            }
                        }
                    } else if(pk.utf==93/*[]]*/){
                        /*peek*/
                        /*
                           141:441 array_binding_pattern=>[ binding_element_list • , ]
                        */
                        if(assert_consume(l,state,l.utf==44/*[,]*/)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==93/*[]]*/)){
                                /*--unique-id--141--DO-NOT-REPLACE*/
                                add_reduce(state,4,211);
                                debug_stack.push({ name:"array_binding_pattern RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                return state;
                            }
                        }
                    }
                }
            }
        }
    }
    debug_stack.push({ name:"array_binding_pattern RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: binding_rest_property
            grammar index: 142
            bodies:
	142:442 binding_rest_property=>• ... binding_identifier - 
            compile time: 2.971ms*/;
function $binding_rest_property(l,state){
    debug_stack.push({ name:"binding_rest_property RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_f47f6de2d28c24e5(l)/*[...]*/)){
        /*consume*/
        /*
           142:442 binding_rest_property=>... • binding_identifier
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$identifier(l,state)){
            /*--unique-id--142--DO-NOT-REPLACE*/
            add_reduce(state,1,126);
            add_reduce(state,2,178);
            debug_stack.push({ name:"binding_rest_property RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"binding_rest_property RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: binding_property_list
            grammar index: 143
            bodies:
	143:443 binding_property_list=>• binding_property - 
		143:444 binding_property_list=>• binding_property_list , binding_property - 
            compile time: 16.068ms*/;
function $binding_property_list(l,state){
    debug_stack.push({ name:"binding_property_list RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$binding_property(l,state)){
        /*--unique-id--143--DO-NOT-REPLACE*/
        add_reduce(state,1,4);
        return $binding_property_list_goto(l,state,143);
    }
    debug_stack.push({ name:"binding_property_list RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $binding_property_list_goto(l,state,prod){
    debug_stack.push({ name:"binding_property_list GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(l.utf==44/*[,]*/){
            /*peek*/
            /*
               143:444 binding_property_list=>binding_property_list • , binding_property
               140:431 object_binding_pattern=>{ binding_property_list • , binding_rest_property }
               140:432 object_binding_pattern=>{ binding_property_list • , }
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if((assert_table(pk,0x0,0x94,0x88000000,0x0)/*tbl:[ _ ] [ $ ] [ " ] [ ' ] [ [ ]*/||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
                /*peek*/
                /*
                   143:444 binding_property_list=>binding_property_list • , binding_property
                */
                if(assert_consume(l,state,l.utf==44/*[,]*/)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$binding_property(l,state)){
                        /*--unique-id--143--DO-NOT-REPLACE*/
                        add_reduce(state,3,216);
                        prod = 143;
                        continue;
                    }
                }
            }
        }
        break;
    }
    debug_stack.push({ name:"binding_property_list GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==143);
}
/*production name: binding_element_list
            grammar index: 144
            bodies:
	144:445 binding_element_list=>• binding_elision_element - 
		144:446 binding_element_list=>• binding_element_list , binding_elision_element - 
            compile time: 200.652ms*/;
function $binding_element_list(l,state){
    debug_stack.push({ name:"binding_element_list RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$binding_elision_element(l,state)){
        /*--unique-id--144--DO-NOT-REPLACE*/
        return $binding_element_list_goto(l,state,144);
    }
    debug_stack.push({ name:"binding_element_list RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $binding_element_list_goto(l,state,prod){
    debug_stack.push({ name:"binding_element_list GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(l.utf==44/*[,]*/){
            /*peek*/
            /*
               144:446 binding_element_list=>binding_element_list • , binding_elision_element
               141:435 array_binding_pattern=>[ binding_element_list • , elision binding_rest_element ]
               141:438 array_binding_pattern=>[ binding_element_list • , binding_rest_element ]
               141:439 array_binding_pattern=>[ binding_element_list • , elision ]
               141:441 array_binding_pattern=>[ binding_element_list • , ]
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(pk.utf==44/*[,]*/){
                /*peek*/
                /*
                   144:446 binding_element_list=>binding_element_list • , binding_elision_element
                   141:435 array_binding_pattern=>[ binding_element_list • , elision binding_rest_element ]
                   141:439 array_binding_pattern=>[ binding_element_list • , elision ]
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==44/*[,]*/)){
                    /*consume*/
                    /*
                       144:446 binding_element_list=>binding_element_list , • binding_elision_element
                       141:435 array_binding_pattern=>[ binding_element_list , • elision binding_rest_element ]
                       141:439 array_binding_pattern=>[ binding_element_list , • elision ]
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(l.utf==44/*[,]*/){
                        /*peek*/
                        /*
                           144:446 binding_element_list=>binding_element_list , • binding_elision_element
                           141:435 array_binding_pattern=>[ binding_element_list , • elision binding_rest_element ]
                           141:439 array_binding_pattern=>[ binding_element_list , • elision ]
                        */
                        let mk = mark();
                        let anchor = l.copy();
                        let anchor_state = state;
                        /*446,3,2,435,6,3,439,5,3*/
                        /*144*/
                        if(state=$binding_elision_element(l,state)){
                            /*--unique-id--144--DO-NOT-REPLACE*/
                            add_reduce(state,3,217);
                            prod = 144;
                            continue;
                        }
                        state = reset(mk,anchor,l,anchor_state);
                    } else {
                        /*peek-production-closure*/
                        /*
                           144:446 binding_element_list=>binding_element_list , • binding_elision_element
                        */
                        if(state=$binding_elision_element(l,state)){
                            /*--unique-id--144--DO-NOT-REPLACE*/
                            add_reduce(state,3,217);
                            prod = 144;
                            continue;
                        }
                    }
                }
            } else if(assert_table(pk,0x0,0x10,0x88000000,0x8000000)/*tbl:[ _ ] [ $ ] [ { ] [ [ ]*/||pk.isID()/*[id]*/){
                /*peek*/
                /*
                   144:446 binding_element_list=>binding_element_list • , binding_elision_element
                */
                if(assert_consume(l,state,l.utf==44/*[,]*/)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$binding_elision_element(l,state)){
                        /*--unique-id--144--DO-NOT-REPLACE*/
                        add_reduce(state,3,217);
                        prod = 144;
                        continue;
                    }
                }
            }
        }
        break;
    }
    debug_stack.push({ name:"binding_element_list GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==144);
}
/*production name: binding_elision_element
            grammar index: 145
            bodies:
	145:447 binding_elision_element=>• elision binding_element - 
		145:448 binding_elision_element=>• binding_element - 
            compile time: 3.236ms*/;
function $binding_elision_element(l,state){
    debug_stack.push({ name:"binding_elision_element RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(l.utf==44/*[,]*/){
        /*peek-production-closure*/
        /*
           145:447 binding_elision_element=>• elision binding_element
        */
        if(state=$elision(l,state)){
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$binding_element(l,state)){
                /*--unique-id--145--DO-NOT-REPLACE*/
                add_reduce(state,2,218);
                debug_stack.push({ name:"binding_elision_element RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    } else {
        /*peek-production-closure*/
        /*
           145:448 binding_elision_element=>• binding_element
        */
        if(state=$binding_element(l,state)){
            /*--unique-id--145--DO-NOT-REPLACE*/
            add_reduce(state,1,4);
            debug_stack.push({ name:"binding_elision_element RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"binding_elision_element RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: binding_property
            grammar index: 146
            bodies:
	146:449 binding_property=>• single_name_binding - 
		146:450 binding_property=>• property_name : binding_element - 
            compile time: 35.854ms*/;
function $binding_property(l,state){
    debug_stack.push({ name:"binding_property RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(((l.utf==95/*[_]*/)||(l.utf==36/*[$]*/))||l.isID()/*[id]*/){
        /*peek*/
        /*
           146:449 binding_property=>• single_name_binding
           146:450 binding_property=>• property_name : binding_element
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,def$js_id_symbols_tok_b3199095c9facd2b(l))){
            /*consume*/
            /*
               225:688 def$js_identifier=>tk:def$js_id_symbols •
            */
            /*--unique-id--192--DO-NOT-REPLACE*/
            return $binding_property_goto(l,state,192);
        } else if(assert_consume(l,state,(((defined_token_845a30f46ac258a6(l)/*[async] [as]*/||defined_token_8f5d282f35165648(l)/*[get]*/)||defined_token_5bca542dce980d9c(l)/*[set]*/)||defined_token_1cb42c7dd41b3a7e(l)/*[target]*/)||defined_token_14469127dc9c2c1f(l)/*[from]*/)){
            /*consume*/
            /*
               189:545 unreserved_word=>τasync •
               189:546 unreserved_word=>τget •
               189:547 unreserved_word=>τset •
               189:548 unreserved_word=>τtarget •
               189:549 unreserved_word=>τas •
               189:550 unreserved_word=>τfrom •
            */
            /*--unique-id--189--DO-NOT-REPLACE*/
            return $binding_property_goto(l,state,189);
        }
    } else {
        /*peek-production-closure*/
        /*
           146:450 binding_property=>• property_name : binding_element
        */
        if(state=$property_name(l,state)){
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,l.utf==58/*[:]*/)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(state=$binding_element(l,state)){
                    /*--unique-id--146--DO-NOT-REPLACE*/
                    add_reduce(state,3,219);
                    return $binding_property_goto(l,state,146);
                }
            }
        }
    }
    debug_stack.push({ name:"binding_property RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $binding_property_goto(l,state,prod){
    debug_stack.push({ name:"binding_property GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        switch(prod){
            case 155:
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==58/*[:]*/)){
                    /*consume*/
                    /*
                       146:450 binding_property=>property_name : • binding_element
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$binding_element(l,state)){
                        /*--unique-id--146--DO-NOT-REPLACE*/
                        add_reduce(state,3,219);
                        prod = 146;
                        continue;
                    }
                }
                break;
            case 186:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(l.utf==61/*[=]*/){
                    /*assert-production-closure*/
                    /*
                       148:454 single_name_binding=>binding_identifier • initializer
                    */
                    if(state=$initializer(l,state)){
                        /*--unique-id--146--DO-NOT-REPLACE*/
                        add_reduce(state,2,220);
                        prod = 146;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       148:455 single_name_binding=>binding_identifier •
                    */
                    /*--unique-id--146--DO-NOT-REPLACE*/
                    add_reduce(state,1,221);
                    prod = 146;
                    continue;
                }
                break;
            case 189:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(l.utf==58/*[:]*/){
                    /*assert-end*/
                    /*
                       188:544 identifier_name=>unreserved_word •
                    */
                    /*--unique-id--155--DO-NOT-REPLACE*/
                    add_reduce(state,1,256);
                    add_reduce(state,1,227);
                    prod = 155;
                    continue;
                } else {
                    /*assert-end*/
                    /*
                       187:541 identifier=>unreserved_word •
                    */
                    /*--unique-id--186--DO-NOT-REPLACE*/
                    add_reduce(state,1,255);
                    add_reduce(state,1,126);
                    prod = 186;
                    continue;
                }
                break;
            case 192:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(l.utf==58/*[:]*/){
                    /*assert-end*/
                    /*
                       188:542 identifier_name=>composite_identifier •
                    */
                    /*--unique-id--155--DO-NOT-REPLACE*/
                    add_reduce(state,1,256);
                    add_reduce(state,1,227);
                    prod = 155;
                    continue;
                } else {
                    /*assert-end*/
                    /*
                       187:540 identifier=>composite_identifier •
                    */
                    /*--unique-id--186--DO-NOT-REPLACE*/
                    add_reduce(state,1,255);
                    add_reduce(state,1,126);
                    prod = 186;
                    continue;
                }
                break;
        }
        break;
    }
    debug_stack.push({ name:"binding_property GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==146);
}
/*production name: binding_element
            grammar index: 147
            bodies:
	147:451 binding_element=>• single_name_binding - 
		147:452 binding_element=>• binding_pattern initializer - 
		147:453 binding_element=>• binding_pattern - 
            compile time: 15.846ms*/;
function $binding_element(l,state){
    debug_stack.push({ name:"binding_element RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if((l.utf==123/*[{]*/)||(l.utf==91/*[[]*/)){
        /*peek-production-closure*/
        /*
           147:452 binding_element=>• binding_pattern initializer
           147:453 binding_element=>• binding_pattern
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$binding_pattern(l,state)){
            /*assert*/
            /*
               147:452 binding_element=>• binding_pattern initializer
               147:453 binding_element=>• binding_pattern
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(l.utf==61/*[=]*/){
                /*assert-production-closure*/
                /*
                   147:452 binding_element=>binding_pattern • initializer
                */
                if(state=$initializer(l,state)){
                    /*--unique-id--147--DO-NOT-REPLACE*/
                    add_reduce(state,2,220);
                    debug_stack.push({ name:"binding_element RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            } else {
                /*assert-end*/
                /*
                   147:453 binding_element=>binding_pattern •
                */
                /*--unique-id--147--DO-NOT-REPLACE*/
                add_reduce(state,1,221);
                debug_stack.push({ name:"binding_element RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    } else {
        /*peek-production-closure*/
        /*
           147:451 binding_element=>• single_name_binding
        */
        if(state=$single_name_binding(l,state)){
            /*--unique-id--147--DO-NOT-REPLACE*/
            debug_stack.push({ name:"binding_element RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"binding_element RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: single_name_binding
            grammar index: 148
            bodies:
	148:454 single_name_binding=>• binding_identifier initializer - 
		148:455 single_name_binding=>• binding_identifier - 
            compile time: 3.642ms*/;
function $single_name_binding(l,state){
    debug_stack.push({ name:"single_name_binding RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$binding_identifier(l,state)){
        /*assert*/
        /*
           148:454 single_name_binding=>• binding_identifier initializer
           148:455 single_name_binding=>• binding_identifier
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(l.utf==61/*[=]*/){
            /*assert-production-closure*/
            /*
               148:454 single_name_binding=>binding_identifier • initializer
            */
            if(state=$initializer(l,state)){
                /*--unique-id--148--DO-NOT-REPLACE*/
                add_reduce(state,2,220);
                debug_stack.push({ name:"single_name_binding RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else {
            /*assert-end*/
            /*
               148:455 single_name_binding=>binding_identifier •
            */
            /*--unique-id--148--DO-NOT-REPLACE*/
            add_reduce(state,1,221);
            debug_stack.push({ name:"single_name_binding RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"single_name_binding RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: binding_rest_element
            grammar index: 149
            bodies:
	149:456 binding_rest_element=>• ... binding_identifier - 
		149:457 binding_rest_element=>• ... binding_pattern - 
            compile time: 6.777ms*/;
function $binding_rest_element(l,state){
    debug_stack.push({ name:"binding_rest_element RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_f47f6de2d28c24e5(l)/*[...]*/)){
        /*consume*/
        /*
           149:456 binding_rest_element=>... • binding_identifier
           149:457 binding_rest_element=>... • binding_pattern
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if((l.utf==123/*[{]*/)||(l.utf==91/*[[]*/)){
            /*peek-production-closure*/
            /*
               149:457 binding_rest_element=>... • binding_pattern
            */
            if(state=$binding_pattern(l,state)){
                /*--unique-id--149--DO-NOT-REPLACE*/
                add_reduce(state,2,178);
                debug_stack.push({ name:"binding_rest_element RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else {
            /*peek-production-closure*/
            /*
               149:456 binding_rest_element=>... • binding_identifier
            */
            if(state=$identifier(l,state)){
                /*--unique-id--149--DO-NOT-REPLACE*/
                add_reduce(state,1,126);
                add_reduce(state,2,178);
                debug_stack.push({ name:"binding_rest_element RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    }
    debug_stack.push({ name:"binding_rest_element RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: regular_expression_literal
            grammar index: 150
            bodies:
	150:458 regular_expression_literal=>• / / def$js_identifier - 
		150:459 regular_expression_literal=>• / / - 
            compile time: 15.866ms*/;
function $regular_expression_literal(l,state){
    debug_stack.push({ name:"regular_expression_literal RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==47/*[/]*/)){
        /*consume*/
        /*
           150:458 regular_expression_literal=>/ • / def$js_identifier
           150:459 regular_expression_literal=>/ • /
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==47/*[/]*/)){
            /*consume*/
            /*
               150:458 regular_expression_literal=>/ / • def$js_identifier
               150:459 regular_expression_literal=>/ / •
            */
            sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
            if(def$js_id_symbols_tok_b3199095c9facd2b(l)){
                /*assert-production-closure*/
                /*
                   150:458 regular_expression_literal=>/ / • def$js_identifier
                */
                if(state=$def$js_identifier(l,state)){
                    /*--unique-id--150--DO-NOT-REPLACE*/
                    add_reduce(state,3,222);
                    debug_stack.push({ name:"regular_expression_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            } else {
                /*assert-end*/
                /*
                   150:459 regular_expression_literal=>/ / •
                */
                /*--unique-id--150--DO-NOT-REPLACE*/
                add_reduce(state,2,223);
                debug_stack.push({ name:"regular_expression_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    }
    debug_stack.push({ name:"regular_expression_literal RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: object_literal
            grammar index: 152
            bodies:
	152:461 object_literal=>• { } - 
		152:462 object_literal=>• { property_definition_list , } - 
		152:463 object_literal=>• { property_definition_list } - 
            compile time: 114.656ms*/;
function $object_literal(l,state){
    debug_stack.push({ name:"object_literal RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==123/*[{]*/)){
        /*consume*/
        /*
           152:461 object_literal=>{ • }
           152:462 object_literal=>{ • property_definition_list , }
           152:463 object_literal=>{ • property_definition_list }
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==125/*[}]*/)){
            /*consume*/
            /*
               152:461 object_literal=>{ } •
            */
            /*--unique-id--152--DO-NOT-REPLACE*/
            add_reduce(state,2,224);
            debug_stack.push({ name:"object_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        } else {
            /*peek-production-closure*/
            /*
               152:462 object_literal=>{ • property_definition_list , }
               152:463 object_literal=>{ • property_definition_list }
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$property_definition_list(l,state)){
                /*assert*/
                /*
                   152:462 object_literal=>{ • property_definition_list , }
                   152:463 object_literal=>{ • property_definition_list }
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==44/*[,]*/)){
                    /*consume*/
                    /*
                       152:462 object_literal=>{ property_definition_list , • }
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==125/*[}]*/)){
                        /*--unique-id--152--DO-NOT-REPLACE*/
                        add_reduce(state,4,225);
                        debug_stack.push({ name:"object_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                } else if(assert_consume(l,state,l.utf==125/*[}]*/)){
                    /*consume*/
                    /*
                       152:463 object_literal=>{ property_definition_list } •
                    */
                    /*--unique-id--152--DO-NOT-REPLACE*/
                    add_reduce(state,3,225);
                    debug_stack.push({ name:"object_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        }
    }
    debug_stack.push({ name:"object_literal RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: property_definition_list
            grammar index: 153
            bodies:
	153:464 property_definition_list=>• property_definition - 
		153:465 property_definition_list=>• property_definition_list , property_definition - 
            compile time: 13.62ms*/;
function $property_definition_list(l,state){
    debug_stack.push({ name:"property_definition_list RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$property_definition(l,state)){
        /*--unique-id--153--DO-NOT-REPLACE*/
        add_reduce(state,1,4);
        return $property_definition_list_goto(l,state,153);
    }
    debug_stack.push({ name:"property_definition_list RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $property_definition_list_goto(l,state,prod){
    debug_stack.push({ name:"property_definition_list GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(l.utf==44/*[,]*/){
            /*peek*/
            /*
               153:465 property_definition_list=>property_definition_list • , property_definition
               152:462 object_literal=>{ property_definition_list • , }
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(((defined_token_f47f6de2d28c24e5(pk)/*[...]*/||assert_table(pk,0x0,0x494,0x88000000,0x0)/*tbl:[ _ ] [ $ ] [ * ] [ " ] [ ' ] [ [ ]*/)||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
                /*peek*/
                /*
                   153:465 property_definition_list=>property_definition_list • , property_definition
                */
                if(assert_consume(l,state,l.utf==44/*[,]*/)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$property_definition(l,state)){
                        /*--unique-id--153--DO-NOT-REPLACE*/
                        add_reduce(state,3,226);
                        prod = 153;
                        continue;
                    }
                }
            }
        }
        break;
    }
    debug_stack.push({ name:"property_definition_list GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==153);
}
/*production name: property_definition
            grammar index: 154
            bodies:
	154:466 property_definition=>• cover_initialized_name - 
		154:467 property_definition=>• identifier_reference - 
		154:468 property_definition=>• method_definition - 
		154:469 property_definition=>• ... assignment_expression - 
		154:470 property_definition=>• property_name : assignment_expression - 
            compile time: 202.287ms*/;
function $property_definition(l,state){
    debug_stack.push({ name:"property_definition RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(l.utf==42/*[*]*/){
        /*peek-production-closure*/
        /*
           154:468 property_definition=>• method_definition
        */
        if(state=$method_definition(l,state)){
            /*--unique-id--154--DO-NOT-REPLACE*/
            return $property_definition_goto(l,state,154);
        }
    } else if(assert_consume(l,state,defined_token_f47f6de2d28c24e5(l)/*[...]*/)){
        /*consume*/
        /*
           154:469 property_definition=>... • assignment_expression
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$assignment_expression(l,state)){
            /*--unique-id--154--DO-NOT-REPLACE*/
            add_reduce(state,2,178);
            return $property_definition_goto(l,state,154);
        }
    } else if((defined_token_172adec61d2dc160(l)/*[async]*/||defined_token_b3658faeba5b21ae(l)/*[get]*/)||defined_token_6f721474e5bd80e7(l)/*[set]*/){
        /*peek*/
        /*
           154:466 property_definition=>• cover_initialized_name
           154:467 property_definition=>• identifier_reference
           154:468 property_definition=>• method_definition
           154:470 property_definition=>• property_name : assignment_expression
        */
        let pk = l.copy();
        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
        if(assert_table(pk,0x0,0x24000100,0x0,0x0)/*tbl:[ ( ] [ : ] [ = ]*/){
            /*assert-production-closure*/
            /*
               189:545 unreserved_word=>• τasync
            */
            if(state=$unreserved_word(l,state)){
                /*--unique-id--189--DO-NOT-REPLACE*/
                return $property_definition_goto(l,state,189);
            }
        } else {
            /*peek-production-closure*/
            /*
               154:468 property_definition=>• method_definition
            */
            if(state=$method_definition(l,state)){
                /*--unique-id--154--DO-NOT-REPLACE*/
                return $property_definition_goto(l,state,154);
            }
        }
    } else if(((l.utf==95/*[_]*/)||(l.utf==36/*[$]*/))||l.isID()/*[id]*/){
        /*peek*/
        /*
           154:466 property_definition=>• cover_initialized_name
           154:467 property_definition=>• identifier_reference
           154:468 property_definition=>• method_definition
           154:470 property_definition=>• property_name : assignment_expression
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,def$js_id_symbols_tok_b3199095c9facd2b(l))){
            /*consume*/
            /*
               225:688 def$js_identifier=>tk:def$js_id_symbols •
            */
            /*--unique-id--192--DO-NOT-REPLACE*/
            return $property_definition_goto(l,state,192);
        } else if(assert_consume(l,state,(defined_token_1cb42c7dd41b3a7e(l)/*[target]*/||defined_token_fcc8b8fe09802878(l)/*[as]*/)||defined_token_14469127dc9c2c1f(l)/*[from]*/)){
            /*consume*/
            /*
               189:548 unreserved_word=>τtarget •
               189:549 unreserved_word=>τas •
               189:550 unreserved_word=>τfrom •
            */
            /*--unique-id--189--DO-NOT-REPLACE*/
            return $property_definition_goto(l,state,189);
        }
    } else if((((((((((((((((defined_token_44aa3f48541f3402(l)/*[await]*/||defined_token_14176d5b613b7d00(l)/*[break]*/)||defined_token_5459ff5932c71df8(l)/*[case] [catch] [class] [const] [continue]*/)||defined_token_67feb3a1937413de(l)/*[debugger] [default] [delete] [do]*/)||defined_token_71a747ad1421d9d3(l)/*[else] [export] [extends]*/)||defined_token_59eb8ce041e18647(l)/*[finally] [for] [function] [false]*/)||defined_token_9b4384e3c50814ee(l)/*[if] [import] [in] [instanceof] [implements] [interface]*/)||defined_token_0e8a531b18b35626(l)/*[new] [null]*/)||defined_token_cbaaba63eba9e5c4(l)/*[return]*/)||defined_token_b0c9e74960406db7(l)/*[super] [switch]*/)||defined_token_47107e97ad1f0a55(l)/*[this] [throw] [try] [typeof] [true]*/)||defined_token_e01a6bec7226ccc7(l)/*[var] [void]*/)||defined_token_ae2088ea4af8ad53(l)/*[while] [with]*/)||defined_token_202a14414fc7633f(l)/*[yield]*/)||defined_token_6e60e7c20d0b8e21(l)/*[package] [protected] [private] [public]*/)||assert_table(l,0x0,0x84,0x8000000,0x0)/*tbl:[ " ] [ ' ] [ [ ]*/)||l.isNum()/*[num]*/){
        /*peek*/
        /*
           154:468 property_definition=>• method_definition
           154:470 property_definition=>• property_name : assignment_expression
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(l.utf==34/*["]*/){
            /*peek*/
            /*
               177:521 string_literal=>• " string_literal_HC_listbody1_121 "
               177:523 string_literal=>• " "
            */
            let pk = l.copy();
            sk_78c208d4d792ec90(pk.next()/*[ 6 ]*/);
            if((((pk.isID()/*[id]*/||pk.isNL()/*[nl]*/)||pk.isNum()/*[num]*/)||pk.isSym()/*[sym]*/)||pk.isSP()/*[ws]*/){
                /*peek-production-closure*/
                /*
                   177:521 string_literal=>• " string_literal_HC_listbody1_121 "
                   177:523 string_literal=>• " "
                */
                if(state=$string_literal(l,state)){
                    /*--unique-id--155--DO-NOT-REPLACE*/
                    add_reduce(state,1,227);
                    return $property_definition_goto(l,state,155);
                }
            }
        } else if(l.utf==39/*[']*/){
            /*peek*/
            /*
               177:522 string_literal=>• ' string_literal_HC_listbody1_122 '
               177:524 string_literal=>• ' '
            */
            let pk = l.copy();
            sk_78c208d4d792ec90(pk.next()/*[ 6 ]*/);
            if((((pk.isID()/*[id]*/||pk.isNL()/*[nl]*/)||pk.isNum()/*[num]*/)||pk.isSym()/*[sym]*/)||pk.isSP()/*[ws]*/){
                /*peek-production-closure*/
                /*
                   177:522 string_literal=>• ' string_literal_HC_listbody1_122 '
                   177:524 string_literal=>• ' '
                */
                if(state=$string_literal(l,state)){
                    /*--unique-id--155--DO-NOT-REPLACE*/
                    add_reduce(state,1,227);
                    return $property_definition_goto(l,state,155);
                }
            }
        } else if(assert_consume(l,state,l.utf==91/*[[]*/)){
            /*consume*/
            /*
               157:476 computed_property_name=>[ • assignment_expression ]
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$assignment_expression(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==93/*[]]*/)){
                    /*--unique-id--155--DO-NOT-REPLACE*/
                    add_reduce(state,3,228);
                    add_reduce(state,1,227);
                    return $property_definition_goto(l,state,155);
                }
            }
        } else if(assert_consume(l,state,l.isNum()/*[num]*/)){
            /*consume*/
            /*
               181:533 numeric_literal=>θnum •
            */
            /*--unique-id--155--DO-NOT-REPLACE*/
            add_reduce(state,1,250);
            add_reduce(state,1,227);
            return $property_definition_goto(l,state,155);
        } else if(assert_consume(l,state,(((((((((((((defined_token_ded0f96a7228c7c5(l)/*[await]*/||defined_token_c3524ff0dce64492(l)/*[break]*/)||defined_token_c460df0c19b30757(l)/*[case] [catch] [class] [const] [continue]*/)||defined_token_0b6f38e897a6033b(l)/*[debugger] [default] [delete] [do]*/)||defined_token_eb7f69039a78f607(l)/*[else] [export] [extends]*/)||defined_token_5ae254f69676cbf1(l)/*[finally] [for] [function] [false]*/)||defined_token_b7730e2b48fe68f8(l)/*[if] [import] [in] [instanceof] [implements] [interface]*/)||defined_token_99035833d16742d9(l)/*[new] [null]*/)||defined_token_876f036172605c26(l)/*[return]*/)||defined_token_35cdf6168a8ead76(l)/*[super] [switch]*/)||defined_token_d4bc8ae8e31ef3aa(l)/*[this] [throw] [try] [typeof] [true]*/)||defined_token_b64c7c58a10dcef3(l)/*[var] [void]*/)||defined_token_aac16ca323764d7a(l)/*[while] [with]*/)||defined_token_d8f9d336d83ac87c(l)/*[yield]*/)||defined_token_dc17de0546cfa0c9(l)/*[package] [protected] [private] [public]*/)){
            /*consume*/
            /*
               193:563 keyword=>τawait •
               193:564 keyword=>τbreak •
               193:565 keyword=>τcase •
               193:566 keyword=>τcatch •
               193:567 keyword=>τclass •
               193:568 keyword=>τconst •
               193:569 keyword=>τcontinue •
               193:570 keyword=>τdebugger •
               193:571 keyword=>τdefault •
               193:572 keyword=>τdelete •
               193:573 keyword=>τdo •
               193:574 keyword=>τelse •
               193:575 keyword=>τexport •
               193:576 keyword=>τextends •
               193:577 keyword=>τfinally •
               193:578 keyword=>τfor •
               193:579 keyword=>τfunction •
               193:580 keyword=>τif •
               193:581 keyword=>τimport •
               193:582 keyword=>τin •
               193:583 keyword=>τinstanceof •
               193:584 keyword=>τnew •
               193:585 keyword=>τreturn •
               193:586 keyword=>τsuper •
               193:587 keyword=>τswitch •
               193:588 keyword=>τthis •
               193:589 keyword=>τthrow •
               193:590 keyword=>τtry •
               193:591 keyword=>τtypeof •
               193:592 keyword=>τvar •
               193:593 keyword=>τvoid •
               193:594 keyword=>τwhile •
               193:595 keyword=>τwith •
               193:596 keyword=>τyield •
               191:556 future_reserved_word=>τimplements •
               191:557 future_reserved_word=>τpackage •
               191:558 future_reserved_word=>τprotected •
               191:559 future_reserved_word=>τinterface •
               191:560 future_reserved_word=>τprivate •
               191:561 future_reserved_word=>τpublic •
               190:553 reserved_word=>τnull •
               190:554 reserved_word=>τtrue •
               190:555 reserved_word=>τfalse •
            */
            /*--unique-id--155--DO-NOT-REPLACE*/
            add_reduce(state,1,256);
            add_reduce(state,1,227);
            return $property_definition_goto(l,state,155);
        }
    }
    debug_stack.push({ name:"property_definition RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $property_definition_goto(l,state,prod){
    debug_stack.push({ name:"property_definition GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        switch(prod){
            case 155:
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(l.utf==40/*[(]*/){
                    /*peek*/
                    /*
                       94:269 method_definition=>property_name • ( unique_formal_parameters ) { function_body }
                       94:275 method_definition=>property_name • ( ) { function_body }
                       94:276 method_definition=>property_name • ( unique_formal_parameters ) { }
                       94:279 method_definition=>property_name • ( ) { }
                    */
                    let pk = l.copy();
                    sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                    if(pk.utf==41/*[)]*/){
                        /*peek*/
                        /*
                           94:275 method_definition=>property_name • ( ) { function_body }
                           94:279 method_definition=>property_name • ( ) { }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==40/*[(]*/)){
                            /*consume*/
                            /*
                               94:275 method_definition=>property_name ( • ) { function_body }
                               94:279 method_definition=>property_name ( • ) { }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                /*consume*/
                                /*
                                   94:275 method_definition=>property_name ( ) • { function_body }
                                   94:279 method_definition=>property_name ( ) • { }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                    /*consume*/
                                    /*
                                       94:275 method_definition=>property_name ( ) { • function_body }
                                       94:279 method_definition=>property_name ( ) { • }
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(l.utf==125/*[}]*/){
                                        /*peek*/
                                        /*
                                           94:275 method_definition=>property_name ( ) { • function_body }
                                           94:279 method_definition=>property_name ( ) { • }
                                        */
                                        let pk = l.copy();
                                        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                        if(((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(pk)||defined_token_670f23e41126e00b(pk)/*[async] [await] [as]*/)||defined_token_8f5d282f35165648(pk)/*[get]*/)||defined_token_3f0cefcc8fe287e4(pk)/*[set] [super] [switch] [static]*/)||defined_token_c3524ff0dce64492(pk)/*[break]*/)||defined_token_c460df0c19b30757(pk)/*[case] [catch] [class] [const] [continue]*/)||defined_token_0b6f38e897a6033b(pk)/*[debugger] [default] [delete] [do]*/)||defined_token_eb7f69039a78f607(pk)/*[else] [export] [extends]*/)||defined_token_052b4d0bdbf4fcd7(pk)/*[finally] [for] [function] [false] [from]*/)||defined_token_b7730e2b48fe68f8(pk)/*[if] [import] [in] [instanceof] [implements] [interface]*/)||defined_token_99035833d16742d9(pk)/*[new] [null]*/)||defined_token_876f036172605c26(pk)/*[return]*/)||defined_token_9f5e0fa0456f67cf(pk)/*[this] [throw] [try] [typeof] [true] [target]*/)||defined_token_b64c7c58a10dcef3(pk)/*[var] [void]*/)||defined_token_aac16ca323764d7a(pk)/*[while] [with]*/)||defined_token_d8f9d336d83ac87c(pk)/*[yield]*/)||defined_token_dc17de0546cfa0c9(pk)/*[package] [protected] [private] [public]*/)||assert_table(pk,0x0,0x8001484,0x8000000,0x20000000)/*tbl:[ } ] [ * ] [ " ] [ ' ] [ [ ] [ ; ] [ , ]*/)||pk.END())||pk.isNum()/*[num]*/){
                                            /*peek*/
                                            /*
                                               94:279 method_definition=>property_name ( ) { • }
                                            */
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--154--DO-NOT-REPLACE*/
                                                add_reduce(state,5,161);
                                                prod = 154;
                                                continue;
                                            }
                                        }
                                    } else {
                                        /*peek-production-closure*/
                                        /*
                                           94:275 method_definition=>property_name ( ) { • function_body }
                                        */
                                        if(state=$function_statement_list(l,state)){
                                            add_reduce(state,1,120);
                                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                            if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                /*--unique-id--154--DO-NOT-REPLACE*/
                                                add_reduce(state,6,157);
                                                prod = 154;
                                                continue;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } else if((defined_token_f47f6de2d28c24e5(pk)/*[...]*/||assert_table(pk,0x0,0x10,0x88000000,0x8000000)/*tbl:[ { ] [ [ ] [ _ ] [ $ ]*/)||pk.isID()/*[id]*/){
                        /*peek*/
                        /*
                           94:269 method_definition=>property_name • ( unique_formal_parameters ) { function_body }
                           94:276 method_definition=>property_name • ( unique_formal_parameters ) { }
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(assert_consume(l,state,l.utf==40/*[(]*/)){
                            /*consume*/
                            /*
                               94:269 method_definition=>property_name ( • unique_formal_parameters ) { function_body }
                               94:276 method_definition=>property_name ( • unique_formal_parameters ) { }
                            */
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$unique_formal_parameters(l,state)){
                                /*assert*/
                                /*
                                   94:269 method_definition=>property_name ( • unique_formal_parameters ) { function_body }
                                   94:276 method_definition=>property_name ( • unique_formal_parameters ) { }
                                */
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==41/*[)]*/)){
                                    /*consume*/
                                    /*
                                       94:269 method_definition=>property_name ( unique_formal_parameters ) • { function_body }
                                       94:276 method_definition=>property_name ( unique_formal_parameters ) • { }
                                    */
                                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                    if(assert_consume(l,state,l.utf==123/*[{]*/)){
                                        /*consume*/
                                        /*
                                           94:269 method_definition=>property_name ( unique_formal_parameters ) { • function_body }
                                           94:276 method_definition=>property_name ( unique_formal_parameters ) { • }
                                        */
                                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                        if(l.utf==125/*[}]*/){
                                            /*peek*/
                                            /*
                                               94:269 method_definition=>property_name ( unique_formal_parameters ) { • function_body }
                                               94:276 method_definition=>property_name ( unique_formal_parameters ) { • }
                                            */
                                            let pk = l.copy();
                                            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                                            if(((((((((((((((((((def$js_id_symbols_tok_b3199095c9facd2b(pk)||defined_token_670f23e41126e00b(pk)/*[async] [await] [as]*/)||defined_token_8f5d282f35165648(pk)/*[get]*/)||defined_token_3f0cefcc8fe287e4(pk)/*[set] [super] [switch] [static]*/)||defined_token_c3524ff0dce64492(pk)/*[break]*/)||defined_token_c460df0c19b30757(pk)/*[case] [catch] [class] [const] [continue]*/)||defined_token_0b6f38e897a6033b(pk)/*[debugger] [default] [delete] [do]*/)||defined_token_eb7f69039a78f607(pk)/*[else] [export] [extends]*/)||defined_token_052b4d0bdbf4fcd7(pk)/*[finally] [for] [function] [false] [from]*/)||defined_token_b7730e2b48fe68f8(pk)/*[if] [import] [in] [instanceof] [implements] [interface]*/)||defined_token_99035833d16742d9(pk)/*[new] [null]*/)||defined_token_876f036172605c26(pk)/*[return]*/)||defined_token_9f5e0fa0456f67cf(pk)/*[this] [throw] [try] [typeof] [true] [target]*/)||defined_token_b64c7c58a10dcef3(pk)/*[var] [void]*/)||defined_token_aac16ca323764d7a(pk)/*[while] [with]*/)||defined_token_d8f9d336d83ac87c(pk)/*[yield]*/)||defined_token_dc17de0546cfa0c9(pk)/*[package] [protected] [private] [public]*/)||assert_table(pk,0x0,0x8001484,0x8000000,0x20000000)/*tbl:[ } ] [ * ] [ " ] [ ' ] [ [ ] [ ; ] [ , ]*/)||pk.END())||pk.isNum()/*[num]*/){
                                                /*peek*/
                                                /*
                                                   94:276 method_definition=>property_name ( unique_formal_parameters ) { • }
                                                */
                                                if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                    /*--unique-id--154--DO-NOT-REPLACE*/
                                                    add_reduce(state,6,158);
                                                    prod = 154;
                                                    continue;
                                                }
                                            }
                                        } else {
                                            /*peek-production-closure*/
                                            /*
                                               94:269 method_definition=>property_name ( unique_formal_parameters ) { • function_body }
                                            */
                                            if(state=$function_statement_list(l,state)){
                                                add_reduce(state,1,120);
                                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                                if(assert_consume(l,state,l.utf==125/*[}]*/)){
                                                    /*--unique-id--154--DO-NOT-REPLACE*/
                                                    add_reduce(state,7,151);
                                                    prod = 154;
                                                    continue;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                } else if(assert_consume(l,state,l.utf==58/*[:]*/)){
                    /*consume*/
                    /*
                       154:470 property_definition=>property_name : • assignment_expression
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$assignment_expression(l,state)){
                        /*--unique-id--154--DO-NOT-REPLACE*/
                        add_reduce(state,3,219);
                        prod = 154;
                        continue;
                    }
                }
                break;
            case 185:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(l.utf==61/*[=]*/){
                    /*assert-production-closure*/
                    /*
                       158:477 cover_initialized_name=>identifier_reference • initializer
                    */
                    if(state=$initializer(l,state)){
                        /*--unique-id--154--DO-NOT-REPLACE*/
                        add_reduce(state,2,81);
                        prod = 154;
                        continue;
                    }
                } else {
                    /*assert-end*/
                    /*
                       154:467 property_definition=>identifier_reference •
                    */
                    /*--unique-id--154--DO-NOT-REPLACE*/
                    add_reduce(state,1,227);
                    prod = 154;
                    continue;
                }
                break;
            case 189:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(l.utf==61/*[=]*/){
                    /*assert-end*/
                    /*
                       187:541 identifier=>unreserved_word •
                    */
                    /*--unique-id--185--DO-NOT-REPLACE*/
                    add_reduce(state,1,255);
                    add_reduce(state,1,254);
                    prod = 185;
                    continue;
                } else {
                    /*assert-end*/
                    /*
                       188:544 identifier_name=>unreserved_word •
                    */
                    /*--unique-id--155--DO-NOT-REPLACE*/
                    add_reduce(state,1,256);
                    add_reduce(state,1,227);
                    prod = 155;
                    continue;
                }
                break;
            case 192:
                sk_532e3acfd819c8d6(l/*[ ws ][ 6 ]*/);
                if(l.utf==61/*[=]*/){
                    /*assert-end*/
                    /*
                       187:540 identifier=>composite_identifier •
                    */
                    /*--unique-id--185--DO-NOT-REPLACE*/
                    add_reduce(state,1,255);
                    add_reduce(state,1,254);
                    prod = 185;
                    continue;
                } else {
                    /*assert-end*/
                    /*
                       188:542 identifier_name=>composite_identifier •
                    */
                    /*--unique-id--155--DO-NOT-REPLACE*/
                    add_reduce(state,1,256);
                    add_reduce(state,1,227);
                    prod = 155;
                    continue;
                }
                break;
        }
        break;
    }
    debug_stack.push({ name:"property_definition GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==154);
}
/*production name: property_name
            grammar index: 155
            bodies:
	155:471 property_name=>• literal_property_name - 
		155:472 property_name=>• computed_property_name - 
            compile time: 3.59ms*/;
function $property_name(l,state){
    debug_stack.push({ name:"property_name RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(l.utf==91/*[[]*/){
        /*peek-production-closure*/
        /*
           155:472 property_name=>• computed_property_name
        */
        if(state=$computed_property_name(l,state)){
            /*--unique-id--155--DO-NOT-REPLACE*/
            add_reduce(state,1,227);
            debug_stack.push({ name:"property_name RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           155:471 property_name=>• literal_property_name
        */
        if(state=$literal_property_name(l,state)){
            /*--unique-id--155--DO-NOT-REPLACE*/
            add_reduce(state,1,227);
            debug_stack.push({ name:"property_name RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"property_name RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: literal_property_name
            grammar index: 156
            bodies:
	156:473 literal_property_name=>• identifier_name - 
		156:474 literal_property_name=>• string_literal - 
		156:475 literal_property_name=>• numeric_literal - 
            compile time: 3.461ms*/;
function $literal_property_name(l,state){
    debug_stack.push({ name:"literal_property_name RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if((l.utf==34/*["]*/)||(l.utf==39/*[']*/)){
        /*peek-production-closure*/
        /*
           156:474 literal_property_name=>• string_literal
        */
        if(state=$string_literal(l,state)){
            /*--unique-id--156--DO-NOT-REPLACE*/
            debug_stack.push({ name:"literal_property_name RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else if(l.isNum()/*[num]*/){
        /*peek-production-closure*/
        /*
           156:475 literal_property_name=>• numeric_literal
        */
        if(state=$numeric_literal(l,state)){
            /*--unique-id--156--DO-NOT-REPLACE*/
            debug_stack.push({ name:"literal_property_name RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           156:473 literal_property_name=>• identifier_name
        */
        if(state=$identifier_name(l,state)){
            /*--unique-id--156--DO-NOT-REPLACE*/
            debug_stack.push({ name:"literal_property_name RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"literal_property_name RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: computed_property_name
            grammar index: 157
            bodies:
	157:476 computed_property_name=>• [ assignment_expression ] - 
            compile time: 2.202ms*/;
function $computed_property_name(l,state){
    debug_stack.push({ name:"computed_property_name RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==91/*[[]*/)){
        /*consume*/
        /*
           157:476 computed_property_name=>[ • assignment_expression ]
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$assignment_expression(l,state)){
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,l.utf==93/*[]]*/)){
                /*--unique-id--157--DO-NOT-REPLACE*/
                add_reduce(state,3,228);
                debug_stack.push({ name:"computed_property_name RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    }
    debug_stack.push({ name:"computed_property_name RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: initializer
            grammar index: 159
            bodies:
	159:478 initializer=>• = assignment_expression - 
            compile time: 1.059ms*/;
function $initializer(l,state){
    debug_stack.push({ name:"initializer RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==61/*[=]*/)){
        /*consume*/
        /*
           159:478 initializer=>= • assignment_expression
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$assignment_expression(l,state)){
            /*--unique-id--159--DO-NOT-REPLACE*/
            add_reduce(state,2,229);
            debug_stack.push({ name:"initializer RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"initializer RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: array_literal
            grammar index: 160
            bodies:
	160:479 array_literal=>• [ elision ] - 
		160:480 array_literal=>• [ element_list ] - 
		160:481 array_literal=>• [ element_list , elision ] - 
		160:482 array_literal=>• [ ] - 
		160:483 array_literal=>• [ element_list , ] - 
            compile time: 328.738ms*/;
function $array_literal(l,state){
    debug_stack.push({ name:"array_literal RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==91/*[[]*/)){
        /*consume*/
        /*
           160:479 array_literal=>[ • elision ]
           160:480 array_literal=>[ • element_list ]
           160:481 array_literal=>[ • element_list , elision ]
           160:482 array_literal=>[ • ]
           160:483 array_literal=>[ • element_list , ]
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(l.utf==44/*[,]*/){
            /*peek*/
            /*
               160:479 array_literal=>[ • elision ]
               160:480 array_literal=>[ • element_list ]
               160:481 array_literal=>[ • element_list , elision ]
               160:483 array_literal=>[ • element_list , ]
            */
            let mk = mark();
            let anchor = l.copy();
            let anchor_state = state;
            /*479,3,1,480,3,1,481,5,1,483,4,1*/
            /*160*/
            if(state=$elision(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==93/*[]]*/)){
                    /*--unique-id--160--DO-NOT-REPLACE*/
                    add_reduce(state,3,230);
                    debug_stack.push({ name:"array_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
            /*479,3,1,480,3,1,481,5,1,483,4,1*/
            state = reset(mk,anchor,l,anchor_state);
            if(state=$element_list(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==93/*[]]*/)){
                    /*--unique-id--160--DO-NOT-REPLACE*/
                    add_reduce(state,3,231);
                    debug_stack.push({ name:"array_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
            /*479,3,1,480,3,1,481,5,1,483,4,1*/
            state = reset(mk,anchor,l,anchor_state);
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$element_list(l,state)){
                /*assert*/
                /*
                   160:481 array_literal=>[ • element_list , elision ]
                   160:483 array_literal=>[ • element_list , ]
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==44/*[,]*/)){
                    /*consume*/
                    /*
                       160:481 array_literal=>[ element_list , • elision ]
                       160:483 array_literal=>[ element_list , • ]
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(l.utf==44/*[,]*/){
                        /*peek-production-closure*/
                        /*
                           160:481 array_literal=>[ element_list , • elision ]
                        */
                        if(state=$elision(l,state)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==93/*[]]*/)){
                                /*--unique-id--160--DO-NOT-REPLACE*/
                                add_reduce(state,5,232);
                                debug_stack.push({ name:"array_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                return state;
                            }
                        }
                    } else if(assert_consume(l,state,l.utf==93/*[]]*/)){
                        /*consume*/
                        /*
                           160:483 array_literal=>[ element_list , ] •
                        */
                        /*--unique-id--160--DO-NOT-REPLACE*/
                        add_reduce(state,4,234);
                        debug_stack.push({ name:"array_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                }
            }
        } else if(assert_consume(l,state,l.utf==93/*[]]*/)){
            /*consume*/
            /*
               160:482 array_literal=>[ ] •
            */
            /*--unique-id--160--DO-NOT-REPLACE*/
            add_reduce(state,2,233);
            debug_stack.push({ name:"array_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        } else {
            /*peek-production-closure*/
            /*
               160:480 array_literal=>[ • element_list ]
               160:481 array_literal=>[ • element_list , elision ]
               160:483 array_literal=>[ • element_list , ]
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$element_list(l,state)){
                /*assert*/
                /*
                   160:480 array_literal=>[ • element_list ]
                   160:481 array_literal=>[ • element_list , elision ]
                   160:483 array_literal=>[ • element_list , ]
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==93/*[]]*/)){
                    /*consume*/
                    /*
                       160:480 array_literal=>[ element_list ] •
                    */
                    /*--unique-id--160--DO-NOT-REPLACE*/
                    add_reduce(state,3,231);
                    debug_stack.push({ name:"array_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                } else if(l.utf==44/*[,]*/){
                    /*peek*/
                    /*
                       160:481 array_literal=>[ element_list • , elision ]
                       160:483 array_literal=>[ element_list • , ]
                    */
                    let pk = l.copy();
                    sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
                    if(pk.utf==44/*[,]*/){
                        /*peek*/
                        /*
                           160:481 array_literal=>[ element_list • , elision ]
                        */
                        if(assert_consume(l,state,l.utf==44/*[,]*/)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(state=$elision(l,state)){
                                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                                if(assert_consume(l,state,l.utf==93/*[]]*/)){
                                    /*--unique-id--160--DO-NOT-REPLACE*/
                                    add_reduce(state,5,232);
                                    debug_stack.push({ name:"array_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                    return state;
                                }
                            }
                        }
                    } else if(pk.utf==93/*[]]*/){
                        /*peek*/
                        /*
                           160:483 array_literal=>[ element_list • , ]
                        */
                        if(assert_consume(l,state,l.utf==44/*[,]*/)){
                            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                            if(assert_consume(l,state,l.utf==93/*[]]*/)){
                                /*--unique-id--160--DO-NOT-REPLACE*/
                                add_reduce(state,4,234);
                                debug_stack.push({ name:"array_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                                return state;
                            }
                        }
                    }
                }
            }
        }
    }
    debug_stack.push({ name:"array_literal RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: element_list
            grammar index: 161
            bodies:
	161:484 element_list=>• elision assignment_expression - 
		161:485 element_list=>• elision spread_element - 
		161:486 element_list=>• element_list , elision assignment_expression - 
		161:487 element_list=>• element_list , elision spread_element - 
		161:488 element_list=>• assignment_expression - 
		161:489 element_list=>• spread_element - 
		161:490 element_list=>• element_list , assignment_expression - 
		161:491 element_list=>• element_list , spread_element - 
            compile time: 39.448ms*/;
function $element_list(l,state){
    debug_stack.push({ name:"element_list RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(l.utf==44/*[,]*/){
        /*peek-production-closure*/
        /*
           161:484 element_list=>• elision assignment_expression
           161:485 element_list=>• elision spread_element
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$elision(l,state)){
            /*assert*/
            /*
               161:484 element_list=>• elision assignment_expression
               161:485 element_list=>• elision spread_element
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(defined_token_f47f6de2d28c24e5(l)/*[...]*/){
                /*peek-production-closure*/
                /*
                   161:485 element_list=>elision • spread_element
                */
                if(state=$spread_element(l,state)){
                    /*--unique-id--161--DO-NOT-REPLACE*/
                    add_reduce(state,2,218);
                    return $element_list_goto(l,state,161);
                }
            } else {
                /*peek-production-closure*/
                /*
                   161:484 element_list=>elision • assignment_expression
                */
                if(state=$assignment_expression(l,state)){
                    /*--unique-id--161--DO-NOT-REPLACE*/
                    add_reduce(state,2,218);
                    return $element_list_goto(l,state,161);
                }
            }
        }
    } else if(defined_token_f47f6de2d28c24e5(l)/*[...]*/){
        /*peek-production-closure*/
        /*
           161:489 element_list=>• spread_element
        */
        if(state=$spread_element(l,state)){
            /*--unique-id--161--DO-NOT-REPLACE*/
            add_reduce(state,1,4);
            return $element_list_goto(l,state,161);
        }
    } else {
        /*peek-production-closure*/
        /*
           161:488 element_list=>• assignment_expression
        */
        if(state=$assignment_expression(l,state)){
            /*--unique-id--161--DO-NOT-REPLACE*/
            add_reduce(state,1,4);
            return $element_list_goto(l,state,161);
        }
    }
    debug_stack.push({ name:"element_list RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $element_list_goto(l,state,prod){
    debug_stack.push({ name:"element_list GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(l.utf==44/*[,]*/){
            /*peek*/
            /*
               161:486 element_list=>element_list • , elision assignment_expression
               161:487 element_list=>element_list • , elision spread_element
               161:490 element_list=>element_list • , assignment_expression
               161:491 element_list=>element_list • , spread_element
               160:481 array_literal=>[ element_list • , elision ]
               160:483 array_literal=>[ element_list • , ]
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(pk.utf==44/*[,]*/){
                /*peek*/
                /*
                   161:486 element_list=>element_list • , elision assignment_expression
                   161:487 element_list=>element_list • , elision spread_element
                   160:481 array_literal=>[ element_list • , elision ]
                */
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==44/*[,]*/)){
                    /*consume*/
                    /*
                       161:486 element_list=>element_list , • elision assignment_expression
                       161:487 element_list=>element_list , • elision spread_element
                       160:481 array_literal=>[ element_list , • elision ]
                    */
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$elision(l,state)){
                        /*assert*/
                        /*
                           161:486 element_list=>element_list , • elision assignment_expression
                           161:487 element_list=>element_list , • elision spread_element
                           160:481 array_literal=>[ element_list , • elision ]
                        */
                        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                        if(defined_token_f47f6de2d28c24e5(l)/*[...]*/){
                            /*peek-production-closure*/
                            /*
                               161:487 element_list=>element_list , elision • spread_element
                            */
                            if(state=$spread_element(l,state)){
                                /*--unique-id--161--DO-NOT-REPLACE*/
                                add_reduce(state,4,235);
                                prod = 161;
                                continue;
                            }
                        } else {
                            /*peek-production-closure*/
                            /*
                               161:486 element_list=>element_list , elision • assignment_expression
                            */
                            if(state=$assignment_expression(l,state)){
                                /*--unique-id--161--DO-NOT-REPLACE*/
                                add_reduce(state,4,235);
                                prod = 161;
                                continue;
                            }
                        }
                    }
                }
            } else if(defined_token_f47f6de2d28c24e5(pk)/*[...]*/){
                /*peek*/
                /*
                   161:491 element_list=>element_list • , spread_element
                */
                if(assert_consume(l,state,l.utf==44/*[,]*/)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$spread_element(l,state)){
                        /*--unique-id--161--DO-NOT-REPLACE*/
                        add_reduce(state,3,216);
                        prod = 161;
                        continue;
                    }
                }
            } else if((((defined_token_6d4f77707d3e0e5a(pk)/*[++]*/||defined_token_f2ef34011f64cef0(pk)/*[--]*/)||assert_table(pk,0x0,0xa996,0x88000000,0x48000001)/*tbl:[ + ] [ - ] [ ~ ] [ ! ] [ _ ] [ $ ] [ ( ] [ " ] [ ' ] [ [ ] [ { ] [ / ] [ ` ]*/)||pk.isID()/*[id]*/)||pk.isNum()/*[num]*/){
                /*peek*/
                /*
                   161:490 element_list=>element_list • , assignment_expression
                */
                if(assert_consume(l,state,l.utf==44/*[,]*/)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$assignment_expression(l,state)){
                        /*--unique-id--161--DO-NOT-REPLACE*/
                        add_reduce(state,3,216);
                        prod = 161;
                        continue;
                    }
                }
            }
        }
        break;
    }
    debug_stack.push({ name:"element_list GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==161);
}
/*production name: elision
            grammar index: 162
            bodies:
	162:492 elision=>• , - 
		162:493 elision=>• elision , - 
            compile time: 661.589ms*/;
function $elision(l,state){
    debug_stack.push({ name:"elision RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==44/*[,]*/)){
        /*consume*/
        /*
           162:492 elision=>, •
        */
        /*--unique-id--162--DO-NOT-REPLACE*/
        add_reduce(state,1,236);
        return $elision_goto(l,state,162);
    }
    debug_stack.push({ name:"elision RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $elision_goto(l,state,prod){
    debug_stack.push({ name:"elision GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==44/*[,]*/)){
            /*consume*/
            /*
               162:493 elision=>elision , •
            */
            /*--unique-id--162--DO-NOT-REPLACE*/
            add_reduce(state,2,237);
            prod = 162;
            continue;
        }
        break;
    }
    debug_stack.push({ name:"elision GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==162);
}
/*production name: spread_element
            grammar index: 163
            bodies:
	163:494 spread_element=>• ... assignment_expression - 
            compile time: 3.401ms*/;
function $spread_element(l,state){
    debug_stack.push({ name:"spread_element RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_f47f6de2d28c24e5(l)/*[...]*/)){
        /*consume*/
        /*
           163:494 spread_element=>... • assignment_expression
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$assignment_expression(l,state)){
            /*--unique-id--163--DO-NOT-REPLACE*/
            add_reduce(state,2,178);
            debug_stack.push({ name:"spread_element RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"spread_element RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: template_literal
            grammar index: 164
            bodies:
	164:495 template_literal=>• no_substitute_template - 
		164:496 template_literal=>• substitute_template - 
            compile time: 9.002ms*/;
function $template_literal(l,state){
    debug_stack.push({ name:"template_literal RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(l.utf==96/*[`]*/){
        /*peek*/
        /*
           164:495 template_literal=>• no_substitute_template
           164:496 template_literal=>• substitute_template
        */
        let pk = l.copy();
        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
        if(pk.utf==96/*[`]*/){
            /*peek-production-closure*/
            /*
               164:495 template_literal=>• no_substitute_template
            */
            if(state=$no_substitute_template(l,state)){
                /*--unique-id--164--DO-NOT-REPLACE*/
                debug_stack.push({ name:"template_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else {
            /*peek-production-closure*/
            /*
               164:496 template_literal=>• substitute_template
            */
            if(state=$substitute_template(l,state)){
                /*--unique-id--164--DO-NOT-REPLACE*/
                debug_stack.push({ name:"template_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    }
    debug_stack.push({ name:"template_literal RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: no_substitute_template
            grammar index: 165
            bodies:
	165:497 no_substitute_template=>• ` ` - 
            compile time: 1.999ms*/;
function $no_substitute_template(l,state){
    debug_stack.push({ name:"no_substitute_template RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==96/*[`]*/)){
        /*consume*/
        /*
           165:497 no_substitute_template=>` • `
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==96/*[`]*/)){
            /*--unique-id--165--DO-NOT-REPLACE*/
            add_reduce(state,2,238);
            debug_stack.push({ name:"no_substitute_template RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"no_substitute_template RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: substitute_template
            grammar index: 166
            bodies:
	166:498 substitute_template=>• template_head expression template_spans - 
            compile time: 4.956ms*/;
function $substitute_template(l,state){
    debug_stack.push({ name:"substitute_template RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$template_head(l,state)){
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$expression(l,state)){
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(state=$template_spans(l,state)){
                /*--unique-id--166--DO-NOT-REPLACE*/
                add_reduce(state,3,239);
                debug_stack.push({ name:"substitute_template RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    }
    debug_stack.push({ name:"substitute_template RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: template_spans
            grammar index: 167
            bodies:
	167:499 template_spans=>• template_tail - 
		167:500 template_spans=>• template_middle_list template_tail - 
            compile time: 6.307ms*/;
function $template_spans(l,state){
    debug_stack.push({ name:"template_spans RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(l.utf==125/*[}]*/){
        /*peek*/
        /*
           167:499 template_spans=>• template_tail
           167:500 template_spans=>• template_middle_list template_tail
        */
        let pk = l.copy();
        sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
        if(pk.utf==96/*[`]*/){
            /*peek-production-closure*/
            /*
               167:499 template_spans=>• template_tail
            */
            if(state=$template_tail(l,state)){
                /*--unique-id--167--DO-NOT-REPLACE*/
                add_reduce(state,1,4);
                debug_stack.push({ name:"template_spans RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else {
            /*peek-production-closure*/
            /*
               167:500 template_spans=>• template_middle_list template_tail
            */
            if(state=$template_middle_list(l,state)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(state=$template_tail(l,state)){
                    /*--unique-id--167--DO-NOT-REPLACE*/
                    add_reduce(state,2,240);
                    debug_stack.push({ name:"template_spans RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        }
    }
    debug_stack.push({ name:"template_spans RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: template_middle_list
            grammar index: 168
            bodies:
	168:501 template_middle_list=>• template_middle expression - 
		168:502 template_middle_list=>• template_middle_list template_middle expression - 
            compile time: 6.756ms*/;
function $template_middle_list(l,state){
    debug_stack.push({ name:"template_middle_list RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$template_middle(l,state)){
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(state=$expression(l,state)){
            /*--unique-id--168--DO-NOT-REPLACE*/
            add_reduce(state,2,218);
            return $template_middle_list_goto(l,state,168);
        }
    }
    debug_stack.push({ name:"template_middle_list RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $template_middle_list_goto(l,state,prod){
    debug_stack.push({ name:"template_middle_list GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(l.utf==125/*[}]*/){
            /*peek*/
            /*
               168:502 template_middle_list=>template_middle_list • template_middle expression
               167:500 template_spans=>template_middle_list • template_tail
            */
            let pk = l.copy();
            sk_2c33967dd3fbc823(pk.next()/*[ ws ][ nl ][ 6 ]*/);
            if(defined_token_75d68ac65a42afc4(pk)/*[${]*/){
                /*peek-production-closure*/
                /*
                   168:502 template_middle_list=>template_middle_list • template_middle expression
                */
                if(state=$template_middle(l,state)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(state=$expression(l,state)){
                        /*--unique-id--168--DO-NOT-REPLACE*/
                        add_reduce(state,3,241);
                        prod = 168;
                        continue;
                    }
                }
            }
        }
        break;
    }
    debug_stack.push({ name:"template_middle_list GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==168);
}
/*production name: template_head
            grammar index: 169
            bodies:
	169:503 template_head=>• ` ${ - 
            compile time: 2.508ms*/;
function $template_head(l,state){
    debug_stack.push({ name:"template_head RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==96/*[`]*/)){
        /*consume*/
        /*
           169:503 template_head=>` • ${
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,defined_token_75d68ac65a42afc4(l)/*[${]*/)){
            /*--unique-id--169--DO-NOT-REPLACE*/
            add_reduce(state,2,242);
            debug_stack.push({ name:"template_head RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"template_head RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: template_middle
            grammar index: 170
            bodies:
	170:504 template_middle=>• } ${ - 
            compile time: 2.119ms*/;
function $template_middle(l,state){
    debug_stack.push({ name:"template_middle RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==125/*[}]*/)){
        /*consume*/
        /*
           170:504 template_middle=>} • ${
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,defined_token_75d68ac65a42afc4(l)/*[${]*/)){
            /*--unique-id--170--DO-NOT-REPLACE*/
            add_reduce(state,2,243);
            debug_stack.push({ name:"template_middle RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"template_middle RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: template_tail
            grammar index: 171
            bodies:
	171:505 template_tail=>• } ` - 
            compile time: 2.046ms*/;
function $template_tail(l,state){
    debug_stack.push({ name:"template_tail RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==125/*[}]*/)){
        /*consume*/
        /*
           171:505 template_tail=>} • `
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==96/*[`]*/)){
            /*--unique-id--171--DO-NOT-REPLACE*/
            add_reduce(state,2,244);
            debug_stack.push({ name:"template_tail RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"template_tail RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: literal
            grammar index: 174
            bodies:
	174:512 literal=>• boolean_literal - 
		174:513 literal=>• null_literal - 
		174:514 literal=>• string_literal - 
		174:515 literal=>• numeric_literal - 
		174:516 literal=>• bigint - 
            compile time: 10.692ms*/;
function $literal(l,state){
    debug_stack.push({ name:"literal RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(defined_token_6fe6f90f8fe15dd0(l)/*[null]*/){
        /*peek-production-closure*/
        /*
           174:513 literal=>• null_literal
        */
        if(state=$null_literal(l,state)){
            /*--unique-id--174--DO-NOT-REPLACE*/
            debug_stack.push({ name:"literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else if(defined_token_99376be254728810(l)/*[true]*/||defined_token_57da255105f722f9(l)/*[false]*/){
        /*peek-production-closure*/
        /*
           174:512 literal=>• boolean_literal
        */
        if(state=$boolean_literal(l,state)){
            /*--unique-id--174--DO-NOT-REPLACE*/
            debug_stack.push({ name:"literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else if((l.utf==34/*["]*/)||(l.utf==39/*[']*/)){
        /*peek-production-closure*/
        /*
           174:514 literal=>• string_literal
        */
        if(state=$string_literal(l,state)){
            /*--unique-id--174--DO-NOT-REPLACE*/
            debug_stack.push({ name:"literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else if(l.isNum()/*[num]*/){
        /*peek*/
        /*
           174:515 literal=>• numeric_literal
           174:516 literal=>• bigint
        */
        let pk = l.copy();
        sk_532e3acfd819c8d6(pk.next()/*[ ws ][ 6 ]*/);
        if(pk.utf==110/*[n]*/){
            /*peek-production-closure*/
            /*
               174:516 literal=>• bigint
            */
            if(state=$bigint(l,state)){
                /*--unique-id--174--DO-NOT-REPLACE*/
                debug_stack.push({ name:"literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else {
            /*peek-production-closure*/
            /*
               174:515 literal=>• numeric_literal
            */
            if(state=$numeric_literal(l,state)){
                /*--unique-id--174--DO-NOT-REPLACE*/
                debug_stack.push({ name:"literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        }
    }
    debug_stack.push({ name:"literal RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: string_literal_HC_listbody1_121
            grammar index: 175
            bodies:
	175:517 string_literal_HC_listbody1_121=>• string_literal_HC_listbody1_121 string_data - 
		175:518 string_literal_HC_listbody1_121=>• string_data - 
            compile time: 4.325ms*/;
function $string_literal_HC_listbody1_121(l,state){
    debug_stack.push({ name:"string_literal_HC_listbody1_121 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$string_data(l,state)){
        /*--unique-id--175--DO-NOT-REPLACE*/
        add_reduce(state,1,247);
        return $string_literal_HC_listbody1_121_goto(l,state,175);
    }
    debug_stack.push({ name:"string_literal_HC_listbody1_121 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $string_literal_HC_listbody1_121_goto(l,state,prod){
    debug_stack.push({ name:"string_literal_HC_listbody1_121 GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_78c208d4d792ec90(l/*[ 6 ]*/);
        if(defined_token_70d91b687222e5ae(l)/*["]*/){
            return state;
        }
        if((((l.isID()/*[id]*/||l.isNL()/*[nl]*/)||l.isNum()/*[num]*/)||l.isSym()/*[sym]*/)||l.isSP()/*[ws]*/){
            /*peek-production-closure*/
            /*
               175:517 string_literal_HC_listbody1_121=>string_literal_HC_listbody1_121 • string_data
            */
            if(state=$string_data(l,state)){
                /*--unique-id--175--DO-NOT-REPLACE*/
                add_reduce(state,2,246);
                prod = 175;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"string_literal_HC_listbody1_121 GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==175);
}
/*production name: string_literal_HC_listbody1_122
            grammar index: 176
            bodies:
	176:519 string_literal_HC_listbody1_122=>• string_literal_HC_listbody1_122 string_data - 
		176:520 string_literal_HC_listbody1_122=>• string_data - 
            compile time: 4.798ms*/;
function $string_literal_HC_listbody1_122(l,state){
    debug_stack.push({ name:"string_literal_HC_listbody1_122 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$string_data(l,state)){
        /*--unique-id--176--DO-NOT-REPLACE*/
        add_reduce(state,1,247);
        return $string_literal_HC_listbody1_122_goto(l,state,176);
    }
    debug_stack.push({ name:"string_literal_HC_listbody1_122 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $string_literal_HC_listbody1_122_goto(l,state,prod){
    debug_stack.push({ name:"string_literal_HC_listbody1_122 GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_78c208d4d792ec90(l/*[ 6 ]*/);
        if(defined_token_dcd094f052938e12(l)/*[']*/){
            return state;
        }
        if((((l.isID()/*[id]*/||l.isNL()/*[nl]*/)||l.isNum()/*[num]*/)||l.isSym()/*[sym]*/)||l.isSP()/*[ws]*/){
            /*peek-production-closure*/
            /*
               176:519 string_literal_HC_listbody1_122=>string_literal_HC_listbody1_122 • string_data
            */
            if(state=$string_data(l,state)){
                /*--unique-id--176--DO-NOT-REPLACE*/
                add_reduce(state,2,246);
                prod = 176;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"string_literal_HC_listbody1_122 GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==176);
}
/*production name: string_literal
            grammar index: 177
            bodies:
	177:521 string_literal=>• " string_literal_HC_listbody1_121 " - 
		177:522 string_literal=>• ' string_literal_HC_listbody1_122 ' - 
		177:523 string_literal=>• " " - 
		177:524 string_literal=>• ' ' - 
            compile time: 19.205ms*/;
function $string_literal(l,state){
    debug_stack.push({ name:"string_literal RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(l.utf==34/*["]*/){
        /*peek*/
        /*
           177:521 string_literal=>• " string_literal_HC_listbody1_121 "
           177:523 string_literal=>• " "
        */
        let pk = l.copy();
        sk_78c208d4d792ec90(pk.next()/*[ 6 ]*/);
        if(defined_token_70d91b687222e5ae(pk)/*["]*/){
            /*peek-production-closure*/
            /*
               177:523 string_literal=>• " "
            */
            if(assert_consume(l,state,l.utf==34/*["]*/)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==34/*["]*/)){
                    /*--unique-id--177--DO-NOT-REPLACE*/
                    add_reduce(state,2,245);
                    debug_stack.push({ name:"string_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        } else {
            /*peek-production-closure*/
            /*
               177:521 string_literal=>• " string_literal_HC_listbody1_121 "
            */
            if(assert_consume(l,state,l.utf==34/*["]*/)){
                sk_78c208d4d792ec90(l/*[ 6 ]*/);
                if(state=$string_literal_HC_listbody1_121(l,state)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==34/*["]*/)){
                        /*--unique-id--177--DO-NOT-REPLACE*/
                        add_reduce(state,3,248);
                        debug_stack.push({ name:"string_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                }
            }
        }
    } else if(l.utf==39/*[']*/){
        /*peek*/
        /*
           177:522 string_literal=>• ' string_literal_HC_listbody1_122 '
           177:524 string_literal=>• ' '
        */
        let pk = l.copy();
        sk_78c208d4d792ec90(pk.next()/*[ 6 ]*/);
        if(defined_token_dcd094f052938e12(pk)/*[']*/){
            /*peek-production-closure*/
            /*
               177:524 string_literal=>• ' '
            */
            if(assert_consume(l,state,l.utf==39/*[']*/)){
                sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                if(assert_consume(l,state,l.utf==39/*[']*/)){
                    /*--unique-id--177--DO-NOT-REPLACE*/
                    add_reduce(state,2,245);
                    debug_stack.push({ name:"string_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                    return state;
                }
            }
        } else {
            /*peek-production-closure*/
            /*
               177:522 string_literal=>• ' string_literal_HC_listbody1_122 '
            */
            if(assert_consume(l,state,l.utf==39/*[']*/)){
                sk_78c208d4d792ec90(l/*[ 6 ]*/);
                if(state=$string_literal_HC_listbody1_122(l,state)){
                    sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
                    if(assert_consume(l,state,l.utf==39/*[']*/)){
                        /*--unique-id--177--DO-NOT-REPLACE*/
                        add_reduce(state,3,248);
                        debug_stack.push({ name:"string_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                        return state;
                    }
                }
            }
        }
    }
    debug_stack.push({ name:"string_literal RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: string_data
            grammar index: 178
            bodies:
	178:525 string_data=>• θnl - 
		178:526 string_data=>• θws - 
		178:527 string_data=>• θsym - 
		178:528 string_data=>• θnum - 
		178:529 string_data=>• θid - 
		178:530 string_data=>• escaped_sequence - 
            compile time: 5.622ms*/;
function $string_data(l,state){
    debug_stack.push({ name:"string_data RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(defined_token_97485949e321ad2b(l)/*[\]*/){
        /*peek-production-closure*/
        /*
           178:530 string_data=>• escaped_sequence
        */
        if(state=$escaped_sequence(l,state)){
            /*--unique-id--178--DO-NOT-REPLACE*/
            debug_stack.push({ name:"string_data RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else if(assert_consume(l,state,(((l.isID()/*[id]*/||l.isNL()/*[nl]*/)||l.isNum()/*[num]*/)||l.isSym()/*[sym]*/)||l.isSP()/*[ws]*/)){
        /*consume*/
        /*
           178:525 string_data=>θnl •
           178:526 string_data=>θws •
           178:527 string_data=>θsym •
           178:528 string_data=>θnum •
           178:529 string_data=>θid •
        */
        /*--unique-id--178--DO-NOT-REPLACE*/
        debug_stack.push({ name:"string_data RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"string_data RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: escaped_sequence
            grammar index: 179
            bodies:
	179:531 escaped_sequence=>• \ comments_group_07_100 - 
            compile time: 3.316ms*/;
function $escaped_sequence(l,state){
    debug_stack.push({ name:"escaped_sequence RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==92/*[\]*/)){
        /*consume*/
        /*
           179:531 escaped_sequence=>\ • comments_group_07_100
        */
        sk_78c208d4d792ec90(l/*[ 6 ]*/);
        if(state=$comments_group_07_100(l,state)){
            /*--unique-id--179--DO-NOT-REPLACE*/
            add_reduce(state,2,246);
            debug_stack.push({ name:"escaped_sequence RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"escaped_sequence RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: bigint
            grammar index: 180
            bodies:
	180:532 bigint=>• θnum τn - 
            compile time: 1.257ms*/;
function $bigint(l,state){
    debug_stack.push({ name:"bigint RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.isNum()/*[num]*/)){
        /*consume*/
        /*
           180:532 bigint=>θnum • τn
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==110/*[n]*/)){
            /*--unique-id--180--DO-NOT-REPLACE*/
            add_reduce(state,2,249);
            debug_stack.push({ name:"bigint RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"bigint RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: numeric_literal
            grammar index: 181
            bodies:
	181:533 numeric_literal=>• θnum - 
            compile time: 1.033ms*/;
function $numeric_literal(l,state){
    debug_stack.push({ name:"numeric_literal RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.isNum()/*[num]*/)){
        /*consume*/
        /*
           181:533 numeric_literal=>θnum •
        */
        /*--unique-id--181--DO-NOT-REPLACE*/
        add_reduce(state,1,250);
        debug_stack.push({ name:"numeric_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"numeric_literal RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: null_literal
            grammar index: 182
            bodies:
	182:534 null_literal=>• τnull - 
            compile time: 9.314ms*/;
function $null_literal(l,state){
    debug_stack.push({ name:"null_literal RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_6fe6f90f8fe15dd0(l)/*[null]*/)){
        /*consume*/
        /*
           182:534 null_literal=>τnull •
        */
        /*--unique-id--182--DO-NOT-REPLACE*/
        add_reduce(state,1,251);
        debug_stack.push({ name:"null_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"null_literal RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: boolean_literal
            grammar index: 183
            bodies:
	183:535 boolean_literal=>• τtrue - 
		183:536 boolean_literal=>• τfalse - 
            compile time: 8.898ms*/;
function $boolean_literal(l,state){
    debug_stack.push({ name:"boolean_literal RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_99376be254728810(l)/*[true]*/||defined_token_57da255105f722f9(l)/*[false]*/)){
        /*consume*/
        /*
           183:535 boolean_literal=>τtrue •
           183:536 boolean_literal=>τfalse •
        */
        /*--unique-id--183--DO-NOT-REPLACE*/
        add_reduce(state,1,252);
        debug_stack.push({ name:"boolean_literal RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"boolean_literal RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: binding_identifier
            grammar index: 186
            bodies:
	186:539 binding_identifier=>• identifier - 
            compile time: 0.452ms*/;
function $binding_identifier(l,state){
    debug_stack.push({ name:"binding_identifier RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$identifier(l,state)){
        /*--unique-id--186--DO-NOT-REPLACE*/
        add_reduce(state,1,126);
        debug_stack.push({ name:"binding_identifier RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"binding_identifier RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: identifier
            grammar index: 187
            bodies:
	187:540 identifier=>• composite_identifier - 
		187:541 identifier=>• unreserved_word - 
            compile time: 1.953ms*/;
function $identifier(l,state){
    debug_stack.push({ name:"identifier RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if((((defined_token_412dc567ff7a9dc1(l)/*[async] [as]*/||defined_token_b3658faeba5b21ae(l)/*[get]*/)||defined_token_6f721474e5bd80e7(l)/*[set]*/)||defined_token_31feb5065feb87e5(l)/*[target]*/)||defined_token_7437f7cf2d9c9a71(l)/*[from]*/){
        /*peek-production-closure*/
        /*
           187:541 identifier=>• unreserved_word
        */
        if(state=$unreserved_word(l,state)){
            /*--unique-id--187--DO-NOT-REPLACE*/
            add_reduce(state,1,255);
            debug_stack.push({ name:"identifier RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           187:540 identifier=>• composite_identifier
        */
        if(state=$def$js_identifier(l,state)){
            /*--unique-id--187--DO-NOT-REPLACE*/
            add_reduce(state,1,255);
            debug_stack.push({ name:"identifier RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"identifier RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: identifier_name
            grammar index: 188
            bodies:
	188:542 identifier_name=>• composite_identifier - 
		188:543 identifier_name=>• reserved_word - 
		188:544 identifier_name=>• unreserved_word - 
            compile time: 23.645ms*/;
function $identifier_name(l,state){
    debug_stack.push({ name:"identifier_name RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if((((defined_token_412dc567ff7a9dc1(l)/*[async] [as]*/||defined_token_b3658faeba5b21ae(l)/*[get]*/)||defined_token_6f721474e5bd80e7(l)/*[set]*/)||defined_token_31feb5065feb87e5(l)/*[target]*/)||defined_token_7437f7cf2d9c9a71(l)/*[from]*/){
        /*peek-production-closure*/
        /*
           188:544 identifier_name=>• unreserved_word
        */
        if(state=$unreserved_word(l,state)){
            /*--unique-id--188--DO-NOT-REPLACE*/
            add_reduce(state,1,256);
            debug_stack.push({ name:"identifier_name RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else if((((((((((((((defined_token_44aa3f48541f3402(l)/*[await]*/||defined_token_14176d5b613b7d00(l)/*[break]*/)||defined_token_5459ff5932c71df8(l)/*[case] [catch] [class] [const] [continue]*/)||defined_token_67feb3a1937413de(l)/*[debugger] [default] [delete] [do]*/)||defined_token_71a747ad1421d9d3(l)/*[else] [export] [extends]*/)||defined_token_59eb8ce041e18647(l)/*[finally] [for] [function] [false]*/)||defined_token_9b4384e3c50814ee(l)/*[if] [import] [in] [instanceof] [implements] [interface]*/)||defined_token_0e8a531b18b35626(l)/*[new] [null]*/)||defined_token_cbaaba63eba9e5c4(l)/*[return]*/)||defined_token_b0c9e74960406db7(l)/*[super] [switch]*/)||defined_token_47107e97ad1f0a55(l)/*[this] [throw] [try] [typeof] [true]*/)||defined_token_e01a6bec7226ccc7(l)/*[var] [void]*/)||defined_token_ae2088ea4af8ad53(l)/*[while] [with]*/)||defined_token_202a14414fc7633f(l)/*[yield]*/)||defined_token_6e60e7c20d0b8e21(l)/*[package] [protected] [private] [public]*/){
        /*peek-production-closure*/
        /*
           188:543 identifier_name=>• reserved_word
        */
        if(state=$reserved_word(l,state)){
            /*--unique-id--188--DO-NOT-REPLACE*/
            add_reduce(state,1,256);
            debug_stack.push({ name:"identifier_name RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           188:542 identifier_name=>• composite_identifier
        */
        if(state=$def$js_identifier(l,state)){
            /*--unique-id--188--DO-NOT-REPLACE*/
            add_reduce(state,1,256);
            debug_stack.push({ name:"identifier_name RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"identifier_name RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: unreserved_word
            grammar index: 189
            bodies:
	189:545 unreserved_word=>• τasync - 
		189:546 unreserved_word=>• τget - 
		189:547 unreserved_word=>• τset - 
		189:548 unreserved_word=>• τtarget - 
		189:549 unreserved_word=>• τas - 
		189:550 unreserved_word=>• τfrom - 
            compile time: 5.053ms*/;
function $unreserved_word(l,state){
    debug_stack.push({ name:"unreserved_word RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,(((defined_token_845a30f46ac258a6(l)/*[async] [as]*/||defined_token_8f5d282f35165648(l)/*[get]*/)||defined_token_5bca542dce980d9c(l)/*[set]*/)||defined_token_1cb42c7dd41b3a7e(l)/*[target]*/)||defined_token_14469127dc9c2c1f(l)/*[from]*/)){
        /*consume*/
        /*
           189:545 unreserved_word=>τasync •
           189:546 unreserved_word=>τget •
           189:547 unreserved_word=>τset •
           189:548 unreserved_word=>τtarget •
           189:549 unreserved_word=>τas •
           189:550 unreserved_word=>τfrom •
        */
        /*--unique-id--189--DO-NOT-REPLACE*/
        debug_stack.push({ name:"unreserved_word RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"unreserved_word RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: reserved_word
            grammar index: 190
            bodies:
	190:551 reserved_word=>• keyword - 
		190:552 reserved_word=>• future_reserved_word - 
		190:553 reserved_word=>• τnull - 
		190:554 reserved_word=>• τtrue - 
		190:555 reserved_word=>• τfalse - 
            compile time: 11.681ms*/;
function $reserved_word(l,state){
    debug_stack.push({ name:"reserved_word RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,(defined_token_6fe6f90f8fe15dd0(l)/*[null]*/||defined_token_99376be254728810(l)/*[true]*/)||defined_token_57da255105f722f9(l)/*[false]*/)){
        /*consume*/
        /*
           190:553 reserved_word=>τnull •
           190:554 reserved_word=>τtrue •
           190:555 reserved_word=>τfalse •
        */
        /*--unique-id--190--DO-NOT-REPLACE*/
        debug_stack.push({ name:"reserved_word RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    } else if(defined_token_93b20e8c3e2b885c(l)/*[implements] [interface]*/||defined_token_dc17de0546cfa0c9(l)/*[package] [protected] [private] [public]*/){
        /*peek-production-closure*/
        /*
           190:552 reserved_word=>• future_reserved_word
        */
        if(state=$future_reserved_word(l,state)){
            /*--unique-id--190--DO-NOT-REPLACE*/
            debug_stack.push({ name:"reserved_word RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    } else {
        /*peek-production-closure*/
        /*
           190:551 reserved_word=>• keyword
        */
        if(state=$keyword(l,state)){
            /*--unique-id--190--DO-NOT-REPLACE*/
            debug_stack.push({ name:"reserved_word RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"reserved_word RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: future_reserved_word
            grammar index: 191
            bodies:
	191:556 future_reserved_word=>• τimplements - 
		191:557 future_reserved_word=>• τpackage - 
		191:558 future_reserved_word=>• τprotected - 
		191:559 future_reserved_word=>• τinterface - 
		191:560 future_reserved_word=>• τprivate - 
		191:561 future_reserved_word=>• τpublic - 
            compile time: 3.914ms*/;
function $future_reserved_word(l,state){
    debug_stack.push({ name:"future_reserved_word RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_6135305a1f53a41a(l)/*[implements] [interface]*/||defined_token_dc17de0546cfa0c9(l)/*[package] [protected] [private] [public]*/)){
        /*consume*/
        /*
           191:556 future_reserved_word=>τimplements •
           191:557 future_reserved_word=>τpackage •
           191:558 future_reserved_word=>τprotected •
           191:559 future_reserved_word=>τinterface •
           191:560 future_reserved_word=>τprivate •
           191:561 future_reserved_word=>τpublic •
        */
        /*--unique-id--191--DO-NOT-REPLACE*/
        debug_stack.push({ name:"future_reserved_word RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"future_reserved_word RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: keyword
            grammar index: 193
            bodies:
	193:563 keyword=>• τawait - 
		193:564 keyword=>• τbreak - 
		193:565 keyword=>• τcase - 
		193:566 keyword=>• τcatch - 
		193:567 keyword=>• τclass - 
		193:568 keyword=>• τconst - 
		193:569 keyword=>• τcontinue - 
		193:570 keyword=>• τdebugger - 
		193:571 keyword=>• τdefault - 
		193:572 keyword=>• τdelete - 
		193:573 keyword=>• τdo - 
		193:574 keyword=>• τelse - 
		193:575 keyword=>• τexport - 
		193:576 keyword=>• τextends - 
		193:577 keyword=>• τfinally - 
		193:578 keyword=>• τfor - 
		193:579 keyword=>• τfunction - 
		193:580 keyword=>• τif - 
		193:581 keyword=>• τimport - 
		193:582 keyword=>• τin - 
		193:583 keyword=>• τinstanceof - 
		193:584 keyword=>• τnew - 
		193:585 keyword=>• τreturn - 
		193:586 keyword=>• τsuper - 
		193:587 keyword=>• τswitch - 
		193:588 keyword=>• τthis - 
		193:589 keyword=>• τthrow - 
		193:590 keyword=>• τtry - 
		193:591 keyword=>• τtypeof - 
		193:592 keyword=>• τvar - 
		193:593 keyword=>• τvoid - 
		193:594 keyword=>• τwhile - 
		193:595 keyword=>• τwith - 
		193:596 keyword=>• τyield - 
            compile time: 11.932ms*/;
function $keyword(l,state){
    debug_stack.push({ name:"keyword RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,((((((((((((defined_token_ded0f96a7228c7c5(l)/*[await]*/||defined_token_c3524ff0dce64492(l)/*[break]*/)||defined_token_c460df0c19b30757(l)/*[case] [catch] [class] [const] [continue]*/)||defined_token_0b6f38e897a6033b(l)/*[debugger] [default] [delete] [do]*/)||defined_token_eb7f69039a78f607(l)/*[else] [export] [extends]*/)||defined_token_cf0f887595c20618(l)/*[finally] [for] [function]*/)||defined_token_38bd1ef252233e12(l)/*[if] [import] [in] [instanceof]*/)||defined_token_79b82aa5b55f0605(l)/*[new]*/)||defined_token_876f036172605c26(l)/*[return]*/)||defined_token_35cdf6168a8ead76(l)/*[super] [switch]*/)||defined_token_53acc3dc3e0044c1(l)/*[this] [throw] [try] [typeof]*/)||defined_token_b64c7c58a10dcef3(l)/*[var] [void]*/)||defined_token_aac16ca323764d7a(l)/*[while] [with]*/)||defined_token_d8f9d336d83ac87c(l)/*[yield]*/)){
        /*consume*/
        /*
           193:563 keyword=>τawait •
           193:564 keyword=>τbreak •
           193:565 keyword=>τcase •
           193:566 keyword=>τcatch •
           193:567 keyword=>τclass •
           193:568 keyword=>τconst •
           193:569 keyword=>τcontinue •
           193:570 keyword=>τdebugger •
           193:571 keyword=>τdefault •
           193:572 keyword=>τdelete •
           193:573 keyword=>τdo •
           193:574 keyword=>τelse •
           193:575 keyword=>τexport •
           193:576 keyword=>τextends •
           193:577 keyword=>τfinally •
           193:578 keyword=>τfor •
           193:579 keyword=>τfunction •
           193:580 keyword=>τif •
           193:581 keyword=>τimport •
           193:582 keyword=>τin •
           193:583 keyword=>τinstanceof •
           193:584 keyword=>τnew •
           193:585 keyword=>τreturn •
           193:586 keyword=>τsuper •
           193:587 keyword=>τswitch •
           193:588 keyword=>τthis •
           193:589 keyword=>τthrow •
           193:590 keyword=>τtry •
           193:591 keyword=>τtypeof •
           193:592 keyword=>τvar •
           193:593 keyword=>τvoid •
           193:594 keyword=>τwhile •
           193:595 keyword=>τwith •
           193:596 keyword=>τyield •
        */
        /*--unique-id--193--DO-NOT-REPLACE*/
        debug_stack.push({ name:"keyword RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"keyword RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: def$scientific_token_group_027_101
            grammar index: 203
            bodies:
	203:625 def$scientific_token_group_027_101=>• e - 
		203:626 def$scientific_token_group_027_101=>• E - 
            compile time: 1.035ms*/;
function $def$scientific_token_group_027_101(l,state){
    debug_stack.push({ name:"def$scientific_token_group_027_101 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,(l.utf==101/*[e]*/)||(l.utf==69/*[E]*/))){
        /*consume*/
        /*
           203:625 def$scientific_token_group_027_101=>e •
           203:626 def$scientific_token_group_027_101=>E •
        */
        /*--unique-id--203--DO-NOT-REPLACE*/
        debug_stack.push({ name:"def$scientific_token_group_027_101 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"def$scientific_token_group_027_101 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: def$scientific_token_group_228_102
            grammar index: 204
            bodies:
	204:627 def$scientific_token_group_228_102=>• def$scientific_token_group_027_101 - θnum - 
		204:628 def$scientific_token_group_228_102=>• def$scientific_token_group_027_101 θnum - 
            compile time: 4.9ms*/;
function $def$scientific_token_group_228_102(l,state){
    debug_stack.push({ name:"def$scientific_token_group_228_102 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$def$scientific_token_group_027_101(l,state)){
        /*assert*/
        /*
           204:627 def$scientific_token_group_228_102=>• def$scientific_token_group_027_101 - θnum
           204:628 def$scientific_token_group_228_102=>• def$scientific_token_group_027_101 θnum
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.utf==45/*[-]*/)){
            /*consume*/
            /*
               204:627 def$scientific_token_group_228_102=>def$scientific_token_group_027_101 - • θnum
            */
            sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
            if(assert_consume(l,state,l.isNum()/*[num]*/)){
                /*--unique-id--204--DO-NOT-REPLACE*/
                add_reduce(state,3,0);
                debug_stack.push({ name:"def$scientific_token_group_228_102 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else if(assert_consume(l,state,l.isNum()/*[num]*/)){
            /*consume*/
            /*
               204:628 def$scientific_token_group_228_102=>def$scientific_token_group_027_101 θnum •
            */
            /*--unique-id--204--DO-NOT-REPLACE*/
            add_reduce(state,2,0);
            debug_stack.push({ name:"def$scientific_token_group_228_102 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"def$scientific_token_group_228_102 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: def$scientific_token
            grammar index: 205
            bodies:
	205:629 def$scientific_token=>• def$float_token def$scientific_token_group_228_102 - 
		205:630 def$scientific_token=>• def$float_token - 
            compile time: 2.375ms*/;
function $def$scientific_token(l,state){
    debug_stack.push({ name:"def$scientific_token RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$def$float_token(l,state)){
        /*assert*/
        /*
           205:629 def$scientific_token=>• def$float_token def$scientific_token_group_228_102
           205:630 def$scientific_token=>• def$float_token
        */
        sk_1eb87aeb7f96e2bc(l/*[ nl ][ 6 ]*/);
        if((l.utf==101/*[e]*/)||(l.utf==69/*[E]*/)){
            /*assert-production-closure*/
            /*
               205:629 def$scientific_token=>def$float_token • def$scientific_token_group_228_102
            */
            if(state=$def$scientific_token_group_228_102(l,state)){
                /*--unique-id--205--DO-NOT-REPLACE*/
                add_reduce(state,2,0);
                debug_stack.push({ name:"def$scientific_token RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else {
            /*assert-end*/
            /*
               205:630 def$scientific_token=>def$float_token •
            */
            /*--unique-id--205--DO-NOT-REPLACE*/
            debug_stack.push({ name:"def$scientific_token RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"def$scientific_token RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: def$float_token_group_130_103
            grammar index: 206
            bodies:
	206:631 def$float_token_group_130_103=>• . θnum - 
            compile time: 2.621ms*/;
function $def$float_token_group_130_103(l,state){
    debug_stack.push({ name:"def$float_token_group_130_103 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.utf==46/*[.]*/)){
        /*consume*/
        /*
           206:631 def$float_token_group_130_103=>. • θnum
        */
        sk_2c33967dd3fbc823(l/*[ ws ][ nl ][ 6 ]*/);
        if(assert_consume(l,state,l.isNum()/*[num]*/)){
            /*--unique-id--206--DO-NOT-REPLACE*/
            add_reduce(state,2,0);
            debug_stack.push({ name:"def$float_token_group_130_103 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"def$float_token_group_130_103 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: def$float_token
            grammar index: 207
            bodies:
	207:632 def$float_token=>• θnum def$float_token_group_130_103 - 
		207:633 def$float_token=>• θnum - 
            compile time: 3.362ms*/;
function $def$float_token(l,state){
    debug_stack.push({ name:"def$float_token RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,l.isNum()/*[num]*/)){
        /*consume*/
        /*
           207:632 def$float_token=>θnum • def$float_token_group_130_103
           207:633 def$float_token=>θnum •
        */
        sk_78c208d4d792ec90(l/*[ 6 ]*/);
        if(l.utf==46/*[.]*/){
            /*assert-production-closure*/
            /*
               207:632 def$float_token=>θnum • def$float_token_group_130_103
            */
            if(state=$def$float_token_group_130_103(l,state)){
                /*--unique-id--207--DO-NOT-REPLACE*/
                add_reduce(state,2,0);
                debug_stack.push({ name:"def$float_token RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
                return state;
            }
        } else {
            /*assert-end*/
            /*
               207:633 def$float_token=>θnum •
            */
            /*--unique-id--207--DO-NOT-REPLACE*/
            debug_stack.push({ name:"def$float_token RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"def$float_token RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: def$hex_token_group_044_104
            grammar index: 208
            bodies:
	208:634 def$hex_token_group_044_104=>• θnum - 
		208:635 def$hex_token_group_044_104=>• a - 
		208:636 def$hex_token_group_044_104=>• b - 
		208:637 def$hex_token_group_044_104=>• c - 
		208:638 def$hex_token_group_044_104=>• d - 
		208:639 def$hex_token_group_044_104=>• e - 
		208:640 def$hex_token_group_044_104=>• f - 
		208:641 def$hex_token_group_044_104=>• A - 
		208:642 def$hex_token_group_044_104=>• B - 
		208:643 def$hex_token_group_044_104=>• C - 
		208:644 def$hex_token_group_044_104=>• D - 
		208:645 def$hex_token_group_044_104=>• E - 
		208:646 def$hex_token_group_044_104=>• F - 
            compile time: 2.246ms*/;
function $def$hex_token_group_044_104(l,state){
    debug_stack.push({ name:"def$hex_token_group_044_104 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,assert_table(l,0x0,0x0,0x7e,0x7e)/*tbl:[ a ] [ b ] [ c ] [ d ] [ e ] [ f ] [ A ] [ B ] [ C ] [ D ] [ E ] [ F ]*/||l.isNum()/*[num]*/)){
        /*consume*/
        /*
           208:634 def$hex_token_group_044_104=>θnum •
           208:635 def$hex_token_group_044_104=>a •
           208:636 def$hex_token_group_044_104=>b •
           208:637 def$hex_token_group_044_104=>c •
           208:638 def$hex_token_group_044_104=>d •
           208:639 def$hex_token_group_044_104=>e •
           208:640 def$hex_token_group_044_104=>f •
           208:641 def$hex_token_group_044_104=>A •
           208:642 def$hex_token_group_044_104=>B •
           208:643 def$hex_token_group_044_104=>C •
           208:644 def$hex_token_group_044_104=>D •
           208:645 def$hex_token_group_044_104=>E •
           208:646 def$hex_token_group_044_104=>F •
        */
        /*--unique-id--208--DO-NOT-REPLACE*/
        debug_stack.push({ name:"def$hex_token_group_044_104 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"def$hex_token_group_044_104 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: def$hex_token_HC_listbody1_105
            grammar index: 209
            bodies:
	209:647 def$hex_token_HC_listbody1_105=>• def$hex_token_HC_listbody1_105 def$hex_token_group_044_104 - 
		209:648 def$hex_token_HC_listbody1_105=>• def$hex_token_group_044_104 - 
            compile time: 6.702ms*/;
function $def$hex_token_HC_listbody1_105(l,state){
    debug_stack.push({ name:"def$hex_token_HC_listbody1_105 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$def$hex_token_group_044_104(l,state)){
        /*--unique-id--209--DO-NOT-REPLACE*/
        add_reduce(state,1,4);
        return $def$hex_token_HC_listbody1_105_goto(l,state,209);
    }
    debug_stack.push({ name:"def$hex_token_HC_listbody1_105 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $def$hex_token_HC_listbody1_105_goto(l,state,prod){
    debug_stack.push({ name:"def$hex_token_HC_listbody1_105 GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_1eb87aeb7f96e2bc(l/*[ nl ][ 6 ]*/);
        if(l.isSP()/*[ws]*/){
            return state;
        }
        if(assert_table(l,0x0,0x0,0x7e,0x7e)/*tbl:[ a ] [ b ] [ c ] [ d ] [ e ] [ f ] [ A ] [ B ] [ C ] [ D ] [ E ] [ F ]*/||l.isNum()/*[num]*/){
            /*assert-production-closure*/
            /*
               209:647 def$hex_token_HC_listbody1_105=>def$hex_token_HC_listbody1_105 • def$hex_token_group_044_104
            */
            if(state=$def$hex_token_group_044_104(l,state)){
                /*--unique-id--209--DO-NOT-REPLACE*/
                add_reduce(state,2,3);
                prod = 209;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"def$hex_token_HC_listbody1_105 GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==209);
}
/*production name: def$hex_token
            grammar index: 210
            bodies:
	210:649 def$hex_token=>• 0x def$hex_token_HC_listbody1_105 - 
            compile time: 2.16ms*/;
function $def$hex_token(l,state){
    debug_stack.push({ name:"def$hex_token RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_60c8247a60511d72(l)/*[0x]*/)){
        /*consume*/
        /*
           210:649 def$hex_token=>0x • def$hex_token_HC_listbody1_105
        */
        sk_1eb87aeb7f96e2bc(l/*[ nl ][ 6 ]*/);
        if(state=$def$hex_token_HC_listbody1_105(l,state)){
            /*--unique-id--210--DO-NOT-REPLACE*/
            add_reduce(state,2,0);
            debug_stack.push({ name:"def$hex_token RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"def$hex_token RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: def$binary_token_group_047_106
            grammar index: 211
            bodies:
	211:650 def$binary_token_group_047_106=>• 0 - 
		211:651 def$binary_token_group_047_106=>• 1 - 
            compile time: 1.255ms*/;
function $def$binary_token_group_047_106(l,state){
    debug_stack.push({ name:"def$binary_token_group_047_106 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,(l.utf==48/*[0]*/)||(l.utf==49/*[1]*/))){
        /*consume*/
        /*
           211:650 def$binary_token_group_047_106=>0 •
           211:651 def$binary_token_group_047_106=>1 •
        */
        /*--unique-id--211--DO-NOT-REPLACE*/
        debug_stack.push({ name:"def$binary_token_group_047_106 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"def$binary_token_group_047_106 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: def$binary_token_HC_listbody1_107
            grammar index: 212
            bodies:
	212:652 def$binary_token_HC_listbody1_107=>• def$binary_token_HC_listbody1_107 def$binary_token_group_047_106 - 
		212:653 def$binary_token_HC_listbody1_107=>• def$binary_token_group_047_106 - 
            compile time: 5.673ms*/;
function $def$binary_token_HC_listbody1_107(l,state){
    debug_stack.push({ name:"def$binary_token_HC_listbody1_107 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$def$binary_token_group_047_106(l,state)){
        /*--unique-id--212--DO-NOT-REPLACE*/
        add_reduce(state,1,4);
        return $def$binary_token_HC_listbody1_107_goto(l,state,212);
    }
    debug_stack.push({ name:"def$binary_token_HC_listbody1_107 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $def$binary_token_HC_listbody1_107_goto(l,state,prod){
    debug_stack.push({ name:"def$binary_token_HC_listbody1_107 GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_1eb87aeb7f96e2bc(l/*[ nl ][ 6 ]*/);
        if(l.isSP()/*[ws]*/){
            return state;
        }
        if((l.utf==48/*[0]*/)||(l.utf==49/*[1]*/)){
            /*assert-production-closure*/
            /*
               212:652 def$binary_token_HC_listbody1_107=>def$binary_token_HC_listbody1_107 • def$binary_token_group_047_106
            */
            if(state=$def$binary_token_group_047_106(l,state)){
                /*--unique-id--212--DO-NOT-REPLACE*/
                add_reduce(state,2,3);
                prod = 212;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"def$binary_token_HC_listbody1_107 GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==212);
}
/*production name: def$binary_token
            grammar index: 213
            bodies:
	213:654 def$binary_token=>• 0b def$binary_token_HC_listbody1_107 - 
            compile time: 2.411ms*/;
function $def$binary_token(l,state){
    debug_stack.push({ name:"def$binary_token RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_33b1e9553bafe159(l)/*[0b]*/)){
        /*consume*/
        /*
           213:654 def$binary_token=>0b • def$binary_token_HC_listbody1_107
        */
        sk_1eb87aeb7f96e2bc(l/*[ nl ][ 6 ]*/);
        if(state=$def$binary_token_HC_listbody1_107(l,state)){
            /*--unique-id--213--DO-NOT-REPLACE*/
            add_reduce(state,2,0);
            debug_stack.push({ name:"def$binary_token RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"def$binary_token RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: def$octal_token_group_050_108
            grammar index: 214
            bodies:
	214:655 def$octal_token_group_050_108=>• 0o - 
		214:656 def$octal_token_group_050_108=>• 0O - 
            compile time: 1.297ms*/;
function $def$octal_token_group_050_108(l,state){
    debug_stack.push({ name:"def$octal_token_group_050_108 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,defined_token_ad665389bc23e01f(l)/*[0o] [0O]*/)){
        /*consume*/
        /*
           214:655 def$octal_token_group_050_108=>0o •
           214:656 def$octal_token_group_050_108=>0O •
        */
        /*--unique-id--214--DO-NOT-REPLACE*/
        debug_stack.push({ name:"def$octal_token_group_050_108 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"def$octal_token_group_050_108 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: def$octal_token_group_058_109
            grammar index: 215
            bodies:
	215:657 def$octal_token_group_058_109=>• 0 - 
		215:658 def$octal_token_group_058_109=>• 1 - 
		215:659 def$octal_token_group_058_109=>• 2 - 
		215:660 def$octal_token_group_058_109=>• 3 - 
		215:661 def$octal_token_group_058_109=>• 4 - 
		215:662 def$octal_token_group_058_109=>• 5 - 
		215:663 def$octal_token_group_058_109=>• 6 - 
		215:664 def$octal_token_group_058_109=>• 7 - 
            compile time: 2.078ms*/;
function $def$octal_token_group_058_109(l,state){
    debug_stack.push({ name:"def$octal_token_group_058_109 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,assert_table(l,0x0,0xff0000,0x0,0x0)/*tbl:[ 0 ] [ 1 ] [ 2 ] [ 3 ] [ 4 ] [ 5 ] [ 6 ] [ 7 ]*/)){
        /*consume*/
        /*
           215:657 def$octal_token_group_058_109=>0 •
           215:658 def$octal_token_group_058_109=>1 •
           215:659 def$octal_token_group_058_109=>2 •
           215:660 def$octal_token_group_058_109=>3 •
           215:661 def$octal_token_group_058_109=>4 •
           215:662 def$octal_token_group_058_109=>5 •
           215:663 def$octal_token_group_058_109=>6 •
           215:664 def$octal_token_group_058_109=>7 •
        */
        /*--unique-id--215--DO-NOT-REPLACE*/
        debug_stack.push({ name:"def$octal_token_group_058_109 RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"def$octal_token_group_058_109 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: def$octal_token_HC_listbody1_110
            grammar index: 216
            bodies:
	216:665 def$octal_token_HC_listbody1_110=>• def$octal_token_HC_listbody1_110 def$octal_token_group_058_109 - 
		216:666 def$octal_token_HC_listbody1_110=>• def$octal_token_group_058_109 - 
            compile time: 7.583ms*/;
function $def$octal_token_HC_listbody1_110(l,state){
    debug_stack.push({ name:"def$octal_token_HC_listbody1_110 RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$def$octal_token_group_058_109(l,state)){
        /*--unique-id--216--DO-NOT-REPLACE*/
        add_reduce(state,1,4);
        return $def$octal_token_HC_listbody1_110_goto(l,state,216);
    }
    debug_stack.push({ name:"def$octal_token_HC_listbody1_110 RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $def$octal_token_HC_listbody1_110_goto(l,state,prod){
    debug_stack.push({ name:"def$octal_token_HC_listbody1_110 GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_1eb87aeb7f96e2bc(l/*[ nl ][ 6 ]*/);
        if(l.isSP()/*[ws]*/){
            return state;
        }
        if(assert_table(l,0x0,0xff0000,0x0,0x0)/*tbl:[ 0 ] [ 1 ] [ 2 ] [ 3 ] [ 4 ] [ 5 ] [ 6 ] [ 7 ]*/){
            /*assert-production-closure*/
            /*
               216:665 def$octal_token_HC_listbody1_110=>def$octal_token_HC_listbody1_110 • def$octal_token_group_058_109
            */
            if(state=$def$octal_token_group_058_109(l,state)){
                /*--unique-id--216--DO-NOT-REPLACE*/
                add_reduce(state,2,3);
                prod = 216;
                continue;
            }
        }
        break;
    }
    debug_stack.push({ name:"def$octal_token_HC_listbody1_110 GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==216);
}
/*production name: def$octal_token
            grammar index: 217
            bodies:
	217:667 def$octal_token=>• def$octal_token_group_050_108 def$octal_token_HC_listbody1_110 - 
            compile time: 2.274ms*/;
function $def$octal_token(l,state){
    debug_stack.push({ name:"def$octal_token RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(state=$def$octal_token_group_050_108(l,state)){
        sk_1eb87aeb7f96e2bc(l/*[ nl ][ 6 ]*/);
        if(state=$def$octal_token_HC_listbody1_110(l,state)){
            /*--unique-id--217--DO-NOT-REPLACE*/
            add_reduce(state,2,0);
            debug_stack.push({ name:"def$octal_token RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
            return state;
        }
    }
    debug_stack.push({ name:"def$octal_token RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: def$js_identifier
            grammar index: 225
            bodies:
	225:688 def$js_identifier=>• tk:def$js_id_symbols - 
            compile time: 0.742ms*/;
function $def$js_identifier(l,state){
    debug_stack.push({ name:"def$js_identifier RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,def$js_id_symbols_tok_b3199095c9facd2b(l))){
        /*consume*/
        /*
           225:688 def$js_identifier=>tk:def$js_id_symbols •
        */
        /*--unique-id--225--DO-NOT-REPLACE*/
        debug_stack.push({ name:"def$js_identifier RD return", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
        return state;
    }
    debug_stack.push({ name:"def$js_identifier RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
/*production name: def$js_id_symbols
            grammar index: 226
            bodies:
	226:689 def$js_id_symbols=>• def$js_id_symbols θid - 
		226:690 def$js_id_symbols=>• def$js_id_symbols _ - 
		226:691 def$js_id_symbols=>• def$js_id_symbols $ - 
		226:692 def$js_id_symbols=>• def$js_id_symbols θnum - 
		226:693 def$js_id_symbols=>• _ - 
		226:694 def$js_id_symbols=>• $ - 
		226:695 def$js_id_symbols=>• θid - 
            compile time: 15.255ms*/;
function $def$js_id_symbols(l,state){
    debug_stack.push({ name:"def$js_id_symbols RD START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    if(assert_consume(l,state,((l.utf==95/*[_]*/)||(l.utf==36/*[$]*/))||l.isID()/*[id]*/)){
        /*consume*/
        /*
           226:693 def$js_id_symbols=>_ •
           226:694 def$js_id_symbols=>$ •
           226:695 def$js_id_symbols=>θid •
        */
        /*--unique-id--226--DO-NOT-REPLACE*/
        return $def$js_id_symbols_goto(l,state,226);
    }
    debug_stack.push({ name:"def$js_id_symbols RD FAILED", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return 0;
}
function $def$js_id_symbols_goto(l,state,prod){
    debug_stack.push({ name:"def$js_id_symbols GOTO START", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    while(1){
        sk_78c208d4d792ec90(l/*[ 6 ]*/);
        if(non_capture_bde7550a3d6b8d46(l)/*[nl]*/){
            return state;
        }
        if(assert_consume(l,state,(((l.utf==95/*[_]*/)||(l.utf==36/*[$]*/))||l.isID()/*[id]*/)||l.isNum()/*[num]*/)){
            /*consume*/
            /*
               226:689 def$js_id_symbols=>def$js_id_symbols θid •
               226:690 def$js_id_symbols=>def$js_id_symbols _ •
               226:691 def$js_id_symbols=>def$js_id_symbols $ •
               226:692 def$js_id_symbols=>def$js_id_symbols θnum •
            */
            /*--unique-id--226--DO-NOT-REPLACE*/
            add_reduce(state,2,246);
            prod = 226;
            continue;
        }
        break;
    }
    debug_stack.push({ name:"def$js_id_symbols GOTO END", state, tx:str.slice(l.off, l.off + l.tl), ty:l.ty, tl:l.tl, utf:l.getUTF(), FAILED:state==0,offset:l.off});
    return assertSuccess(l,state,prod==226);
}
function main(input_string){
    str = input_string;
    const l = new Lexer();
    l.next();
    reset_counters_and_pointers();
    sk_0496d836f85249a7(l/*[ ws ][ nl ][ 6 ]*/);
    let state = $javascript(l,createState(1));
    set_action(0);
    set_error(0);
    return hasStateFailed(state)||!l.END();
}
        return main;
    }) (shared_memory, debug_stack);

const fns = [(e,sym)=>sym[sym.length-1], 
(env, sym, pos)=>( env.IS_MODULE=false,sym[0])/*0*/
,(env, sym, pos)=>( {type:(env.IS_MODULE)?env.typ.Module:env.typ.Script,nodes:sym[0],pos})/*1*/
,(env, sym, pos)=>( ([...sym[0],sym[1]]))/*2*/
,(env, sym, pos)=>( [sym[0]])/*3*/
,(env, sym, pos)=>( {type:env.typ.ImportDeclaration,nodes:[sym[1],sym[2]],pos})/*4*/
,(env, sym, pos)=>( {type:env.typ.ImportDeclaration,nodes:[null,sym[1]],pos})/*5*/
,(env, sym, pos)=>( {type:env.typ.ImportClause,nodes:[sym[0]],pos})/*6*/
,(env, sym, pos)=>( {type:env.typ.ImportClause,nodes:[sym[0],sym[2]],pos})/*7*/
,(env, sym, pos)=>( sym[0].type=env.typ.IdentifierDefault,sym[0])/*8*/
,(env, sym, pos)=>( {type:env.typ.NameSpaceImport,nodes:[sym[2]],pos})/*9*/
,(env, sym, pos)=>( ([...sym[0],sym[2]]))/*10*/
,(env, sym, pos)=>( {type:env.typ.NamedImports,nodes:sym[1]||[],pos})/*11*/
,(env, sym, pos)=>( {type:env.typ.NamedImports,nodes:null||[],pos})/*12*/
,(env, sym, pos)=>( {type:env.typ.FromClause,nodes:[sym[1]],pos})/*13*/
,(env, sym, pos)=>( {type:env.typ.Specifier,nodes:[sym[0]],pos})/*14*/
,(env, sym, pos)=>( {type:env.typ.Specifier,nodes:[sym[0],sym[2]],pos})/*15*/
,(env, sym, pos)=>( sym[0].type=env.typ.IdentifierModule,sym[0])/*16*/
,(env, sym, pos)=>( {type:env.typ.ExportDeclaration,nodes:[null,sym[2]],DEFAULT:false,pos})/*17*/
,(env, sym, pos)=>( {type:env.typ.ExportDeclaration,nodes:[sym[1],sym[2]],DEFAULT:false,pos})/*18*/
,(env, sym, pos)=>( {type:env.typ.ExportDeclaration,nodes:[sym[1]],DEFAULT:false,pos})/*19*/
,(env, sym, pos)=>( {type:env.typ.ExportDeclaration,nodes:[sym[2]],DEFAULT:true,pos})/*20*/
,(env, sym, pos)=>( {type:env.typ.ExportDeclaration,nodes:[sym[1],null],DEFAULT:false,pos})/*21*/
,(env, sym, pos)=>( {type:env.typ.ExportClause,nodes:sym[1]||[],pos})/*22*/
,(env, sym, pos)=>( {type:env.typ.ExportClause,nodes:null||[],pos})/*23*/
,(env, sym, pos)=>( {type:env.typ.Script,nodes:sym[0],pos})/*24*/
,(env, sym, pos)=>( [...sym[0],sym[1]])/*25*/
,(env, sym, pos)=>( {type:env.typ.BlockStatement,nodes:sym[1]||[],pos})/*26*/
,(env, sym, pos)=>( {type:env.typ.BlockStatement,nodes:null||[],pos})/*27*/
,(env, sym, pos)=>( {type:env.typ.EmptyStatement,pos})/*28*/
,(env, sym, pos)=>( {type:env.typ.ExpressionStatement,nodes:[sym[0]],pos})/*29*/
,(env, sym, pos)=>( {type:env.typ.IfStatement,nodes:[sym[2],sym[4],sym[5]],pos})/*30*/
,(env, sym, pos)=>( {type:env.typ.IfStatement,nodes:[sym[2],sym[4],null],pos})/*31*/
,(env, sym, pos)=>( {type:env.typ.VariableDeclaration,nodes:sym[1],pos})/*32*/
,(env, sym, pos)=>( {type:env.typ.VariableDeclaration,nodes:[sym[0]],pos})/*33*/
,(env, sym, pos)=>( {type:env.typ.DoStatement,nodes:[sym[1],sym[4]],pos})/*34*/
,(env, sym, pos)=>( {type:env.typ.WhileStatement,nodes:[sym[2],sym[4]],pos})/*35*/
,(env, sym, pos)=>( {type:env.typ.ForStatement,nodes:[sym[2],sym[4],sym[6],sym[8]],LEX:false,pos})/*36*/
,(env, sym, pos)=>( {type:env.typ.ForStatement,nodes:[sym[2],sym[3],sym[5],sym[7]],LEX:true,pos})/*37*/
,(env, sym, pos)=>( {type:env.typ.ForInStatement,nodes:[sym[2],sym[4],sym[6]],pos})/*38*/
,(env, sym, pos)=>( {type:env.typ.ForOfStatement,nodes:[sym[3],sym[5],sym[7]],pos,AWAIT:!!sym[1]})/*39*/
,(env, sym, pos)=>( {type:env.typ.ForStatement,nodes:[null,sym[3],sym[5],sym[7]],LEX:false,pos})/*40*/
,(env, sym, pos)=>( {type:env.typ.ForStatement,nodes:[sym[2],null,sym[5],sym[7]],LEX:false,pos})/*41*/
,(env, sym, pos)=>( {type:env.typ.ForStatement,nodes:[sym[2],sym[4],null,sym[7]],LEX:false,pos})/*42*/
,(env, sym, pos)=>( {type:env.typ.ForStatement,nodes:[sym[2],null,sym[4],sym[6]],LEX:true,pos})/*43*/
,(env, sym, pos)=>( {type:env.typ.ForStatement,nodes:[sym[2],sym[3],null,sym[6]],LEX:true,pos})/*44*/
,(env, sym, pos)=>( {type:env.typ.ForOfStatement,nodes:[sym[2],sym[4],sym[6]],pos,AWAIT:!!null})/*45*/
,(env, sym, pos)=>( {type:env.typ.ForStatement,nodes:[null,null,sym[4],sym[6]],LEX:false,pos})/*46*/
,(env, sym, pos)=>( {type:env.typ.ForStatement,nodes:[null,sym[3],null,sym[6]],LEX:false,pos})/*47*/
,(env, sym, pos)=>( {type:env.typ.ForStatement,nodes:[sym[2],null,null,sym[6]],LEX:false,pos})/*48*/
,(env, sym, pos)=>( {type:env.typ.ForStatement,nodes:[sym[2],null,null,sym[5]],LEX:true,pos})/*49*/
,(env, sym, pos)=>( {type:env.typ.ForStatement,nodes:[null,null,null,sym[5]],LEX:false,pos})/*50*/
,(env, sym, pos)=>( {type:env.typ.LexicalBinding,nodes:[sym[1]],symbol:sym[0],pos})/*51*/
,(env, sym, pos)=>( {type:env.typ.ContinueStatement,nodes:sym[1]?[sym[1]]:[],pos})/*52*/
,(env, sym, pos)=>( {type:env.typ.ContinueStatement,nodes:null?[null]:[],pos})/*53*/
,(env, sym, pos)=>( {type:env.typ.BreakStatement,nodes:[sym[1]],pos})/*54*/
,(env, sym, pos)=>( {type:env.typ.BreakStatement,nodes:[null],pos})/*55*/
,(env, sym, pos)=>( {type:env.typ.ReturnStatement,nodes:[sym[1]],pos})/*56*/
,(env, sym, pos)=>( {type:env.typ.ReturnStatement,nodes:[],pos})/*57*/
,(env, sym, pos)=>( {type:env.typ.ThrowStatement,nodes:[sym[1]],pos})/*58*/
,(env, sym, pos)=>( {type:env.typ.WithStatement,nodes:[sym[2],sym[4]],pos})/*59*/
,(env, sym, pos)=>( {type:env.typ.SwitchStatement,nodes:[sym[2],sym[4]],pos})/*60*/
,(env, sym, pos)=>( {type:env.typ.CaseBlock,nodes:[...sym[1],sym[2],...sym[3]],pos})/*61*/
,(env, sym, pos)=>( {type:env.typ.CaseBlock,nodes:[sym[1],...sym[2]],pos})/*62*/
,(env, sym, pos)=>( {type:env.typ.CaseBlock,nodes:[...sym[1],...sym[2]],pos})/*63*/
,(env, sym, pos)=>( {type:env.typ.CaseBlock,nodes:[...sym[1],sym[2]],pos})/*64*/
,(env, sym, pos)=>( {type:env.typ.CaseBlock,nodes:[...sym[1]],pos})/*65*/
,(env, sym, pos)=>( {type:env.typ.CaseBlock,nodes:[sym[1]],pos})/*66*/
,(env, sym, pos)=>( {type:env.typ.CaseBlock,nodes:[],pos})/*67*/
,(env, sym, pos)=>( {type:env.typ.CaseClause,nodes:[sym[1],...sym[3]],pos})/*68*/
,(env, sym, pos)=>( {type:env.typ.CaseClause,nodes:[sym[1]],pos})/*69*/
,(env, sym, pos)=>( {type:env.typ.DefaultClause,nodes:[...sym[2]],pos})/*70*/
,(env, sym, pos)=>( {type:env.typ.DefaultClause,nodes:[],pos})/*71*/
,(env, sym, pos)=>( {type:env.typ.LabeledStatement,nodes:[sym[0],sym[2]],pos})/*72*/
,(env, sym, pos)=>( {type:env.typ.TryStatement,nodes:[sym[1],sym[2],null],pos})/*73*/
,(env, sym, pos)=>( {type:env.typ.TryStatement,nodes:[sym[1],null,sym[2]],pos})/*74*/
,(env, sym, pos)=>( {type:env.typ.TryStatement,nodes:[sym[1],sym[2],sym[3]],pos})/*75*/
,(env, sym, pos)=>( {type:env.typ.CatchClause,nodes:[sym[2],sym[4]],pos})/*76*/
,(env, sym, pos)=>( {type:env.typ.FinallyClause,nodes:[sym[1]],pos})/*77*/
,(env, sym, pos)=>( {type:env.typ.DebuggerStatement,pos})/*78*/
,(env, sym, pos)=>( {type:env.typ.VariableStatement,nodes:sym[1],pos})/*79*/
,(env, sym, pos)=>( {type:env.typ.BindingExpression,symbol:"=",nodes:[sym[0],sym[1]],pos})/*80*/
,(env, sym, pos)=>( {type:env.typ.LexicalDeclaration,symbol:sym[0],nodes:sym[1],pos})/*81*/
,(env, sym, pos)=>( "let")/*82*/
,(env, sym, pos)=>( "const")/*83*/
,(env, sym, pos)=>( {type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],sym[5],sym[8]],pos})/*84*/
,(env, sym, pos)=>( {type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],sym[4],sym[7]],pos})/*85*/
,(env, sym, pos)=>( {type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],sym[4],sym[7]],pos})/*86*/
,(env, sym, pos)=>( {type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[null,sym[4],sym[7]],pos})/*87*/
,(env, sym, pos)=>( {type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],null,sym[7]],pos})/*88*/
,(env, sym, pos)=>( {type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],sym[3],sym[6]],pos})/*89*/
,(env, sym, pos)=>( {type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[null,sym[3],sym[6]],pos})/*90*/
,(env, sym, pos)=>( {type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],null,sym[6]],pos})/*91*/
,(env, sym, pos)=>( {type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[null,sym[3],sym[6]],pos})/*92*/
,(env, sym, pos)=>( {type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],null,sym[6]],pos})/*93*/
,(env, sym, pos)=>( {type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[null,null,sym[6]],pos})/*94*/
,(env, sym, pos)=>( {type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!null,nodes:[null,sym[2],sym[5]],pos})/*95*/
,(env, sym, pos)=>( {type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],null,sym[5]],pos})/*96*/
,(env, sym, pos)=>( {type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[null,null,sym[5]],pos})/*97*/
,(env, sym, pos)=>( {type:env.typ.FunctionDeclaration,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[null,null,sym[5]],pos})/*98*/
,(env, sym, pos)=>( {type:env.typ.FunctionDeclaration,ASYNC:!!null,GENERATOR:!!null,nodes:[null,null,sym[4]],pos})/*99*/
,(env, sym, pos)=>( {type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],sym[5],sym[8]],pos})/*100*/
,(env, sym, pos)=>( {type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],sym[4],sym[7]],pos})/*101*/
,(env, sym, pos)=>( {type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],sym[4],sym[7]],pos})/*102*/
,(env, sym, pos)=>( {type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[null,sym[4],sym[7]],pos})/*103*/
,(env, sym, pos)=>( {type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[sym[3],null,sym[7]],pos})/*104*/
,(env, sym, pos)=>( {type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],sym[3],sym[6]],pos})/*105*/
,(env, sym, pos)=>( {type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[null,sym[3],sym[6]],pos})/*106*/
,(env, sym, pos)=>( {type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[sym[2],null,sym[6]],pos})/*107*/
,(env, sym, pos)=>( {type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[null,sym[3],sym[6]],pos})/*108*/
,(env, sym, pos)=>( {type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[2],null,sym[6]],pos})/*109*/
,(env, sym, pos)=>( {type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!sym[2],nodes:[null,null,sym[6]],pos})/*110*/
,(env, sym, pos)=>( {type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!null,nodes:[null,sym[2],sym[5]],pos})/*111*/
,(env, sym, pos)=>( {type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[1],null,sym[5]],pos})/*112*/
,(env, sym, pos)=>( {type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!sym[1],nodes:[null,null,sym[5]],pos})/*113*/
,(env, sym, pos)=>( {type:env.typ.FunctionExpression,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[null,null,sym[5]],pos})/*114*/
,(env, sym, pos)=>( {type:env.typ.FunctionExpression,ASYNC:!!null,GENERATOR:!!null,nodes:[null,null,sym[4]],pos})/*115*/
,(env, sym, pos)=>( {type:env.typ.FormalParameters,nodes:[sym[0]],pos})/*116*/
,(env, sym, pos)=>( {type:env.typ.FormalParameters,nodes:sym[0],pos})/*117*/
,(env, sym, pos)=>( {type:env.typ.FormalParameters,nodes:[...sym[0],sym[2]],pos})/*118*/
,(env, sym, pos)=>( {type:env.typ.FunctionBody,nodes:sym[0]||[],pos})/*119*/
,(env, sym, pos)=>( {type:env.typ.YieldExpression,nodes:[],pos})/*120*/
,(env, sym, pos)=>( {type:env.typ.YieldExpression,nodes:[sym[2]],pos,GENERATOR:!!sym[1]})/*121*/
,(env, sym, pos)=>( {type:env.typ.YieldExpression,nodes:[sym[1]],pos,GENERATOR:!!null})/*122*/
,(env, sym, pos)=>( {type:env.typ.ArrowFunction,ASYNC:!!sym[0],nodes:[sym[1],sym[3]],pos})/*123*/
,(env, sym, pos)=>( {type:env.typ.ArrowFunction,ASYNC:!!null,nodes:[sym[0],sym[2]],pos})/*124*/
,(env, sym, pos)=>( sym[0].type=env.typ.IdentifierBinding,sym[0])/*125*/
,(env, sym, pos)=>( env.functions.reinterpretArrowParameters(sym, env, pos))/*126*/
,(env, sym, pos)=>( {type:env.typ.BlockStatement,nodes:sym[1],pos})/*127*/
,(env, sym, pos)=>( {type:env.typ.CallExpression,nodes:[sym[0],sym[1]],pos})/*128*/
,(env, sym, pos)=>( {type:env.typ.Class,nodes:[sym[1],sym[2],...sym[4]],pos})/*129*/
,(env, sym, pos)=>( {type:env.typ.Class,nodes:[null,sym[1],...sym[3]],pos})/*130*/
,(env, sym, pos)=>( {type:env.typ.Class,nodes:[sym[1],null,...sym[3]],pos})/*131*/
,(env, sym, pos)=>( {type:env.typ.Class,nodes:[sym[1],sym[2]],pos})/*132*/
,(env, sym, pos)=>( {type:env.typ.Class,nodes:[null,null,...sym[2]],pos})/*133*/
,(env, sym, pos)=>( {type:env.typ.Class,nodes:[null,sym[1]],pos})/*134*/
,(env, sym, pos)=>( {type:env.typ.Class,nodes:[sym[1],null],pos})/*135*/
,(env, sym, pos)=>( {type:env.typ.Class,nodes:[null,null],pos})/*136*/
,(env, sym, pos)=>( sym[0].concat(sym[1]))/*137*/
,(env, sym, pos)=>( sym[0])/*138*/
,(env, sym, pos)=>( [])/*139*/
,(env, sym, pos)=>( (sym[1].STATIC=true,sym[1]))/*140*/
,(env, sym, pos)=>( {type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!sym[1],nodes:[sym[2],sym[4],sym[7]],pos})/*141*/
,(env, sym, pos)=>( {type:env.typ.GetterMethod,nodes:[sym[1],sym[5]],pos})/*142*/
,(env, sym, pos)=>( {type:env.typ.SetterMethod,nodes:[sym[1],sym[3],sym[6]],pos})/*143*/
,(env, sym, pos)=>( {type:env.typ.Method,ASYNC:!!null,GENERATOR:!!sym[0],nodes:[sym[1],sym[3],sym[6]],pos})/*144*/
,(env, sym, pos)=>( {type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[1],sym[3],sym[6]],pos})/*145*/
,(env, sym, pos)=>( {type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!sym[1],nodes:[sym[2],null,sym[6]],pos})/*146*/
,(env, sym, pos)=>( {type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!sym[1],nodes:[sym[2],sym[4],null],pos})/*147*/
,(env, sym, pos)=>( {type:env.typ.GetterMethod,nodes:[sym[1]],pos})/*148*/
,(env, sym, pos)=>( {type:env.typ.SetterMethod,nodes:[sym[1],sym[3]],pos})/*149*/
,(env, sym, pos)=>( {type:env.typ.Method,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[0],sym[2],sym[5]],pos})/*150*/
,(env, sym, pos)=>( {type:env.typ.Method,ASYNC:!!null,GENERATOR:!!sym[0],nodes:[sym[1],null,sym[5]],pos})/*151*/
,(env, sym, pos)=>( {type:env.typ.Method,ASYNC:!!null,GENERATOR:!!sym[0],nodes:[sym[1],sym[3],null],pos})/*152*/
,(env, sym, pos)=>( {type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[1],null,sym[5]],pos})/*153*/
,(env, sym, pos)=>( {type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[1],sym[3],null],pos})/*154*/
,(env, sym, pos)=>( {type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!sym[1],nodes:[sym[2],null,null],pos})/*155*/
,(env, sym, pos)=>( {type:env.typ.Method,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[0],null,sym[4]],pos})/*156*/
,(env, sym, pos)=>( {type:env.typ.Method,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[0],sym[2],null],pos})/*157*/
,(env, sym, pos)=>( {type:env.typ.Method,ASYNC:!!null,GENERATOR:!!sym[0],nodes:[sym[1],null,null],pos})/*158*/
,(env, sym, pos)=>( {type:env.typ.Method,ASYNC:!!sym[0],GENERATOR:!!null,nodes:[sym[1],null,null],pos})/*159*/
,(env, sym, pos)=>( {type:env.typ.Method,ASYNC:!!null,GENERATOR:!!null,nodes:[sym[0],null,null],pos})/*160*/
,(env, sym, pos)=>( (sym[0].type==env.typ.ExpressionList?(sym[0].nodes.push(sym[2]),sym[0]):{type:env.typ.ExpressionList,nodes:[sym[0],sym[2]],pos}))/*161*/
,(env, sym, pos)=>( {type:env.typ.NewExpression,nodes:[sym[1]],pos})/*162*/
,(env, sym, pos)=>( {type:env.typ.MemberExpression,nodes:[sym[0],sym[2]],pos,COMPUTED:true})/*163*/
,(env, sym, pos)=>( (sym[2].type|=env.cls.PROPERTY_NAME,{type:env.typ.MemberExpression,nodes:[sym[0],sym[2]],pos,COMPUTED:false}))/*164*/
,(env, sym, pos)=>( {type:env.typ.CallExpression,nodes:[sym[0],sym[1]],pos,TEMPLATE:true})/*165*/
,(env, sym, pos)=>( {type:env.typ.NewInstanceExpression,nodes:[sym[1],sym[2]],pos})/*166*/
,(env, sym, pos)=>( (sym[2].type|=env.cls.PROPERTY_NAME,{type:env.typ.SuperExpression,nodes:[sym[2]],pos,COMPUTED:false}))/*167*/
,(env, sym, pos)=>( {type:env.typ.SuperExpression,nodes:[sym[2]],pos,COMPUTED:true})/*168*/
,(env, sym, pos)=>( {type:env.typ.ImportMeta,pos})/*169*/
,(env, sym, pos)=>( {type:env.typ.NewTarget,pos})/*170*/
,(env, sym, pos)=>( {type:env.typ.CallExpression,nodes:[sym[0],sym[1]],pos,TEMPLATE:false})/*171*/
,(env, sym, pos)=>( {type:env.typ.CallExpression,nodes:[sym[0],null],pos,TEMPLATE:true})/*172*/
,(env, sym, pos)=>( {type:env.typ.SuperCall,nodes:[sym[1]],pos})/*173*/
,(env, sym, pos)=>( {type:env.typ.ImportCall,nodes:[sym[2]],pos})/*174*/
,(env, sym, pos)=>( {type:env.typ.Arguments,nodes:sym[1]||[],pos})/*175*/
,(env, sym, pos)=>( {type:env.typ.Arguments,nodes:null||[],pos})/*176*/
,(env, sym, pos)=>( {type:env.typ.Spread,nodes:[sym[1]],pos})/*177*/
,(env, sym, pos)=>( {type:env.typ.OptionalMemberExpression,nodes:[sym[0],sym[1]],pos,COMPUTED:false})/*178*/
,(env, sym, pos)=>( {type:env.typ.ThisLiteral,pos})/*179*/
,(env, sym, pos)=>( env.functions.reinterpretParenthesized(sym, env, pos))/*180*/
,(env, sym, pos)=>( {type:env.typ.AwaitExpression,nodes:[sym[1]],pos})/*181*/
,(env, sym, pos)=>( {type:env.typ.AssignmentExpression,symbol:"=",nodes:[sym[0],sym[2]],pos})/*182*/
,(env, sym, pos)=>( {type:env.typ.AssignmentExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos})/*183*/
,(env, sym, pos)=>( {type:env.typ.ConditionalExpression,nodes:[sym[0],sym[2],sym[4]],pos})/*184*/
,(env, sym, pos)=>( {type:env.typ.LogicalExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos})/*185*/
,(env, sym, pos)=>( {type:env.typ.CoalesceExpression,nodes:[sym[0],sym[2]],pos})/*186*/
,(env, sym, pos)=>( {type:env.typ.BitwiseExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos})/*187*/
,(env, sym, pos)=>( {type:env.typ.EqualityExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos})/*188*/
,(env, sym, pos)=>( {type:env.typ.RelationalExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos})/*189*/
,(env, sym, pos)=>( {type:env.typ.InstanceOfExpression,nodes:[sym[0],sym[2]],pos})/*190*/
,(env, sym, pos)=>( {type:env.typ.InExpression,nodes:[sym[0],sym[2]],pos})/*191*/
,(env, sym, pos)=>( {type:env.typ.ShiftExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos})/*192*/
,(env, sym, pos)=>( {type:env.typ.AdditiveExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos})/*193*/
,(env, sym, pos)=>( {type:env.typ.MultiplicativeExpression,symbol:sym[1],nodes:[sym[0],sym[2]],pos})/*194*/
,(env, sym, pos)=>( {type:env.typ.ExponentiationExpression,nodes:[sym[0],sym[2]],pos})/*195*/
,(env, sym, pos)=>( {type:env.typ.DeleteExpression,nodes:[sym[1]],pos})/*196*/
,(env, sym, pos)=>( {type:env.typ.VoidExpression,nodes:[sym[1]],pos})/*197*/
,(env, sym, pos)=>( {type:env.typ.TypeofExpression,nodes:[sym[1]],pos})/*198*/
,(env, sym, pos)=>( {type:env.typ.UnaryExpression,symbol:sym[0],nodes:[sym[1]],pos})/*199*/
,(env, sym, pos)=>( {type:env.typ.PostExpression,symbol:sym[1],nodes:[sym[0]],pos})/*200*/
,(env, sym, pos)=>( {type:env.typ.PreExpression,symbol:sym[0],nodes:[sym[1]],pos})/*201*/
,(env, sym, pos)=>( {type:env.typ.Parenthesized,nodes:[],pos})/*202*/
,(env, sym, pos)=>( {type:env.typ.Parenthesized,nodes:[sym[1]],pos})/*203*/
,(env, sym, pos)=>( {type:env.typ.Parenthesized,nodes:[sym[1],sym[3]],pos})/*204*/
,(env, sym, pos)=>( {type:env.typ.ObjectBinding,nodes:[],pos})/*205*/
,(env, sym, pos)=>( {type:env.typ.ObjectBinding,nodes:[sym[1]],pos})/*206*/
,(env, sym, pos)=>( {type:env.typ.ObjectBinding,nodes:[...sym[1]],pos})/*207*/
,(env, sym, pos)=>( {type:env.typ.ObjectBinding,nodes:[...sym[1],sym[3]],pos})/*208*/
,(env, sym, pos)=>( {type:env.typ.ArrayBinding,nodes:[sym[1],sym[2]],pos})/*209*/
,(env, sym, pos)=>( {type:env.typ.ArrayBinding,nodes:[...sym[1]],pos})/*210*/
,(env, sym, pos)=>( {type:env.typ.ArrayBinding,nodes:[...sym[1],sym[3],sym[4]],pos})/*211*/
,(env, sym, pos)=>( {type:env.typ.ArrayBinding,nodes:[sym[1]],pos})/*212*/
,(env, sym, pos)=>( {type:env.typ.ArrayBinding,nodes:[...sym[1],sym[3]],pos})/*213*/
,(env, sym, pos)=>( {type:env.typ.ArrayBinding,nodes:[],pos})/*214*/
,(env, sym, pos)=>( [...sym[0],sym[2]])/*215*/
,(env, sym, pos)=>( [...sym[0],...sym[2]])/*216*/
,(env, sym, pos)=>( [sym[0],sym[1]])/*217*/
,(env, sym, pos)=>( {type:env.typ.PropertyBinding,nodes:[sym[0],sym[2]],pos})/*218*/
,(env, sym, pos)=>( sym[1]?{type:env.typ.BindingExpression,nodes:[sym[0],sym[1]],pos}:sym[0])/*219*/
,(env, sym, pos)=>( null?{type:env.typ.BindingExpression,nodes:[sym[0]],pos}:sym[0])/*220*/
,(env, sym, pos)=>( {type:env.typ.RegexLiteral,value:sym[0],flags:sym[2],pos})/*221*/
,(env, sym, pos)=>( {type:env.typ.RegexLiteral,value:sym[0],pos})/*222*/
,(env, sym, pos)=>( {type:env.typ.ObjectLiteral,nodes:[],pos})/*223*/
,(env, sym, pos)=>( {type:env.typ.ObjectLiteral,nodes:sym[1],pos})/*224*/
,(env, sym, pos)=>( sym[0].push(sym[2]),sym[0])/*225*/
,(env, sym, pos)=>( sym[0].type|=env.cls.PROPERTY_NAME,sym[0])/*226*/
,(env, sym, pos)=>( {type:env.typ.ComputedProperty,nodes:[sym[1]],pos})/*227*/
,(env, sym, pos)=>( sym[1])/*228*/
,(env, sym, pos)=>( {type:env.typ.ArrayLiteral,nodes:[sym[1]],pos})/*229*/
,(env, sym, pos)=>( {type:env.typ.ArrayLiteral,nodes:sym[1],pos})/*230*/
,(env, sym, pos)=>( {type:env.typ.ArrayLiteral,nodes:[...sym[1],sym[3]],pos})/*231*/
,(env, sym, pos)=>( {type:env.typ.ArrayLiteral,nodes:[],pos})/*232*/
,(env, sym, pos)=>( {type:env.typ.ArrayLiteral,nodes:[...sym[1]],pos})/*233*/
,(env, sym, pos)=>( [...sym[0],sym[2],sym[3]])/*234*/
,(env, sym, pos)=>( {type:env.typ.Elision,count:0,pos})/*235*/
,(env, sym, pos)=>( {type:env.typ.Elision,count:sym[0].count+1,pos})/*236*/
,(env, sym, pos)=>( {type:env.typ.Template,nodes:[{quote_type:"",type:env.typ.StringLiteral,value:sym[0],pos}],NO_SUBSTITUTE:true,pos})/*237*/
,(env, sym, pos)=>( sym[2].unshift(sym[0],sym[1]),{type:env.typ.Template,nodes:sym[2],pos})/*238*/
,(env, sym, pos)=>( sym[0].push(sym[1]),sym[0])/*239*/
,(env, sym, pos)=>( sym[0].push(sym[1],sym[2]),sym[0])/*240*/
,(env, sym, pos)=>( {type:env.typ.TemplateHead,value:sym[0],pos})/*241*/
,(env, sym, pos)=>( {type:env.typ.TemplateMiddle,value:sym[0],pos})/*242*/
,(env, sym, pos)=>( {type:env.typ.TemplateTail,value:sym[0],pos})/*243*/
,(env, sym, pos)=>( {type:env.typ.StringLiteral,value:sym[0],pos})/*244*/
,(env, sym, pos)=>( sym[0]+sym[1])/*245*/
,(env, sym, pos)=>( sym[0]+"")/*246*/
,(env, sym, pos)=>( {quote_type:sym[1],type:env.typ.StringLiteral,value:sym[0],pos})/*247*/
,(env, sym, pos)=>( {type:env.typ.BigIntLiteral,value:sym[1],pos,NEGATIVE:!!sym[0]})/*248*/
,(env, sym, pos)=>( {type:env.typ.NumericLiteral,computed_value:parseFloat(sym[0]),pos,NEGATIVE:!!sym[0]})/*249*/
,(env, sym, pos)=>( {type:env.typ.NullLiteral,pos})/*250*/
,(env, sym, pos)=>( {type:env.typ.BooleanLiteral,value:sym[0],pos})/*251*/
,(env, sym, pos)=>( sym[0].type=env.typ.IdentifierLabel,sym[0])/*252*/
,(env, sym, pos)=>( sym[0].type=env.typ.IdentifierReference,sym[0])/*253*/
,(env, sym, pos)=>( {type:env.typ.Identifier,value:sym[0],pos})/*254*/
,(env, sym, pos)=>( {type:env.typ.IdentifierName,value:sym[0],pos})/*255*/]; 

export default function (str, env = {}) {
    
    debug_stack.length = 0;
        const 
            FAILED = recognizer(str), // call with pointers
            stack = [];
    
        let action_length = 0,
            error_message ="",
            review_stack = [];

    
        if (FAILED) {

            for(let i = debug_stack.length-1, j=0; i >= 0; i--){
                if(!debug_stack[i].FAILED && j++ > 80)
                    break;
                review_stack.push(debug_stack[i]);
            }

            review_stack.reverse();

            if(review_stack.length > 0)
                console.log({review_stack})
            
            let error_off = 10000000000000;
            let error_set = false;


            const lexer = new Lexer(str);

            for (let i = 0; i < error_array.length; i++) {
                if(error_array[i]>0 ){
                    if(!error_set){
                        error_set = true;
                        error_off = 0;
                    }
                    error_off = Math.max(error_off, error_array[i]);
                }
            }

            if(error_off == 10000000000000) 
                error_off = 0;

            while (lexer.off < error_off && !lexer.END) lexer.next();

            error_message = lexer.errorMessage(`Unexpected token[${ lexer.tx }]`);

    
        } else {

            let offset = 0, pos = [];

            for (const action of action_array) {

                action_length++;
                
                if (action == 0) break;

                switch (action & 1) {
                    case 0: //REDUCE;
                        {
                            const
                                DO_NOT_PUSH_TO_STACK = (action >> 1) & 1,
                                body = action >> 16,
                                len = ((action >> 2) & 0x3FFF);

                            const pos_a = pos[pos.length - len] || {off:0,tl:0};
                            const pos_b = pos[pos.length - 1 ] || {off:0,tl:0};
                            pos[stack.length - len] = { off: pos_a.off, tl: pos_b.off - pos_a.off  + pos_b.tl };

                            stack[stack.length - len] = fns[body](env, stack.slice(-len), { off: pos_a.off, tl: pos_b.off - pos_a.off  + pos_b.tl });

                            if (!DO_NOT_PUSH_TO_STACK) {
                                stack.length = stack.length - len + 1;
                                pos.length = pos.length - len + 1;
                            } else {
                                stack.length = stack.length - len;
                                pos.length = pos.length - len;
                            }

                        } break;

                    case 1: { //SHIFT;
                        const
                            has_len = (action >>> 1) & 1,
                            has_skip = (action >>> 2) & 1,
                            len = action >>> (3 + (has_skip * 15)),
                            skip = has_skip * ((action >>> 3) & (~(has_len * 0xFFFF8000)));
                        offset += skip;
                        if (has_len) {
                            stack.push(str.slice(offset, offset + len));
                            pos.push({ off: offset, tl: len });
                            offset += len;
                        }else {
                            stack.push("");
                            pos.push({ off: offset, tl: 0 });
                        }
                    } break;
                }
            }
        }
    
        return { result: stack, FAILED: !!FAILED, action_length, error_message, review_stack };
    }